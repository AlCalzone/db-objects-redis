{"version":3,"sources":["index.js"],"names":["_0x5deef4","require","_0x5247db","_0x378751","_0x1745b9","_0xec40a8","isDeepStrictEqual","_0x3d536d","_0x1298bc","_0x4819a0","__dirname","_0x3d9898","_0xd4230a","_0xe494d8","_0x6c0c7c","_0x10e41c","_0x236c86","_0x2122ec","_0x11f73b","Object","_0x371b94","Array","undefined","JSON","console","_0x5e05ce","_0x21f2c","_0x146b6c","_0x1bd0d5","_0x9ec61","_0x106ce4","_0x1c6bf0","_0x1bbc29","_0x5bb928","_0x4d49df","_0x257bb2","_0x3a6769","_0x1791d9","constructor","_0x3a956a","_0x37b320","_0x144423","RegExp","_0x54241d","_0x2db807","_0x3ecea1","_0x577047","_0x2d506f","_0x56fd2f","_0x5a2af7","_0xa1e833","Error","_0x74ce00","_0x155a6e","_0x44fe11","_0x28e4ec","_0x5e3646","_0xc1a0e9","_0x16a32e","_0x5e3f56","_0x3731fc","_0xf98eb1","_0x1167e4","setImmediate","_0x137358","_0x225c49","_0x44c707","_0x283627","_0x3486e7","_0x23b54c","_0x290df7","_0x4c9a25","_0x15a3a7","_0x3bac0f","_0x1bd526","_0x2aa949","_0x43d61f","_0xce0e0","_0x384b28","_0x1fcb36","_0x45de55","_0x335d4f","_0x4cee86","_0x3ab59c","_0x57fc62","_0x200dd7","Promise","_0x42e97f","_0x238940","_0x22ab41","_0xbd73ff","Buffer","_0x412b16","_0x8128a6","_0x24a841","_0x586245","_0x440b6a","_0x14e97b","_0x4d20a0","_0x348f7d","_0x1020e3","_0x53df19","_0x1cf452","_0x49dc15","_0x12f6f8","_0x303e2b","_0x302447","_0x688bd5","_0x31a2d6","_0x1ab31a","_0xcd59d8","_0x457dd9","_0x548927","_0x53a2fe","_0x2fbf5f","_0x1c49a1","_0x3d7d20","_0x296eff","_0x5ca7e4","_0x143c7f","_0x20d6f6","_0x238101","_0x518814","_0x5acd5f","_0x3770ca","_0x592288","_0x115c9c","_0x5665be","_0x15cdb1","_0x32d8db","_0x202a6a","_0xb76a01","_0x18344b","_0x4861a0","_0x54d2f6","_0x2d2604","_0x570468","_0x456890","_0x5e34cb","_0x107e34","_0x5d07b2","_0x221c9b","_0x2bcd8a","_0x3b27c3","_0x514c91","_0x20b755","_0x1ab75f","_0xbef891","_0x22a3f9","Date","_0x164a12","_0x41f766","_0x2992bc","_0x108194","_0x40bab8","_0x2be572","_0x1b6428","_0x127623","_0x385524","_0x543eb3","_0xc57f55","_0x1d23ea","_0x45f5de","_0x46b838","_0x3d00a9","_0xc38426","_0x5616c2","_0x12f10d","_0x2977fe","_0x4c822e","_0x3fd092","_0xa8c4b4","_0x492004","_0x3d3084","_0xfcf3a3","_0x3ba81f","_0x48217f","_0x4084d9","_0x362140","_0x19900b","_0x4122e6","_0xa0b5a3","_0x58984c","_0x1896db","_0x49891b","_0x47bb2a","_0x5e8261","_0x3d105b","_0x30dc7c","_0x182910","_0x26cbe3","_0x318c45","_0x3d5e47","_0x3dab23","_0x703ee8","_0x35d3dc","_0x473c51","_0x13dd73","_0x4721be","_0x4bcdc9","_0x4d0476","_0x34a034","_0x5f0faa","_0x122c1c","_0x1183eb","_0x2aec26","_0x58e733","_0x28f86e","_0x3c5806","_0x951396","_0x35245d","_0x2979c5","_0x4d884c","_0x4d55ca","_0x18bc70","_0x234966","_0x13d2fa","_0x15ee65","_0x47c3ee","_0xf24a1d","_0x1e040e","_0x17d334","_0x58ae7b","_0x20b914","_0x123e00","_0x280fb8","_0x3f9251","_0x48c2da","_0x1847c9","_0x284bdc","_0x3266a1","_0xb4d944","_0x543dae","_0x4024f7","_0x216af7","_0x5592f0","_0x21b168","_0x43bf96","_0x40a4e8","_0x4d3deb","_0x263bc1","_0x1a8b3e","_0x3c7acc","_0x2a16b2","_0x131f01","_0x595989","_0x10047a","_0x22fab6","_0xd0cd17","_0x5c19e1","_0x3296b9","_0x3262a9","_0x38eed2","_0x568255","_0x241a40","_0x35f238","_0x514801","_0x21f662","_0x5c9fe0","_0x5d1533","_0x2375f5","_0x297487","_0x59adf3","_0x1e73f1","_0x2583af","_0x1782fb","_0x4faaca","_0x10e061","_0x1451aa","_0x4ed4e2","_0x3e819d","_0x514018","_0x1ba02c","_0x4982d3","_0x11ea6c","_0x3d541a","_0x514e23","_0x10ca3c","_0x34ccd0","_0x5c5d42","_0x2c8594","_0x1e9608","_0x4059d7","_0x59c4ee","_0x44460c","_0x1924ec","_0x2f6a44","_0x4ef3eb","_0x2072c6","_0x269770","_0x3b1037","_0xda2591","_0x445c87","_0x570f9b","_0x221f37","_0x3c6f45","_0x2f28c7","_0x3bec02","_0x3c32d6","_0x4617ad","_0x253b97","_0x15eb5d","_0x136ef2","_0x140220","_0x2f40c0","_0xbfcdf4","_0x30e481","_0x2b0a7b","_0x54a1de","_0x252ddc","_0x30e940","_0x38022d","_0x358457","_0x1a6fd7","_0x588678","_0x4314e0","_0x40b057","_0x3ed719","_0x20e788","_0xda6d5f","_0x374adb","_0x5b6053","_0x51b94b","_0x366351","_0x2414a5","_0x29d62f","_0x3100d6","_0x345257","_0x1435cd","_0x920f08","_0x55788e","_0x4d4283","_0x1ba7fc","_0x382d34","_0x618ef","_0x5444dc","_0x3f85d5","_0x1d98e0","_0x95fdfc","_0x58f984","_0x4b6dfa","_0x4e088b","_0x3d0a3f","_0xea3326","_0x203efd","_0x38eb2e","_0x1287a0","_0xa381aa","_0x5d92d7","_0x401d50","_0x33c6a0","_0x443731","_0x3ec436","_0x27875b","_0x358df6","_0x43a3e4","_0x241def","_0x5695e4","_0x1462cf","_0x2cf56d","_0x4f018e","_0x2e4748","_0x24909e","_0x1ee2e1","_0x5b56de","_0x3f56f7","_0x49282e","_0x21c6e7","_0x5eddb3","_0x1c06bb","_0xf99e58","_0x32f4a3","_0x12fbc5","_0x3c4666","_0xae7f2b","_0x110c99","_0x2bf14c","_0x1c6d1a","_0x234249","_0x19a89f","_0x865d69","_0x42eac4","_0x5e92fb","_0x1d55fe","_0x5749a1","_0x875a12","_0x4d5b50","_0xf742b4","_0x3995d9","_0x260f91","_0x5ea2b1","_0xe84fd1","_0x115d72","_0x478645","_0x4529b7","_0x1c7b76","_0xde6f50","_0x442cc9","_0x2295cd","_0x5257eb","_0x6cecf7","_0x4f73f8","_0x517d58","_0x209a19","_0x4da1ac","_0x23d1fe","_0x4c710d","_0x5b4c6f","_0x4a1330","_0x1d27b1","_0x4347f9","_0x49a267","_0x1e2b77","_0x582537","_0xa001b7","_0x18c21c","_0x45d5ea","_0x554715","_0x33dffc","_0x3db813","_0x185133","_0x3a5541","_0x3061dc","_0x5b3929","_0x296a21","_0x18b035","_0xc54606","_0x5a54b8","_0x1b4043","_0x2e0b8c","_0x5ab3dd","_0x3f0171","_0x513a5a","_0x519399","_0x1496fc","_0x13f25e","_0x42ab8b","_0x4152ab","_0xacfdad","_0x289e22","_0x31218d","_0x43696f","_0x107ab3","_0x366a45","_0x173391","_0x3dba40","_0x2b9f31","_0x3a4e69","_0x3f9128","_0x49b5dd","_0x238e61","_0x5f137c","_0x22369c","_0x281403","_0x15f449","_0x3ab1b6","_0xf2d82c","_0x17310f","_0x13485f","_0x452b3e","_0x343142","_0x43c57f","_0x16864c","_0x2d8a33","_0x2860fb","_0x1a26a3","_0x2002b4","_0x7cde29","_0x575340","_0x161afc","_0x3d0f92","_0x143254","_0x4c154a","_0x1bbec7","_0x267e37","_0x3be4f2","_0x96ad24","_0x421a9c","parseInt","_0x24d1f5","_0x428733","_0x255e8a","_0x247394","_0x3c0fe4","_0xed07f","_0x5755a0","_0x2953b8","_0x123f92","_0x56bd47","_0x273e8b","_0x344a75","_0x50ed73","_0x12c0ee","_0x506500","_0x1a87ca","_0x16928d","_0xb28348","_0x2871fc","_0x22f5cf","_0x1b1a8d","_0x57ffde","_0x5b7236","_0x16a2d6","_0x55038f","_0x19b7e1","_0xce7abe","_0x4c13ca","_0xcb901c","_0xca788c","_0x287d82","_0x1db5aa","_0x19bdda","_0x6d101d","_0x50e656","_0x4b1720","_0x369726","_0xa82e","_0x4b5684","_0x4b5946","_0xa4e98b","_0x2e927a","_0x12249d","_0x5effb4","_0x187237","_0x283d16","_0x4bc22b","_0x4f2a81","_0x5605e0","_0x2190d9","_0x38565a","_0x5d506d","_0xa341d7","_0x2b7427","_0x44433f","_0x2ad1dd","_0x1d8c41","_0x3796ae","_0x2449da","_0x459935","_0x2191cd","_0x477f4c","_0x443623","_0x5051c3","_0x107cf5","_0x1f0419","_0xb3caef","_0x5221c2","_0x61d33c","_0x553ffe","_0x590cd7","_0x100532","_0x44e6a7","_0x49915b","_0x571827","_0x1ec86d","_0x76eb26","_0x1f22f4","_0x7f5a2f","_0x100038","_0x8971e6","_0x91baf","_0x481a5d","_0x3f40fc","_0x263668","_0x4a4ca0","_0x4dbc91","_0x335be6","_0x497a6b","_0x356522","_0x46659d","_0x636805","_0x9f6a27","_0x33b596","_0x2ac7e6","_0x347619","_0x584c53","_0x36c746","_0x37cf8e","_0x802e6a","_0xa88c80","_0x204b3b","_0x16b9d3","_0x1e33bb","_0x372f6d","_0x1db29a","_0x118c9c","_0x1ff901","_0x55ea7c","_0x3eeb3a","_0x52a199","_0x3aaf30","_0x1235b5","_0x2c6e4e","_0x3a533a","_0x1a4050","_0x50d4f2","_0x4b8164","_0x1e6f96","_0x478ecb","_0x2b3282","_0xb3579a","_0x365c5f","_0x152fc5","_0x4aeb24","_0x35b126","_0x418886","_0x2adbc6","_0x5b3dea","_0x4e03d7","_0x3897c6","_0x47f953","_0xdfe876","_0x10e768","_0x5169ce","_0x2e1ff9","_0x53505b","_0x15c6ef","_0x69bd54","_0x3f4d3e","_0x4c90b2","_0x455457","_0x2765d8","_0x47cc16","_0x15441f","_0x42080d","_0x4d260e","_0x3ca140","_0x17620b","_0x58d884","_0x5388a1","_0x3f779a","_0x2eef33","_0x33944d","_0x25d7c6","_0x5127d6","_0xe74375","_0x3c565b","_0x445ef1","_0x16f328","_0x5182eb","_0x4ccc2f","_0x3b0513","_0x422b79","_0x22cc3c","_0x8c811d","_0x4b54e0","_0x31821e","_0x75fff6","_0x485ade","_0x2408cc","_0x540bb0","_0x58d2af","_0xb74630","_0x30f98e","_0x500b9b","_0x4ed8ab","_0x1c3e22","_0xbdfd5c","_0x429430","_0xc40a2d","_0x298e10","_0xdc8430","_0x452e32","_0x5c7b00","_0x44371c","_0x1447fe","_0x27b947","_0x1b7f62","_0x2312b2","_0x2ee88b","_0x5e2e0f","_0x3f4277","_0x465c65","_0x4e5a66","_0x4b9441","_0x199414","_0x31888b","_0x386a60","_0x5b7e72","_0x487b57","_0x5a9f5e","_0x5f24c5","_0xb17a6a","_0x5f2246","_0x71ec20","_0x444f7e","_0x884ffd","_0x10e172","_0x1e0cd9","_0x325a61","_0x27377e","_0x181857","_0x55f404","_0x8c7fd7","_0x29559c","_0x26c084","_0x47e911","_0x157a96","_0x7cefe9","_0x1c7031","_0x5b234c","_0xba1e87","_0x2001c1","_0x38a118","_0x450f10","_0x3945c5","_0x3bbd99","_0x20fcbb","_0x266e7a","_0x19df49","_0x3d7f8f","_0x376ad9","_0x2fd2f1","_0x489e08","_0x1ec6eb","_0x496517","_0x27f5fd","_0x1d3bc6","_0x35d5a0","_0x3bb489","_0x262c04","_0x25cfca","_0x562b1f","_0x4ebbc1","_0x50ef86","_0x5e828a","_0x340775","_0x2e2ff2","_0xe42e6a","_0x568fa2","_0x3a0177","_0x160c6f","_0x5f266b","_0x18cde0","_0x2e1e50","_0x46b6e4","_0x56669e","_0x279452","_0x3178f9","_0x299aba","_0x5ebb33","_0x4b2585","_0x13d593","_0x55ae64","_0x53cd8a","_0x16c4a3","_0x2661be","_0x61dc83","_0x5ac7c5","_0x565b01","_0x1efc84","_0x127e77","_0x44daaa","_0x403061","_0x2a58da","_0x38600e","_0xc950b3","_0x126dda","_0x14386b","_0x274227","_0x64803d","_0x37298a","_0x4a3a07","_0x1d614b","_0x3ffea8","_0x52524b","_0x3113c1","_0x473cca","_0x15c975","_0x38738b","_0x5248df","_0x19e9fd","_0x7a337a","_0x16b1bf","_0x41bb5e","_0x3d44dc","_0x4a846e","_0x1e3dec","_0x298537","_0x38a5ae","_0xa3ce3d","_0xe4e00b","_0x4bb155","_0x1f7865","_0x195129","_0x547ef3","_0x5c0fdf","_0x3bde24","_0x24ffdf","_0x5094a1","_0x147868","_0x496ba6","_0x3863b2","_0x505a8a","_0x319779","_0x148d61","_0x1066c7","_0x10923d","_0x126edb","_0x36e733","_0x5a3055","_0x3406d4","_0x19b6c1","_0x1d1a1a","_0x454a0f","_0x319ae3","_0x4200ef","_0x510424","_0x3b9085","_0x161d24","_0x4978d1","_0x101725","_0x4f47ac","_0x5501f5","_0x11ea3b","_0x5dd7e9","_0x43aedb","_0x2c3227","_0x39b5f9","_0x592b4b","_0x4a9ad1","_0x42b32b","_0x21fd32","_0x832b60","_0x55a95c","_0x36aa64","_0x2e44a3","_0x362e50","_0x4b71a2","_0x575a8e","_0x5a3751","_0x35b5fb","_0x1d3b72","_0x2ab734","_0x37c20a","_0x4815e3","_0x130679","_0x372455","_0x2aa642","_0x25eecf","_0x23ae54","_0x2277a6","_0x269ed7","_0x5c10aa","_0x15efeb","eval","_0x571259","_0x4f0b4b","_0x5a5fed","_0x31da6b","_0xd34187","_0x311be9","_0x4b0055","_0x8dfd9c","_0x107d8b","_0x2395a3","_0x389241","_0x206c9e","_0x36a16f","_0x2a595b","_0x3e078b","_0x42509d","_0x2bf424","_0x1e5048","_0x485ebe","_0x6ad71c","_0x593867","_0x59b393","_0xc2707c","_0xe7d821","_0x5c1ea9","_0x31f338","_0x40691e","_0x3dc529","_0x4a37d0","_0x5db10f","_0x32de19","_0x36a055","_0x1412fc","_0x12fd05","_0x542eb6","_0x133968","_0x55345d","_0x441299","_0x110ff6","_0x14ac58","_0x430170","_0x59a847","_0x1ad75b","_0x236b4c","_0x6adae2","_0x1e1165","_0x49736b","_0x4ac93d","_0xb3b22b","_0x6222ae","_0x4f1efc","_0x436beb","_0x5e2ab2","_0x426256","_0x2c5782","_0x15326c","_0x394633","_0x3ea978","_0x2fba27","_0x30d5e6","_0x5c0e2b","_0x3df1a4","_0x444c9d","_0x4188c","_0x322d07","_0x3e078d","_0x1fa2b7","_0x34614f","_0x212ee7","_0x32d2bc","_0x1d0c13","_0x93c781","_0x308f6a","_0x59161b","_0x256134","_0x4e172a","_0x6192a2","_0x581dce","_0xc4bdd3","_0x47a62e","_0x3fd495","_0x316c3e","_0x34463d","_0x30ea43","_0x4d214e","_0x37a3ca","_0x4e92bd","_0x138f67","_0xe60d27","_0xe1150b","_0x550c92","_0x1b480f","_0x27d57d","_0x1e20a3","_0x24a9ab","_0xea2f47","_0x1596b6","_0x24a2e0","_0x3b4905","_0x4cac33","_0x2330cf","_0x299a18","_0x398364","_0x2942b3","_0x3ac045","_0x332720","_0x1dbb68","_0xe12d5f","_0x4cf7e9","_0x3fca76","_0x39da2c","_0xf061fc","_0x39d963","_0x435244","_0x375a9f","_0x26e611","_0x3ffa03","_0x122a1f","_0x515859","_0x2a6014","_0x476e25","_0x5f3407","_0x27616d","_0x5e5e0d","_0x4fc5ad","_0x2bd984","_0x4adddd","_0x2e41af","_0x5e0184","_0x279cfe","_0x50c4f7","_0x482272","_0xaad0f1","_0x1c75cd","_0x275f04","_0x4c8e3a","_0x27266c","_0x4e7a6a","_0x323969","_0x3d90da","_0x2ed245","_0x5c81e5","_0x27a337","_0x419af0","_0x18a870","_0x311ffe","_0x1ba5d9","_0x243dfa","_0x478fb5","_0x3aec9e","_0x26d325","_0x214ac0","_0x2d1043","_0x5121f7","_0xd4bfbf","_0x59a1e2","_0x14286b","_0x532618","_0xfa27ea","_0x237d45","_0x4bf782","_0x566190","_0x415e2f","_0x4fd716","_0x36fc91","_0x5a253a","_0x4be67a","_0x472094","_0x1addc6","_0xdffafe","_0x47cb49","_0x5f1611","_0x1dc702","_0x3c5af3","_0x5975f9","_0x2383cc","_0x57ae2d","_0x24ff89","_0x3c83b7","_0x410116","_0x1a8437","_0x5533ba","_0x171d4f","_0x2981f0","_0x5aa81e","_0x28d7df","_0x31b966","_0x4446d4","module"],"mappings":"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","sourcesContent":["/**\n * Object DB in REDIS - Client\n *\n * Copyright (c) 2018-2020 ioBroker GmbH - All rights reserved.\n *\n * You may not to use, modify or distribute this package in any form without explicit agreement from ioBroker GmbH.\n *\n * Unauthorized using, modifying or copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential\n * Written by bluefox <dogafox@gmail.com>, 2014-2019\n *\n */\n/* jshint -W097 */\n/* jshint strict: false */\n/* jslint node: true */\n/* jshint -W061 */\n'use strict';\n\nconst extend                = require('node.extend');\nconst Redis                 = require('ioredis');\n\nconst fs                    = require('fs');\nconst path                  = require('path');\nconst crypto                = require('crypto');\nconst { isDeepStrictEqual } = require('util');\nconst deepClone             = require('deep-clone');\n\nconst utils                 = require(path.join(getControllerDir() || __dirname, 'objectsUtils.js'));\n\n// copied from tools.js\n/**\n * Converts ioB pattern into regex.\n * @param {string} pattern - Regex string to us it in new RegExp(pattern)\n * @returns {string}\n */\nfunction pattern2RegEx(pattern) {\n    pattern = (pattern || '').toString()\n        .replace(/\\$/g, '\\\\$')\n        .replace(/\\^/g, '\\\\^');\n\n    if (pattern !== '*') {\n        if (pattern[0] === '*' && pattern[pattern.length - 1] !== '*') pattern += '$';\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] === '*') pattern = '^' + pattern;\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] !== '*') pattern = '^' + pattern + '$';\n    }\n\n    pattern = pattern\n        .replace(/\\?/g, '\\\\?')\n        .replace(/\\./g, '\\\\.')\n        .replace(/\\(/g, '\\\\(')\n        .replace(/\\)/g, '\\\\)')\n        .replace(/\\[/g, '\\\\[')\n        .replace(/]/g, '\\\\]')\n        .replace(/\\*/g, '.*');\n\n    return pattern;\n}\n\nlet crypto_;\n\n/**\n * recursively copy values from old object to new one\n *\n * @alias copyAttributes\n * @memberof tools\n * @param {object} oldObj source object\n * @param {object} newObj destination object\n * @param {object} [originalObj] optional object for read __no_change__ values\n * @param {boolean} [isNonEdit] optional indicator if copy is in nonEdit part\n *\n */\nfunction copyAttributes(oldObj, newObj, originalObj, isNonEdit) {\n    Object.keys(oldObj).forEach(attr => {\n        if (typeof oldObj[attr] !== 'object' || oldObj[attr] instanceof Array) {\n            if (oldObj[attr] === '__no_change__' && originalObj && !isNonEdit) {\n                if (originalObj[attr] !== undefined) {\n                    newObj[attr] = JSON.parse(JSON.stringify(originalObj[attr]));\n                } else {\n                    console.log(`Attribute ${attr} ignored by copying`);\n                }\n            } else\n            if (oldObj[attr] === '__delete__' && !isNonEdit) {\n                if (newObj[attr] !== undefined) {\n                    delete newObj[attr];\n                }\n            } else {\n                newObj[attr] = oldObj[attr];\n            }\n        } else {\n            newObj[attr] = newObj[attr] || {};\n            copyAttributes(oldObj[attr], newObj[attr], originalObj && originalObj[attr], isNonEdit || attr === 'nonEdit');\n        }\n    });\n}\n\n/**\n * Checks the flag nonEdit and restores non-changeable values if required\n *\n * @alias checkNonEditable\n * @memberof tools\n * @param {object} oldObject source object\n * @param {object} newObject destination object\n *\n */\nfunction checkNonEditable(oldObject, newObject) {\n    if (!oldObject) {\n        return true;\n    } else\n    if (!oldObject.nonEdit && !newObject.nonEdit) {\n        return true;\n    }\n\n    // if nonEdit is protected with password\n    if (oldObject.nonEdit && oldObject.nonEdit.passHash) {\n        // If new Object wants to update the nonEdit information\n        if (newObject.nonEdit && newObject.nonEdit.password) {\n            crypto_ = crypto_ || require('crypto');\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\n            if (oldObject.nonEdit.passHash !== hash) {\n                delete newObject.nonEdit;\n                return false;\n            } else {\n                oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\n                delete oldObject.nonEdit.password;\n                delete newObject.nonEdit.password;\n                oldObject.nonEdit.passHash = hash;\n                newObject.nonEdit.passHash = hash;\n            }\n            copyAttributes(newObject.nonEdit, newObject, newObject);\n\n            if (newObject.passHash) {\n                delete newObject.passHash;\n            }\n            if (newObject.nonEdit && newObject.nonEdit.password) {\n                delete newObject.nonEdit.password;\n            }\n\n            return true;\n        } else {\n            newObject.nonEdit = oldObject.nonEdit;\n        }\n\n    } else if (newObject.nonEdit) {\n        oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\n        if (newObject.nonEdit.password) {\n            crypto_ = crypto_ || require('crypto');\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\n            delete oldObject.nonEdit.password;\n            delete newObject.nonEdit.password;\n            oldObject.nonEdit.passHash = hash;\n            newObject.nonEdit.passHash = hash;\n        }\n    }\n\n    // restore settings\n    copyAttributes(oldObject.nonEdit, newObject, oldObject);\n\n    if (newObject.passHash) {\n        delete newObject.passHash;\n    }\n    if (newObject.nonEdit && newObject.nonEdit.password) {\n        delete newObject.nonEdit.password;\n    }\n    return true;\n}\n\nconst tools       = {\n    checkNonEditable,\n    pattern2RegEx\n};\n\nconst scriptFiles = {};\nscriptFiles.custom = '-- design: custom\\n-- search: state\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc.type===\"state\" && (doc.common.custom || doc.common.history))\\n--          emit(doc._id, doc.common.custom || doc.common.history)\\n--   }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.type == \"state\" and decoded.common ~= nil and decoded.common.custom ~= nil) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.filter = '-- func: function(doc) { if (doc.type === \"%1\") emit(doc._id, doc); }\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[5];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal type=KEYS[4]\\nlocal obj\\nlocal decoded\\n-- function(doc) { if (doc.type === \"chart\") emit(doc._id, doc); }\\nfor _,key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        obj = redis.call(\"get\", key)\\n        if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded and decoded.type == type) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n    end\\nend\\nreturn {rep, cursor}';\nscriptFiles.programs = '-- design: hm-rega\\n-- search: programs\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"PROGRAM\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and decoded.native.TypeName == \"PROGRAM\") then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.script = '-- design: script\\n-- search: javascript\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\n--  function(doc) {\\n--      if (doc.type === \"script\" && doc.common.engineType.match(/^[jJ]ava[sS]cript|^[cC]offee[sS]cript|^[tT]ype[sS]cript|^Blockly/)) emit(doc.common.name, doc); }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t\tif (obj ~= nil and obj ~= \"\" and cjson.decode(obj).type == \"script\") then\\n            rep[#rep+1] = obj\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.variables = '-- design: hm-rega\\n-- search: variables\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"ALARMDP\" || doc.native.TypeName === \"VARDP\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and (decoded.native.TypeName == \"ALARMDP\" or decoded.native.TypeName == \"VARDP\")) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\n\nfunction getControllerDir() {\n    const possibilities = ['iobroker.js-controller', 'ioBroker.js-controller'];\n    let controllerPath = null;\n    for (const pkg of possibilities) {\n        try {\n            const possiblePath = require.resolve(pkg);\n            if (fs.existsSync(possiblePath)) {\n                controllerPath = possiblePath;\n                break;\n            }\n        } catch (_a) {\n            /* not found */\n        }\n    }\n    // Apparently, checking vs null/undefined may miss the odd case of controllerPath being \"\"\n    // Thus we check for falsyness, which includes failing on an empty path\n    if (!controllerPath) {\n        controllerPath = path.join(__dirname, '..', '..', 'lib', 'objects');\n        if (!fs.existsSync(controllerPath)) {\n            controllerPath = null;\n        }\n    } else {\n        controllerPath = path.join(path.dirname(controllerPath), 'lib', 'objects');\n    }\n    return controllerPath;\n}\n\nclass ObjectsInRedis {\n\n    constructor(settings) {\n        const originalSettings = settings;\n        this.settings = settings || {};\n        this.redisNamespace = (this.settings.redisNamespace || (this.settings.connection && this.settings.connection.redisNamespace) || 'cfg') + '.';\n        this.fileNamespace = this.redisNamespace + 'f.';\n        this.fileNamespaceL = this.fileNamespace.length;\n        this.objNamespace = this.redisNamespace + 'o.';\n        this.objNamespaceL = this.objNamespace.length;\n        const ioRegExp = new RegExp('^' + this.objNamespace.replace(/\\./g, '\\\\.') + '[_A-Za-z0-9ÄÖÜäöüа-яА-Я]+'); // cfg.o.[_A-Za-z0-9]+\n\n        const onChange = this.settings.change; // on change handler\n        const onChangeUser = this.settings.changeUser; // on change handler for User events\n\n        this.stop = false;\n        this.client = null;\n        this.sub = null;\n        this.subSystem = null;\n        this.preserveSettings = ['custom', 'smartName', 'material', 'habpanel', 'mobile'];\n        this.defaultNewAcl = this.settings.defaultNewAcl || null;\n        this.namespace = this.settings.namespace || this.settings.hostname || '';\n        this.scripts = {};\n\n        // cached meta objects for file operations\n        this.existingMetaObjects = {};\n\n        this.log = utils.getLogger(this.settings.logger);\n\n        this.settings.connection = this.settings.connection || {};\n\n        // limit max number of log entries in the list\n        this.settings.connection.maxQueue = this.settings.connection.maxQueue || 1000;\n\n        this.settings.connection.options = this.settings.connection.options || {};\n        const retry_max_delay = this.settings.connection.options.retry_max_delay || 2000;\n        const retry_max_count = this.settings.connection.options.retry_max_count || 19;\n\n        this.settings.connection.options.retryStrategy = reconnectCount => {\n            if (!ready && initError && ignoreErrors) {\n                return new Error('No more tries');\n            }\n            if (this.stop) {\n                return new Error('Client has stopped ... no retries anymore');\n            }\n            if (ready && reconnectCount >= retry_max_count) {\n                return new Error('Stop trying to reconnect');\n            }\n            // A function that receives an options object as parameter including the retry attempt,\n            // the total_retry_time indicating how much time passed since the last time connected,\n            // the error why the connection was lost and the number of times_connected in total.\n            // If you return a number from this function, the retry will happen exactly after that\n            // time in milliseconds. If you return a non-number, no further retry will happen and\n            // all offline commands are flushed with errors. Return an error to return that\n            // specific error to all offline commands.\n\n            if (!ready) {\n                return 300;\n            } else {\n                return retry_max_delay;\n            }\n            /*if (options.error.code === 'ECONNREFUSED') {\n                // End reconnecting on a specific error and flush all commands with a individual error\n                return new Error('The server refused the connection');\n            }\n            if (options.total_retry_time > 1000 * 60 * 60) {\n                // End reconnecting after a specific timeout and flush all commands with a individual error\n                return new Error('Retry time exhausted');\n            }\n            if (options.times_connected > 10) {\n                // End reconnecting with built in error\n                return undefined;\n            }\n            // reconnect after\n            return Math.max(options.attempt * 100, 3000);*/\n        };\n\n        delete this.settings.connection.options.retry_max_delay;\n        this.settings.connection.options.enableReadyCheck = true;\n\n        let ready = false;\n        let initError = false;\n        let ignoreErrors = false;\n        let connected = false;\n        let reconnectCounter = 0;\n\n        if (this.settings.connection.port === 0) { // Port = 0 means unix socket\n            // initiate a unix socket connection\n            this.settings.connection.options.path = this.settings.connection.host;\n            this.log.debug(this.namespace + ' Redis Objects: Use File Socket for connection: ' + this.settings.connection.options.path);\n        } else if (Array.isArray(this.settings.connection.host)) { // Host is an array means we use a sentinel\n            const defaultPort = Array.isArray(this.settings.connection.port) ? null : this.settings.connection.port;\n\n            this.settings.connection.options.sentinels = this.settings.connection.host.map((redisNode, idx) => ({\n                host: redisNode,\n                port: defaultPort || this.settings.connection.port[idx]\n            }));\n\n            this.settings.connection.options.name = this.settings.connection.sentinelName ? this.settings.connection.sentinelName : 'mymaster';\n            this.log.debug(this.namespace + ' Redis Objects: Use Sentinel for connection: ' + this.settings.connection.options.name + ', ' + JSON.stringify(this.settings.connection.options.sentinels));\n        } else {\n            this.settings.connection.options.host = this.settings.connection.host;\n            this.settings.connection.options.port = this.settings.connection.port;\n            this.log.debug(this.namespace + ' Redis Objects: Use Redis connection: ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port);\n        }\n        this.settings.connection.options.db = this.settings.connection.options.db || 0;\n        this.settings.connection.options.family = this.settings.connection.options.family || 0;\n        this.settings.connection.options.password = this.settings.connection.pass || null;\n\n        this.settings.connection.options.autoResubscribe = false; // We do our own resubscribe because other sometimes not work\n\n        this.client = new Redis(this.settings.connection.options);\n\n        this.client.on('error', error => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Redis ERROR Objects: (' + ignoreErrors + '/' + this.stop + ') ' + error.message + ' / ' + error.stack);\n            if (this.stop) {\n                return;\n            }\n            if (!ready) {\n                initError = true;\n                // Seems we have a socket.io server\n                if (!ignoreErrors && error.message.startsWith('Protocol error, got \"H\" as reply type byte.')) {\n                    this.log.error('Socket.io Server detected. Please update to js-controller 2.0 or higher!');\n                }\n                return;\n            }\n            this.log.error(this.settings.namespace + ' ' + error.message);\n        });\n\n        this.client.on('end', () => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end (stop=' + this.stop + ')');\n            ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\n        });\n\n        this.client.on('connect', () => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event connect (stop=' + this.stop + ')');\n            connected = true;\n        });\n\n        this.client.on('close', () => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event close (stop=' + this.stop + ')');\n            //if (ready && typeof this.settings.disconnected === 'function') this.settings.disconnected();\n        });\n\n        this.client.on('reconnecting', () => {\n            if (connected && !ready && !initError && !ignoreErrors) {\n                reconnectCounter++;\n            }\n\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')');\n\n            if (reconnectCounter > 2) { // fallback logic for nodejs <10\n                this.log.error('Could not connect database at ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port + ' (invalid protocol). Please make sure the configured IP and port points to a host running JS-Controller >= 2.0.');\n                return;\n            }\n            connected = false;\n            initError = false;\n        });\n\n        this.client.on('ready', () => {\n            if (this.stop) {\n                return;\n            }\n            initError = false;\n            ignoreErrors = false;\n\n            this.log.debug(this.namespace + ' Objects client ready ... initialize now');\n            this.client.config('set', ['lua-time-limit', 10000], err => { // increase LUA timeout TODO needs better fix\n                if (err) {\n                    this.log.warn('Unable to increase LUA script timeout: ' + err);\n                }\n                let initCounter = 0;\n                if (!this.subSystem && typeof onChange === 'function') {\n                    initCounter++;\n                    this.log.debug(this.namespace + ' Objects create System PubSub Client');\n                    this.subSystem = new Redis(this.settings.connection.options);\n                    this.subSystem.ioBrokerSubscriptions = {};\n\n                    if (typeof onChange === 'function') {\n                        this.subSystem.on('pmessage', (pattern, channel, message) =>\n                            setImmediate(() => {\n                                this.log.silly(this.namespace + ' Objects system redis pmessage ' + pattern + '/' + channel + ':' + message);\n                                try {\n                                    if (ioRegExp.test(channel)) {\n                                        const id = channel.substring(this.objNamespaceL);\n                                        try {\n                                            const obj = message ? JSON.parse(message) : null;\n\n                                            if (this.settings.controller &&\n                                                id === 'system.config' &&\n                                                obj &&\n                                                obj.common &&\n                                                obj.common.defaultNewAcl &&\n                                                !isDeepStrictEqual(obj.common.defaultNewAcl, this.defaultNewAcl)) {\n                                                this.defaultNewAcl = JSON.parse(JSON.stringify(obj.common.defaultNewAcl));\n                                                this.setDefaultAcl(this.defaultNewAcl);\n                                            }\n\n                                            onChange(id, obj);\n                                        } catch (e) {\n                                            this.log.warn(`${this.namespace} Objects Cannot process system pmessage ${id} - ${message}: ${e.message}`);\n                                            this.log.warn(`${this.namespace} ${e.stack}`);\n                                        }\n                                    } else {\n                                        this.log.warn(`${this.namespace} Objects Received unexpected system pmessage: ${channel}`);\n                                    }\n                                } catch (e) {\n                                    this.log.warn(this.namespace + ' Objects system pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\n                                    this.log.warn(this.namespace + ' ' + e.stack);\n                                }\n                            }));\n                    }\n\n                    this.subSystem.on('end', () => {\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis System Event end sub (stop=' + this.stop + ')');\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\n                    });\n\n                    this.subSystem.on('error', error => {\n                        if (this.stop) {\n                            return;\n                        }\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub System client Objects No redis connection: ' + JSON.stringify(error));\n                    });\n\n                    if (this.settings.connection.enhancedLogging) {\n                        this.subSystem.on('connect', () =>\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event connect (stop=' + this.stop + ')'));\n\n                        this.subSystem.on('close', () =>\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event close (stop=' + this.stop + ')'));\n\n                        this.subSystem.on('reconnecting', reconnectCounter =>\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\n                    }\n\n                    this.subSystem.on('ready', () => {\n                        if (--initCounter < 1) {\n                            if (this.settings.connection.port === 0) {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host);\n                            } else {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\n                            }\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\n                            ready = true;\n                        }\n                        // subscribe on system.config only if js-controller\n                        if (this.settings.controller) {\n                            this.subSystem.psubscribe(this.objNamespace + 'system.config');\n                        }\n                        Object.keys(this.subSystem.ioBrokerSubscriptions).forEach(sub => this.subSystem.psubscribe(sub));\n                    });\n                }\n\n                if (!this.sub && typeof onChangeUser === 'function') {\n                    initCounter++;\n                    this.log.debug(this.namespace + ' Objects create User PubSub Client');\n                    this.sub = new Redis(this.settings.connection.options);\n                    this.sub.ioBrokerSubscriptions = {};\n\n                    this.sub.on('pmessage', (pattern, channel, message) => {\n                        setImmediate(() => {\n                            this.log.silly(this.namespace + ' Objects user redis pmessage ' + pattern + '/' + channel + ':' + message);\n                            try {\n                                if (ioRegExp.test(channel)) {\n                                    const id = channel.substring(this.objNamespaceL);\n                                    try {\n                                        const obj = message ? JSON.parse(message) : null;\n\n                                        onChangeUser(id, obj);\n                                    } catch (e) {\n                                        this.log.warn(`${this.namespace} Objects user cannot process pmessage ${id} - ${message}: ${e.message}`);\n                                        this.log.warn(`${this.namespace} ${e.stack}`);\n                                    }\n                                } else {\n                                    this.log.warn(`${this.namespace} Objects user received unexpected pmessage: ${channel}`);\n                                }\n                            } catch (e) {\n                                this.log.warn(this.namespace + ' Objects user pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\n                                this.log.warn(this.namespace + ' ' + e.stack);\n                            }\n                        });\n                    });\n\n                    this.sub.on('end', () => {\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end user sub (stop=' + this.stop + ')');\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\n                    });\n\n                    this.sub.on('error', error => {\n                        if (this.stop) {\n                            return;\n                        }\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub user client Objects No redis connection: ' + JSON.stringify(error));\n                    });\n\n                    if (this.settings.connection.enhancedLogging) {\n                        this.sub.on('connect', () =>\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event connect (stop=' + this.stop + ')'));\n\n                        this.sub.on('close', () =>\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event close (stop=' + this.stop + ')'));\n\n                        this.sub.on('reconnecting', reconnectCounter =>\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\n                    }\n\n                    this.sub.on('ready', () => {\n                        if (--initCounter < 1) {\n                            if (this.settings.connection.port === 0) {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host);\n                            } else {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\n                            }\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\n                            ready = true;\n                        }\n                        Object.keys(this.sub.ioBrokerSubscriptions).forEach(sub => this.sub.psubscribe(sub));\n                    });\n                }\n\n                this.log.debug(this.namespace + ' Objects client initialize lua scripts');\n                initCounter++;\n                this.loadLuaScripts(() => {\n                    if (!this.client) {\n                        return;\n                    }\n                    // init default new acl\n                    this.client.get(this.objNamespace + 'system.config', (err, obj) => {\n                        if (obj) {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON system.config: ${obj}`);\n                                obj = null;\n                            }\n                            if (obj && obj.common && obj.common.defaultNewAcl) {\n                                this.defaultNewAcl = obj.common.defaultNewAcl;\n                            }\n                        } else {\n                            this.log.error(`${this.namespace} Cannot read system.config: ${obj} (OK when migrating or restoring)`);\n                        }\n\n                        if (--initCounter < 1) {\n                            if (this.settings.connection.port === 0) {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host);\n                            } else {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\n                            }\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\n                            ready = true;\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    getStatus() {\n        return {type: 'redis', server: false};\n    }\n\n    /**\n     * Checks if given Id is a meta object, else throws error\n     *\n     * @param {string} id to check\n     * @throws Error if id is invalid\n     */\n    async validateMetaObject(id) {\n        if (this.existingMetaObjects[id] === undefined) {\n            // if not cached -> getObject\n            const obj = await this.getObjectAsync(id);\n            if (obj && obj.type === 'meta') {\n                this.existingMetaObjects[id] = true;\n            } else {\n                this.existingMetaObjects[id] = false;\n                return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\n            }\n        } else if (this.existingMetaObjects[id] === false) {\n            return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\n        }\n    }\n\n    normalizeFilename(name) {\n        return name ? name.replace(/[/\\\\]+/g, '/') : name;\n    }\n\n    // -------------- FILE FUNCTIONS -------------------------------------------\n    _setBinaryState(id, data, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (!Buffer.isBuffer(data)) {\n            data = Buffer.from(data);\n        }\n        this.client.set(id, data, callback);\n    }\n\n    _getBinaryState(id, callback) {\n        if (typeof callback !== 'function') {\n            return this.log.error(this.namespace + ' no callback found in _getBinaryState');\n        }\n        if (!this.client) {\n            return setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n\n        this.client.getBuffer(id, (err, data) => {\n            if (!err && data) {\n                callback(err, data);\n            } else {\n                callback(err);\n            }\n        });\n    }\n\n    _delBinaryState(id, callback) {\n        if (!this.client) {\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        } else {\n            this.client.del(id, () => typeof callback === 'function' && callback());\n        }\n    }\n\n    getFileId(id, name, isMeta) {\n        name = this.normalizeFilename(name);\n        // e.g. ekey.admin and admin/ekey.png\n        if (id.match(/\\.admin$/)) {\n            if (name.match(/^admin\\//)) {\n                name = name.replace(/^admin\\//, '');\n            } else\n            // e.g. ekey.admin and iobroker.ekey/admin/ekey.png\n            if (name.match(/^iobroker.[-\\d\\w]\\/admin\\//i)) {\n                name = name.replace(/^iobroker.[-\\d\\w]\\/admin\\//i, '');\n            }\n        }\n        const normalized = utils.sanitizePath(id, name);\n        if (!normalized) {\n            this.log.debug(this.namespace + ' Invalid file path ' + id + '/' + name);\n            return '';\n        }\n        id = normalized.id;\n        name = normalized.name;\n\n        return this.fileNamespace + id + '$%$' + name + (isMeta !== undefined ? (isMeta ? '$%$meta' : '$%$data') : '');\n    }\n\n    checkFile(id, name, options, flag, callback) {\n        // read file settings from redis\n        const fileId = this.getFileId(id, name, true);\n        if (!fileId) {\n            const fileOptions = {'notExists': true};\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\n                return typeof callback === 'function' && setImmediate(() => callback(false, options, fileOptions)); // NO error\n            } else {\n                return typeof callback === 'function' && setImmediate(() => callback(true, options)); // error\n            }\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED, options));\n        }\n        this.client.get(fileId, (err, fileOptions) => {\n            fileOptions = fileOptions || '{\"notExists\": true}';\n            try {\n                fileOptions = JSON.parse(fileOptions);\n            } catch (e) {\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${fileOptions}`);\n                fileOptions = {notExists: true};\n            }\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\n                return typeof callback === 'function' && callback(false, options, fileOptions); // NO error\n            } else {\n                return typeof callback === 'function' && callback(true, options); // error\n            }\n        });\n    }\n\n    checkFileRights(id, name, options, flag, callback) {\n        return utils.checkFileRights(this, id, name, options, flag, callback);\n    }\n\n    _setDefaultAcl(ids, defaultAcl) {\n        if (ids && ids.length) {\n            const id = ids.shift();\n            this.getObject(id, (err, obj) => {\n                if (obj && !obj.acl) {\n                    obj.acl = defaultAcl;\n                    this.setObject(id, obj, null, () =>\n                        setImmediate(() =>\n                            this._setDefaultAcl(ids, defaultAcl)));\n                } else {\n                    setImmediate(() =>\n                        this._setDefaultAcl(ids, defaultAcl));\n                }\n            });\n        }\n    }\n\n    setDefaultAcl(defaultNewAcl) {\n        this.defaultNewAcl = defaultNewAcl || {\n            owner: utils.CONSTS.SYSTEM_ADMIN_USER,\n            ownerGroup: utils.CONSTS.SYSTEM_ADMIN_GROUP,\n            object: 0x664,\n            state: 0x664,\n            file: 0x664\n        };\n        // Get ALL Objects\n        this.getKeys('*', (err, ids) => this._setDefaultAcl(ids, this.defaultNewAcl));\n    }\n\n    getUserGroup(user, callback) {\n        return utils.getUserGroup(this, user, (error, user, userGroups, userAcl) => {\n            if (error) {\n                this.log.error(this.namespace + ' ' + error);\n            }\n            callback.call(this, user, userGroups, userAcl);\n        });\n    }\n\n    insert(id, attName, ignore, options, obj, callback) {\n        return utils.insert(this, id, attName, ignore, options, obj, callback);\n    }\n\n    _writeFile(id, name, data, options, callback, meta) {\n        const ext         = name.match(/\\.[^.]+$/);\n        const mime        = utils.getMimeType(ext);\n        const _mimeType   = mime.mimeType;\n        const isBinary    = mime.isBinary;\n\n        const metaID = this.getFileId(id, name, true);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        // virtual files only get Meta objects\n        if (options.virtualFile) {\n            meta = {\n                notExists: true,\n                virtualFile: true\n            }; // Store file with flags as it would not exist\n            this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(_err));\n        } else {\n            if (!meta) {\n                meta = {createdAt: Date.now()};\n            }\n            if (!meta.acl) {\n                meta.acl = {\n                    owner: options.user || (this.defaultNewAcl && this.defaultNewAcl.owner) || utils.CONSTS.SYSTEM_ADMIN_USER,\n                    ownerGroup: options.group || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\n                    permissions: options.mode || (this.defaultNewAcl && this.defaultNewAcl.file) || 0x644\n                };\n            }\n            meta.stats = {\n                size: data.length\n            };\n            if (meta.hasOwnProperty('notExists')) {\n                delete meta.notExists;\n            }\n\n            meta.mimeType = options.mimeType || _mimeType;\n            meta.binary = isBinary;\n            meta.acl.ownerGroup = meta.acl.ownerGroup || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\n            meta.modifiedAt = Date.now();\n\n            this._setBinaryState(this.getFileId(id, name, false), data, err => this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(err || _err)));\n        }\n    }\n    async writeFile(id, name, data, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (typeof options === 'string') {\n            options = {mimeType: options};\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.writeFile(id, name, data, options, err =>\n                    err ? reject(err) : resolve()));\n        }\n\n        try {\n            await this.validateMetaObject(id);\n        } catch (e) {\n            this.log.warn(`writeFile will not write this file (${name}) in future versions: ${e.message}`);\n            // todo: replace by below code in 3.1 + add test\n            // this.log.error(`Cannot write file ${name}: ${e.message}`);\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        // If file yet exists => check the permissions\n        return this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                return this._writeFile(id, name, data, options, callback, meta);\n            }\n        });\n    }\n\n    writeFileAsync(id, name, data, options) {\n        return new Promise((resolve, reject) =>\n            this.writeFile(id, name, data, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _readFile(id, name, options, callback, meta) {\n        if (meta.notExists) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        this._getBinaryState(this.getFileId(id, name, false), (err, buffer) => {\n            const mimeType = meta && meta.mimeType;\n            if (meta && !meta.binary && buffer) {\n                buffer = buffer.toString();\n            }\n            typeof callback === 'function' && callback(err, buffer, mimeType);\n        });\n    }\n    async readFile(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options  = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.readFile(id, name, options, (err, res, mimeType) =>\n                    err ? reject(err) : resolve({data: res, mimeType: mimeType})));\n        }\n\n        try {\n            await this.validateMetaObject(id);\n        } catch (e) {\n            this.log.warn(`readFile will not read this file (${name}) in future versions: ${e.message}`);\n            // todo: replace by below code in 3.1 + add test\n            // this.log.error(`Cannot read file ${name}: ${e.message}`);\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        options = options || {};\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                return this._readFile(id, name, options, callback, meta);\n            }\n        });\n    }\n\n    readFileAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.readFile(id, name, options, (err, res, mimeType) =>\n                err ? reject(err) : resolve({data: res, mimeType: mimeType})));\n    }\n\n    _unlink(id, name, options, callback, meta) {\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (meta && meta.notExists) {\n            this._rm(id, name, options, callback);\n            //typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        } else {\n            const metaID = this.getFileId(id, name, true);\n            const dataID = this.getFileId(id, name, false);\n            this._delBinaryState(dataID, _err => this.client.del(metaID, callback));\n        }\n    }\n    unlink(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options  = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string') {\n            name = '';\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file['delete']) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._unlink(id, name, options, callback, meta);\n                }\n            }\n        });\n    }\n    unlinkAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.unlink(id, name, options, (err) =>\n                err ? reject(err) : resolve()));\n    }\n\n    delFile(id, name, options, callback) {\n        return this.unlink(id, name, options, callback);\n    }\n    delFileAsync(id, name, options) {\n        return this.unlinkAsync(id, name, options);\n    }\n\n    _readDir(id, name, options, callback) {\n        name = this.normalizeFilename(name);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (id === '') { // special case for \"root\"\n            const dirID = this.getFileId('*', '*');\n            this.client.keys(dirID, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n\n                const result = [];\n                if (!keys || !keys.length) {\n                    return typeof callback === 'function' && callback(null, result);\n                }\n                let lastDir;\n                keys.sort().forEach(dir => {\n                    dir = dir.substring(this.fileNamespaceL, dir.indexOf('$%$'));\n                    if (dir !== lastDir) {\n                        result.push({\n                            file: dir,\n                            stats: {},\n                            isDir: true\n                        });\n                    }\n                    lastDir = dir;\n                });\n                typeof callback === 'function' && callback(err, result);\n            });\n            return;\n        }\n        const dirID = this.getFileId(id, name + (name.length ? '/' : '') + '*');\n        this.client.keys(dirID, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n\n            const start = dirID.indexOf('$%$') + 3;\n            const end = '$%$meta'.length;\n\n            const baseName = name + (name.length ? '/' : '');\n            const dirs = [];\n            const deepLevel = baseName.split('/').length;\n            if (!keys || !keys.length) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND, []);\n            }\n            keys = keys\n                .sort()\n                .filter(key => {\n                    if (key.match(/\\$%\\$meta$/)) {\n                        const parts = key.substr(start, key.length - end).split('/');\n                        if (parts.length === deepLevel) {\n                            return !key.includes('/_data.json$%$') && key !== '_data.json'; // sort out \"virtual\" files that are used to mark directories\n                        } else {\n                            const dir = parts[deepLevel - 1];\n                            if (dirs.indexOf(dir) === -1) {\n                                dirs.push(dir);\n                            }\n                        }\n                    }\n                });\n            if (!keys.length) {\n                const result = [];\n                while (dirs.length) {\n                    result.push({\n                        file: dirs.shift(),\n                        stats: {},\n                        isDir: true\n                    });\n                }\n                return typeof callback === 'function' && callback(err, result);\n            }\n\n            // Check permissions\n            this.client.mget(keys, (err, objs) => {\n                if (err) {\n                    return typeof callback === 'function' && callback(err, objs);\n                }\n                const result = [];\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                objs = objs || [];\n                for (let i = 0; i < keys.length; i++) {\n                    const file = keys[i].substring(start + baseName.length, keys[i].length - end);\n                    while (dirs.length && dirs[0] < file) {\n                        result.push({\n                            file: dirs.shift(),\n                            stats: {},\n                            isDir: true\n                        });\n                    }\n\n                    try {\n                        objs[i] = JSON.parse(objs[i]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                        continue;\n                    }\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                        if (!objs[i] || objs[i].virtualFile) {\n                            continue;\n                        } // virtual file, ignore\n                        objs[i].acl = objs[i].acl || {};\n                        if (options.user !== utils.CONSTS.SYSTEM_ADMIN_USER && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) === -1) {\n                            objs[i].acl.read  = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_READ);\n                            objs[i].acl.write = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_WRITE);\n                        } else {\n                            objs[i].acl.read  = true;\n                            objs[i].acl.write = true;\n                        }\n                        result.push({\n                            file: file,\n                            stats: objs[i].stats,\n                            isDir: false,\n                            acl: objs[i].acl,\n                            modifiedAt: objs[i].modifiedAt,\n                            createdAt:  objs[i].createdAt\n                        });\n                    }\n                }\n                while (dirs.length) {\n                    result.push({\n                        file: dirs.shift(),\n                        stats: {},\n                        isDir: true\n                    });\n                }\n                typeof callback === 'function' && callback(null, result);\n            });\n        });\n    }\n    async readDir(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string') {\n            name = '';\n        }\n\n        // remove first and last\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n        if (name.endsWith('/')) {\n            name = name.substring(0, name.length - 1);\n        }\n\n        try {\n            await this.validateMetaObject(id);\n        } catch (e) {\n            this.log.warn(`readDir will not read this directory (${name}) in future versions: ${e.message}`);\n            // todo: replace by below code in 3.1 + add test\n            // this.log.error(`Cannot read directory ${name}: ${e.message}`);\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.list) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    this._readDir(id, name, options, callback);\n                }\n            }\n        });\n    }\n    readDirAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.readDir(id, name, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    _renameHelper(keys, oldBase, newBase, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id = keys.shift();\n            this.client.rename(id.replace(/\\$%\\$meta$/, '$%$data'), id.replace(oldBase, newBase).replace(/\\$%\\$meta$/, '$%$data'), _err =>\n                this.client.rename(id, id.replace(oldBase, newBase), _err =>\n                    setImmediate(() => this._renameHelper(keys, oldBase, newBase, callback))));\n        }\n    }\n    _rename(id, oldName, newName, options, callback, meta) {\n        const oldMetaID = this.getFileId(id, oldName, true);\n        const oldDataID = this.getFileId(id, oldName, false);\n        const newMetaID = this.getFileId(id, newName, true);\n        const newDataID = this.getFileId(id, newName, false);\n        if (!meta || !this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        } else if (meta.notExists) {\n            oldName = this.normalizeFilename(oldName);\n            newName = this.normalizeFilename(newName);\n\n            // it could be dir\n            if (!oldName.endsWith('/*')) {\n                oldName += '/*';\n            } else if (oldName.endsWith('/')) {\n                oldName += '*';\n            }\n\n            if (!newName.endsWith('/*')) {\n                newName += '/*';\n            } else if (newName.endsWith('/')) {\n                newName += '*';\n            }\n\n            const oldBase = oldName.substring(0, oldName.length - 1);\n            const newBase = newName.substring(0, newName.length - 1);\n            const dirID = this.getFileId(id, oldName);\n            this.client.keys(dirID, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                if (err || !keys) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n\n                keys = keys\n                    .sort()\n                    .filter(key => key.match(/\\$%\\$meta$/));\n\n                if (!keys.length) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n                // Check permissions\n                this.client.mget(keys, (err, objs) => {\n                    let result;\n                    const dontCheck =\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                    objs = objs || [];\n                    if (!dontCheck) {\n                        result = [];\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                objs[i] = JSON.parse(objs[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                                continue;\n                            }\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                                result.push(keys[i]);\n                            }\n                        }\n                    } else {\n                        result = keys;\n                    }\n                    this._renameHelper(result, oldBase, newBase, callback);\n                });\n            });\n        } else {\n            this.client.rename(oldDataID, newDataID, _err =>\n                this.client.rename(oldMetaID, newMetaID, callback));\n        }\n    }\n    rename(id, oldName, newName, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        if (typeof oldName !== 'string' || !oldName.length || oldName === '/' || oldName === '//' ||\n            typeof newName !== 'string' || !newName.length || newName === '/' || newName === '//') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n        if (oldName.startsWith('/')) {\n            oldName = oldName.substring(1);\n        }\n        if (newName.startsWith('/')) {\n            newName = newName.substring(1);\n        }\n        if (oldName.endsWith('/')) {\n            oldName = oldName.substring(0, oldName.length - 1);\n        }\n        if (newName.endsWith('/')) {\n            newName = newName.substring(0, newName.length - 1);\n        }\n\n        this.checkFileRights(id, oldName, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    this._rename(id, oldName, newName, options, callback, meta);\n                }\n            }\n        });\n    }\n    renameAsync(id, oldName, newName, options) {\n        return new Promise((resolve, reject) =>\n            this.rename(id, oldName, newName, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _touch(id, name, options, callback, meta) {\n        const metaID = this.getFileId(id, name, true);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (!meta || meta.notExists) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n        meta.modifiedAt = Date.now();\n        this.client.set(metaID, JSON.stringify(meta), callback);\n    }\n    touch(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                return this._touch(id, name, options, callback, meta);\n            }\n        });\n    }\n    touchAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.touch(id, name, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _rmHelper(keys, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id = keys.shift();\n            this._delBinaryState(id.replace(/\\$%\\$meta$/, '$%$data'), _err =>\n                this.client.del(id, _err =>\n                    setImmediate(() => this._rmHelper(keys, callback))));\n        }\n    }\n    _rm(id, name, options, callback, meta) {\n        if (meta && !meta.isDir) {\n            // it is file\n            const metaID = this.getFileId(id, name, true);\n            const dataID = this.getFileId(id, name, false);\n            this.delObject(dataID, _err => this.delObject(metaID, callback));\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            name = this.normalizeFilename(name);\n            // it could be dir\n            if (! name.endsWith('/*')) {\n                name += '/*';\n            } else if (name.endsWith('/')) {\n                name += '*';\n            }\n            const dirID = this.getFileId(id, name);\n            this.client.keys(dirID, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                if (err || !keys) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n\n                keys = keys\n                    .sort()\n                    .filter(key => key.match(/\\$%\\$meta$/));\n\n                if (!keys.length) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n                // Check permissions\n                this.client.mget(keys, (err, objs) => {\n                    let result;\n                    const dontCheck =\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                    objs = objs || [];\n                    if (!dontCheck) {\n                        result = [];\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                objs[i] = JSON.parse(objs[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                                continue;\n                            }\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                                result.push(keys[i]);\n                            }\n                        }\n                    } else {\n                        result = keys;\n                    }\n                    const files = result.map(key => {\n                        const name = key.substring(this.fileNamespaceL + id.length + 3, key.length - 7);\n                        const pos = name.lastIndexOf('/');\n                        if (pos !== -1) {\n                            return {file: name.substring(pos + 1), path: name.substring(0, pos)};\n                        } else {\n                            return {file: id, path: ''};\n                        }\n                    });\n                    this._rmHelper(result, () => callback(null, files));\n                });\n            });\n        }\n    }\n    rm(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string') {\n            name = '';\n        }\n\n        this.checkFileRights(id, null, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file['delete']) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._rm(id, name, options, callback, meta && meta.notExists ? null : meta);\n                }\n            }\n        });\n    }\n    rmAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.rm(id, name, options, (err, files) =>\n                err ? reject(err) : resolve(files)));\n    }\n\n    // simulate. redis has no dirs\n    mkdir(id, dirName, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (typeof dirName !== 'string') {\n            dirName = '';\n        }\n\n        dirName = this.normalizeFilename(dirName);\n        if (dirName.startsWith('/')) {\n            dirName = dirName.substring(1);\n        }\n        this.checkFileRights(id, dirName, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    // we create a dummy file (for file this file exists to store meta data)\n                    options = options || {};\n                    options.virtualFile = true; // this is a virtual File\n                    const realName = dirName + (dirName.endsWith('/') ? '' : '/');\n                    this.writeFile(id, realName + '_data.json', '', options, callback);\n                }\n            }\n        });\n    }\n    mkdirAsync(id, dirName, options) {\n        return new Promise((resolve, reject) =>\n            this.mkdir(id, dirName, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _chownFileHelper(keys, metas, options, callback) {\n        if (!keys || !keys.length) {\n            return typeof callback === 'function' && callback();\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        const id  = keys.shift();\n        const meta = metas.shift();\n        meta.acl.owner      = options.owner;\n        meta.acl.ownerGroup = options.ownerGroup;\n        this.client.set(id, JSON.stringify(meta), _err =>\n            setImmediate(() => this._chownFileHelper(keys, metas, options, callback)));\n    }\n    _chownFile(id, name, options, callback, meta) {\n        if (!meta) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n\n        name = this.normalizeFilename(name);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (!meta.isDir && !meta.notExists) {\n            // it is file\n            const metaID = this.getFileId(id, name, true);\n            meta.acl.owner = options.owner;\n            meta.acl.ownerGroup = options.ownerGroup;\n            this.client.set(metaID, JSON.stringify(meta), err => {\n                const nameArr = name.split('/');\n                const file = nameArr.pop();\n                const res = [{\n                    path:       nameArr.join('/'),\n                    file:       file,\n                    stats:      meta.stats,\n                    isDir:      false,\n                    acl:        meta.acl || {},\n                    modifiedAt: meta.modifiedAt,\n                    createdAt:  meta.createdAt\n                }];\n                return typeof callback === 'function' && callback(err, res);\n            });\n            return;\n        }\n        // it could be dir\n        if (! name.endsWith('/*')) {\n            name += '/*';\n        } else if (name.endsWith('/')) {\n            name += '*';\n        }\n        const dirID = this.getFileId(id, name);\n        this.client.keys(dirID, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            if (err || !keys) {\n                return typeof callback === 'function' &&  callback(utils.ERRORS.ERROR_NOT_FOUND);\n            }\n\n            keys = keys\n                .sort()\n                .filter(key => key.match(/\\$%\\$meta$/));\n\n            // Check permissions\n            this.client.mget(keys, (err, metas) => {\n                const dontCheck = options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n                const keysFiltered = [];\n                const objsFiltered = [];\n                const processed = [];\n                const start = dirID.indexOf('$%$') + 3;\n                const end = '$%$meta'.length;\n\n                metas = metas || [];\n                for (let i = 0; i < keys.length; i++) {\n                    try {\n                        metas[i] = JSON.parse(metas[i]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\n                        continue;\n                    }\n                    if (dontCheck || utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_WRITE)) {\n                        if (!metas[i] || metas[i].virtualFile) {\n                            continue;\n                        } // virtual file, ignore\n                        keysFiltered.push(keys[i]);\n                        objsFiltered.push(metas[i]);\n\n                        const name = keys[i].substring(start, keys[i].length - end);\n                        const nameArr = name.split('/');\n                        const file = nameArr.pop();\n                        processed.push({\n                            path:       nameArr.join('/'),\n                            file:       file,\n                            stats:      metas[i].stats || {},\n                            isDir:      false,\n                            acl:        metas[i].acl || {},\n                            modifiedAt: metas[i].modifiedAt,\n                            createdAt:  metas[i].createdAt\n                        });\n                    }\n                }\n                this._chownFileHelper(keysFiltered, objsFiltered, options, err => {\n                    return typeof callback === 'function' && callback(err, processed);\n                });\n            });\n        });\n    }\n    chownFile(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n        if (typeof options !== 'object') {\n            options = {owner: options};\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        if (!options.ownerGroup && options.group) {\n            options.ownerGroup = options.group;\n        }\n        if (!options.owner      && options.user)  {\n            options.owner      = options.user;\n        }\n\n        if (!options.owner) {\n            this.log.error(this.namespace + ' user is not defined');\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n            return;\n        }\n\n        if (!options.ownerGroup) {\n            // get user group\n            this.getUserGroup(options.owner, (user, groups /* , permissions */) => {\n                if (!groups || !groups[0]) {\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\n                    return;\n                } else {\n                    options.ownerGroup = groups[0];\n                }\n                this.chownFile(id, name, options, callback);\n            });\n            return;\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._chownFile(id, name, options, callback, meta);\n                }\n            }\n        });\n    }\n    chownFileAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.chownFile(id, name, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _chmodFileHelper(keys, metas, options, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id   = keys.shift();\n            const meta = metas.shift();\n            meta.acl.permissions = options.mode;\n            this.client.set(id, JSON.stringify(meta), _err =>\n                setImmediate(() => this._chmodFileHelper(keys, metas, options, callback)));\n        }\n    }\n    _chmodFile(id, name, options, callback, meta) {\n        if (!meta) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n        name = this.normalizeFilename(name);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (!meta.isDir && !meta.notExists) {\n            // it is file\n            const metaID = this.getFileId(id, name, true);\n            meta.acl.permissions = options.mode;\n            this.client.set(metaID, JSON.stringify(meta), err => {\n                const nameArr = name.split('/');\n                const file = nameArr.pop();\n                const res = [{\n                    path:       nameArr.join('/'),\n                    file:       file,\n                    stats:      meta.stats,\n                    isDir:      false,\n                    acl:        meta.acl || {},\n                    modifiedAt: meta.modifiedAt,\n                    createdAt:  meta.createdAt\n                }];\n                return typeof callback === 'function' && callback(err, res);\n            });\n            return;\n        }\n        // it could be dir\n        if (! name.endsWith('/*')) {\n            name += '/*';\n        } else if (name.endsWith('/')) {\n            name += '*';\n        }\n        const dirID = this.getFileId(id, name);\n        this.client.keys(dirID, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            if (err || !keys) {\n                return typeof callback === 'function' &&  callback(utils.ERRORS.ERROR_NOT_FOUND);\n            }\n\n            keys = keys\n                .sort()\n                .filter(key => key.match(/\\$%\\$meta$/));\n\n            // Check permissions\n            this.client.mget(keys, (err, objs) => {\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                const keysFiltered = [];\n                const objsFiltered = [];\n                const processed = [];\n                const start = dirID.indexOf('$%$') + 3;\n                const end = '$%$meta'.length;\n\n                objs = objs || [];\n                for (let i = 0; i < keys.length; i++) {\n                    try {\n                        objs[i] = JSON.parse(objs[i]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                        continue;\n                    }\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_WRITE)) {\n                        if (!objs[i] || objs[i].virtualFile) {\n                            continue;\n                        } // virtual file, ignore\n                        keysFiltered.push(keys[i]);\n                        objsFiltered.push(objs[i]);\n\n                        const name = keys[i].substring(start, keys[i].length - end);\n                        const nameArr = name.split('/');\n                        const file = nameArr.pop();\n                        processed.push({\n                            path:       nameArr.join('/'),\n                            file:       file,\n                            stats:      objs[i].stats,\n                            isDir:      false,\n                            acl:        objs[i].acl || {},\n                            modifiedAt: objs[i].modifiedAt,\n                            createdAt:  objs[i].createdAt\n                        });\n                    }\n                }\n                this._chmodFileHelper(keysFiltered, objsFiltered, options, err =>\n                    typeof callback === 'function' && callback(err, processed));\n            });\n        });\n    }\n    chmodFile(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name[0].startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        if (typeof options !== 'object') {\n            options = {mode: options};\n        }\n\n        if (options.mode === undefined) {\n            this.log.error(this.namespace + ' mode is not defined');\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n            return;\n        } else if (typeof options.mode === 'string') {\n            options.mode = parseInt(options.mode, 16);\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._chmodFile(id, name, options, callback, meta);\n                }\n            }\n        });\n    }\n    chmodFileAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.chmodFile(id, name, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    enableFileCache(enabled, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, _options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else if (typeof callback === 'function') {\n                // cache cannot be enabled\n                setImmediate(() => typeof callback === 'function' && callback(null, false));\n            }\n        });\n    }\n    enableFileCacheAsync(enabled, options) {\n        return new Promise((resolve, reject) =>\n            this.enableFileCache(enabled, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    // -------------- OBJECT FUNCTIONS -------------------------------------------\n    _subscribe(pattern, options, subClient, callback) {\n        if (!subClient) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (Array.isArray(pattern)) {\n            let count = pattern.length;\n            pattern.forEach(pattern => {\n                this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\n                subClient.psubscribe(this.objNamespace + pattern, err => {\n                    if (!err) {\n                        subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\n                    }\n                    !--count && typeof callback === 'function' && callback(err);\n                });\n\n            });\n        } else {\n            this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\n            subClient.psubscribe(this.objNamespace + pattern, err => {\n                if (!err) {\n                    subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\n                }\n                typeof callback === 'function' && callback(err);\n            });\n        }\n    }\n    subscribeConfig(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._subscribe(pattern, options, this.subSystem, callback);\n            }\n        });\n    }\n    subscribe(pattern, options, callback) {\n        return this.subscribeConfig(pattern, options, callback);\n    }\n    subscribeAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.subscribe(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    subscribeUser(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._subscribe(pattern, options, this.sub, callback);\n            }\n        });\n    }\n    subscribeUserAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.subscribeUser(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _unsubscribe(pattern, options, subClient, callback) {\n        if (!subClient) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (Array.isArray(pattern)) {\n            let count = pattern.length;\n            pattern.forEach(pattern => {\n                this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\n                subClient.punsubscribe(this.objNamespace + pattern, err => {\n                    if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\n                        delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\n                    }\n                    !--count && typeof callback === 'function' && callback(err);\n                });\n            });\n        } else {\n            this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\n            subClient.punsubscribe(this.objNamespace + pattern, err => {\n                if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\n                    delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\n                }\n                typeof callback === 'function' && callback(err);\n            });\n        }\n    }\n    unsubscribeConfig(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._unsubscribe(pattern, options, this.subSystem, callback);\n            }\n        });\n    }\n    unsubscribe(pattern, options, callback) {\n        return this.unsubscribeConfig(pattern, options, callback);\n    }\n    unsubscribeAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.unsubscribe(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    unsubscribeUser(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._unsubscribe(pattern, options, this.sub, callback);\n            }\n        });\n    }\n    unsubscribeUserAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.unsubscribeUser(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _objectHelper(keys, objs, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id  = keys.shift();\n            const obj = objs.shift();\n            const message = JSON.stringify(obj);\n            this.client.set(id, message, err => {\n                !err && this.client.publish(id, message).catch(_err => {});\n                setImmediate(() => this._objectHelper(keys, objs, callback));\n            });\n        }\n    }\n    _chownObject(pattern, options, callback) {\n        this.getConfigKeys(pattern, options, (err, keys) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n                return;\n            }\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            this.client.mget(keys, (err, objects) => {\n                const filteredKeys = [];\n                const filteredObjs = [];\n                objects = objects || [];\n                for (let k = 0; k < keys.length; k++) {\n                    try {\n                        objects[k] = JSON.parse(objects[k]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\n                        continue;\n                    }\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\n                        continue;\n                    }\n                    if (!objects[k].acl) {\n                        objects[k].acl = {\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\n                        };\n                        if (objects[k].type === 'state') {\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\n                        }\n                    }\n                    objects[k].acl.owner      = options.owner;\n                    objects[k].acl.ownerGroup = options.ownerGroup;\n                    filteredKeys.push(keys[k]);\n                    filteredObjs.push(objects[k]);\n                }\n                this._objectHelper(filteredKeys, filteredObjs, () =>\n                    typeof callback === 'function' && setImmediate(() => callback(null, filteredObjs)));\n            });\n        }, true);\n    }\n    chownObject(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n        options.acl = null;\n\n        if (typeof options !== 'object') {\n            options = {owner: options};\n        }\n\n        if (!options.ownerGroup && options.group) {\n            options.ownerGroup = options.group;\n        }\n        if (!options.owner && options.user)  {\n            options.owner = options.user;\n        }\n\n        if (!options.owner) {\n            this.log.error(this.namespace + ' user is not defined');\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n            return;\n        }\n\n        if (!options.ownerGroup) {\n            // get user group\n            this.getUserGroup(options.owner, (user, groups /* , permissions*/) => {\n                if (!groups || !groups[0]) {\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\n                    return;\n                } else {\n                    options.ownerGroup = groups[0];\n                }\n                this.chownObject(pattern, options, callback);\n            });\n            return;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.object || !options.acl.object.write) {\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\n                } else {\n                    return this._chownObject(pattern, options, callback);\n                }\n            }\n        });\n    }\n    chownObjectAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.chownObject(pattern, options, (err, list) =>\n                err ? reject(err) : resolve(list)));\n    }\n\n    _chmodObject(pattern, options, callback) {\n        this.getConfigKeys(pattern, options, (err, keys) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n                return;\n            }\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            this.client.mget(keys, (err, objects) => {\n                const filteredKeys = [];\n                const filteredObjs = [];\n                objects = objects || [];\n                for (let k = 0; k < keys.length; k++) {\n                    try {\n                        objects[k] = JSON.parse(objects[k]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\n                        continue;\n                    }\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\n                        continue;\n                    }\n                    if (!objects[k].acl) {\n                        objects[k].acl = {\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\n                        };\n                        if (objects[k].type === 'state') {\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\n                        }\n                    }\n                    if (options.object !== undefined) {\n                        objects[k].acl.object = options.object;\n                    }\n                    if (options.state !== undefined) {\n                        objects[k].acl.state = options.state;\n                    }\n                    filteredKeys.push(keys[k]);\n                    filteredObjs.push(objects[k]);\n                }\n                this._objectHelper(filteredKeys, filteredObjs, () =>\n                    typeof callback === 'function' && callback(null, filteredObjs));\n            });\n        }, true);\n    }\n    chmodObject(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n        options.acl = null;\n\n        if (typeof options !== 'object') {\n            options = {object: options};\n        }\n\n        if (options.mode && !options.object) {\n            options.object = options.mode;\n        }\n\n        if (options.object === undefined) {\n            this.log.error(this.namespace + ' mode is not defined');\n            return typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n        } else if (typeof options.mode === 'string') {\n            options.mode = parseInt(options.mode, 16);\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\n                } else {\n                    return this._chmodObject(pattern, options, callback);\n                }\n            }\n        });\n    }\n    chmodObjectAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.chmodObject(pattern, options, (err, list) =>\n                err ? reject(err) : resolve(list)));\n    }\n\n    _getObject(id, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (!id || typeof id !== 'string') {\n            return typeof callback === 'function' && setImmediate(() => callback('invalid id ' + JSON.stringify(id)));\n        }\n\n        this.client.get(this.objNamespace + id, (err, obj) => {\n            if (err) {\n                this.log.debug(this.namespace + ' redis get ' + id + ', error - ' + err);\n            } else {\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + obj);\n            }\n            try {\n                obj = obj ? JSON.parse(obj) : null;\n            } catch (e) {\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${obj}: ${e.message}`);\n            }\n            if (obj) {\n                // Check permissions\n                if (utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ)) {\n                    typeof callback === 'function' && callback(null, obj);\n                } else {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                }\n\n            } else {\n                typeof callback === 'function' && callback(err, obj);\n            }\n        });\n    }\n    getObject(id, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObject(id, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (typeof callback === 'function') {\n            if (options && options.acl) {\n                options.acl = null;\n            }\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObject(id, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.getObject(id, options, (err, obj) =>\n                err ? reject(err) : resolve(obj)));\n    }\n\n    _getKeys(pattern, options, callback, dontModify) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (!pattern || typeof pattern !== 'string') {\n            return typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\n        }\n\n        const r = new RegExp(tools.pattern2RegEx(pattern));\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n\n            const result = [];\n            if (keys) {\n                keys.sort();\n                const result = [];\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                if (dontCheck) {\n                    for (let i = 0; i < keys.length; i++) {\n                        const id = keys[i].substring(this.objNamespaceL);\n                        if (r.test(id)) {\n                            if (!dontModify) {\n                                result.push(id);\n                            } else {\n                                result.push(keys[i]);\n                            }\n                        }\n                    }\n                    typeof callback === 'function' && callback(err, result);\n                } else {\n                    // Check permissions\n                    this.client.mget(keys, (err, metas) => {\n                        metas = metas || [];\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                metas[i] = JSON.parse(metas[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\n                                continue;\n                            }\n\n                            if (r.test(keys[i]) && utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_READ)) {\n                                if (!dontModify) {\n                                    result.push(keys[i].substring(this.objNamespaceL));\n                                } else {\n                                    result.push(keys[i]);\n                                }\n                            }\n                        }\n                        typeof callback === 'function' && callback(err, result);\n                    });\n\n                }\n            } else {\n                typeof callback === 'function' && callback(err, result);\n            }\n        });\n    }\n    getKeys(pattern, options, callback, dontModify) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getKeys(pattern, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj), dontModify));\n        }\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getKeys(pattern, options, callback, dontModify);\n                }\n            });\n        }\n    }\n    getKeysAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.getKeys(id, options, (err, keys) =>\n                err ? reject(err) : resolve(keys)));\n    }\n\n    getConfigKeys(pattern, options, callback, dontModify) {\n        return this.getKeys(pattern, options, callback, dontModify);\n    }\n\n    _getObjects(keys, options, callback, dontModify) {\n        if (!keys) {\n            typeof callback === 'function' && setImmediate(() => callback('no keys', null));\n            return;\n        }\n        if (!keys.length) {\n            typeof callback === 'function' && setImmediate(() => callback(null, []));\n            return;\n        }\n\n        let _keys;\n        if (!dontModify) {\n            _keys = [];\n            for (let i = 0; i < keys.length; i++) {\n                _keys[i] = this.objNamespace + keys[i];\n            }\n        } else {\n            _keys = keys;\n        }\n\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n\n        this.client.mget(_keys, (err, objs) => {\n            let result = [];\n            if (err) {\n                this.log.warn(this.namespace + ' redis mget ' + (!objs ? 0 :  objs.length) + ' ' + _keys.length + ', err: ' + err);\n            } else {\n                this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis mget ' + (!objs ? 0 : objs.length) + ' ' + _keys.length);\n            }\n            if (objs) {\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                if (!dontCheck) {\n                    for (let i = 0; i < objs.length; i++) {\n                        try {\n                            objs[i] = JSON.parse(objs[i]);\n                        } catch (e) {\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${objs[i]}`);\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\n                            continue;\n                        }\n                        if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                            result.push(objs[i]);\n                        } else {\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\n                        }\n                    }\n                } else {\n                    result = objs.map((obj, i) => {\n                        try {\n                            return JSON.parse(obj);\n                        } catch (e) {\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${obj}`);\n                            return null;\n                        }\n                    });\n                }\n            }\n            typeof callback === 'function' && callback(null, result);\n        });\n    }\n    getObjects(keys, options, callback, dontModify) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjects(keys, options, (err, objs) =>\n                    err ? reject(err) : resolve(objs), dontModify));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjects(keys, options, callback, dontModify);\n                }\n            });\n        }\n    }\n    getObjectsAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjects(id, options, (err, objs) =>\n                err ? reject(err) : resolve(objs)));\n    }\n\n    _getObjectsByPattern(pattern, options, callback) {\n        if (!pattern || typeof pattern !== 'string') {\n            typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\n            return;\n        }\n\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis keys ' + keys.length + ' ' + pattern);\n            this._getObjects(keys, options, callback, true);\n        });\n    }\n    getObjectsByPattern(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjectsByPattern(pattern, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjectsByPattern(pattern, options, callback);\n                }\n            });\n        }\n    }\n    getObjectsByPatternAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjectsByPattern(pattern, options, (err, objs) =>\n                err ? reject(err) : resolve(objs)));\n    }\n\n    _setObject(id, obj, options, callback) {\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\n        }\n\n        if (!obj) {\n            this.log.warn(this.namespace + ' setObject: Argument object is null');\n            return typeof callback === 'function' && setImmediate(() => callback('obj is null'));\n        }\n        if (typeof obj !== 'object') {\n            this.log.warn(this.namespace + ' setObject: Argument object is no object: ' + obj);\n            return typeof callback === 'function' && setImmediate(() => callback('obj is no object'));\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        // make a copy of object, because we will modify it\n        obj = deepClone(obj);\n\n        obj._id = id;\n\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\n            try {\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\n            } catch (e) {\n                this.log.error(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\n                typeof callback === 'function' && callback(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\n                return;\n            }\n\n            if (!tools.checkNonEditable(oldObj, obj)) {\n                typeof callback === 'function' && callback('Invalid password for update of vendor information');\n                return;\n            }\n\n            // do not delete common settings, like \"history\" or \"mobile\". It can be erased only with \"null\"\n            if (oldObj && oldObj.common) {\n                this.preserveSettings.forEach(commonSetting => {\n                    // special case if \"custom\"\n                    if (commonSetting === 'custom') {\n                        if (!oldObj.common.custom) {\n                            // do nothing\n                        } else if ((!obj.common || !obj.common.custom) && oldObj.common.custom) {\n                            obj.common = obj.common || {};\n                            obj.common.custom = oldObj.common.custom;\n                        } else if (obj.common && obj.common.custom && oldObj.common.custom) {\n                            // merge together\n                            Object.keys(oldObj.common.custom).forEach(attr => {\n                                if (obj.common.custom[attr] === null) {\n                                    delete obj.common.custom[attr];\n                                } else if (obj.common.custom[attr] === undefined) {\n                                    obj.common.custom[attr] = oldObj.common.custom[attr];\n                                }\n                            });\n                        }\n                        // remove custom if no one attribute inside\n                        if (obj.common && obj.common.custom) {\n                            Object.keys(obj.common.custom).forEach(attr => {\n                                if (obj.common.custom[attr] === null) {\n                                    delete obj.common.custom[attr];\n                                }\n                            });\n                            if (!Object.keys(obj.common.custom).length) {\n                                delete obj.common.custom;\n                            }\n                        }\n                    } else {\n                        // remove settings if desired\n                        if (obj.common && obj.common[commonSetting] === null) {\n                            delete obj.common[commonSetting];\n                        } else\n                        // if old setting present and new setting is absent\n                        if (oldObj.common[commonSetting] !== undefined && (!obj.common || obj.common[commonSetting] === undefined)) {\n                            obj.common = obj.common || {};\n                            obj.common[commonSetting] = oldObj.common[commonSetting];\n                        }\n                    }\n                });\n            }\n\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\n                if (typeof obj.common.alias.id === 'object') {\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                } else {\n                    if (typeof obj.common.alias.id !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                }\n            }\n\n            if (oldObj && oldObj.acl && !obj.acl) {\n                obj.acl = oldObj.acl;\n            }\n\n            // add user default rights\n            if (this.defaultNewAcl && !obj.acl) {\n                obj.acl = deepClone(this.defaultNewAcl);\n                delete obj.acl.file;\n                if (obj.type !== 'state') {\n                    delete obj.acl.state;\n                }\n                // take the owner as current user\n                if (options.user) {\n                    obj.acl.owner = options.user;\n                }\n                // take the group as current user's group\n                if (options.group) {\n                    obj.acl.ownerGroup = options.group;\n                } else  {\n                    obj.acl.ownerGroup = null;\n                    return this.getUserGroup(obj.acl.owner, (user, groups /* , permissions */) => {\n                        if (!groups || !groups[0]) {\n                            options.group = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\n                        } else {\n                            options.group = groups[0];\n                        }\n                        obj.acl.ownerGroup = options.group;\n                        const message = JSON.stringify(obj);\n                        this.client.set(this.objNamespace + id, message, err => {\n                            if (!err) {\n                                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\n                                this.client.publish(this.objNamespace + id, message).catch(_err => {});\n                                // object updated -> if type changed to meta -> cache\n                                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\n                                    this.existingMetaObjects[id] = true;\n                                }\n                            }\n                            typeof callback === 'function' && callback(err, {id});\n                        });\n                    });\n                }\n            }\n\n            if (this.defaultNewAcl && obj.acl && !obj.acl.ownerGroup && options.group) {\n                obj.acl.ownerGroup = options.group;\n            }\n\n            const message = JSON.stringify(obj);\n            this.client.set(this.objNamespace + id, message, err => {\n                if (!err) {\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\n                    this.client.publish(this.objNamespace + id, message).catch(_err => {});\n                }\n                // object updated -> if type changed to meta -> cache\n                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\n                    this.existingMetaObjects[id] = true;\n                }\n                typeof callback === 'function' && callback(err, {id});\n            });\n        });\n    }\n    /**\n     * set anew or update object\n     *\n     * This function writes the object into DB\n     *\n     * @alias setObject\n     * @memberof objectsInMemServer\n     * @param {string} id ID of the object\n     * @param {object} obj\n     * @param {object} options options for access control are optional\n     * @param {function} callback return function\n     */\n    setObject(id, obj, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.setObject(id, obj, options, (err, res) =>\n                    err ? reject(err) : resolve(res)));\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._setObject(id, obj, options, callback);\n            }\n        });\n    }\n\n    setObjectAsync(id, obj, options) {\n        return new Promise((resolve, reject) =>\n            this.setObject(id, obj, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    _delObject(id, options, callback) {\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n\n        // read object\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\n            if (err) {\n                this.log.warn(this.namespace + ' redis get ' + id + ', error - ' + err);\n            } else {\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + oldObj);\n            }\n            if (!oldObj) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n            }\n\n            try {\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\n            } catch (e) {\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\n            }\n\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\n                typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n            } else {\n                this.client.del(this.objNamespace + id, err => {\n                    if (!err) {\n                        //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' null');\n                        this.client.publish(this.objNamespace + id, 'null').catch(_err => {});\n                        // object has been deleted -> remove from cached meta if there\n                        if (this.existingMetaObjects[id]) {\n                            this.existingMetaObjects[id] = false;\n                        }\n                    }\n                    typeof callback === 'function' && callback(err);\n                });\n            }\n        });\n    }\n    delObject(id, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.delObject(id, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_DELETE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._delObject(id, options, callback);\n            }\n        });\n    }\n\n    delObjectAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.delObject(id, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    // this function is very ineffective. Because reads all objects and then process them\n    async _applyViewFunc(func, params, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        const result = {\n            rows: []\n        };\n\n        // filters objs which are already present in array by property 'id'\n        const filterDuplicates = arr => {\n            const included = {};\n            const filteredArr = arr.filter(obj => {\n                if (included[obj.id]) {\n                    return false;\n                } else {\n                    included[obj.id] = true;\n                    return true;\n                }\n            });\n\n            return filteredArr;\n        };\n\n        params = params || {};\n        params.startkey = params.startkey || '';\n        params.endkey   = params.endkey   || '\\u9999';\n        const wildcardPos = params.endkey.indexOf('\\u9999');\n        let wildCardLastPos = true;\n        if (wildcardPos !== -1 && wildcardPos !== params.endkey.length - 1) {\n            wildCardLastPos = false; // TODO do in LUA\n        }\n        let m;\n\n        // if start and and end keys are equal modify end key\n        if (params.startkey === params.endkey) {\n            params.endkey = params.endkey + '\\u0000';\n        }\n\n        // filter by type\n        if (wildCardLastPos && func && func.map && this.scripts.filter && (m = func.map.match(/if\\s\\(doc\\.type\\s?===?\\s?'(\\w+)'\\)\\semit\\(([^,]+),\\s?doc\\s?\\)/))) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.filter, 5, this.objNamespace, params.startkey, params.endkey, m[1], cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        objs = objs || [];\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            if (m[2] && m[2].trim() === 'doc._id') {\n                                return {id: obj._id, value: obj};\n                            } else if (m[2] && m[2].trim() === 'doc.common.name' && obj.common) {\n                                return {id: obj.common.name, value: obj};\n                            } else {\n                                this.log.error(`${this.namespace} Cannot filter \"${m[2]}\": ${JSON.stringify(obj)}`);\n                                return {id: 'parseError', value: null};\n                            }\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // Now we have all objects -> calculate max if desired\n            if (func.reduce === '_stats') {\n                let max = null;\n                for (let i = 0; i < result.rows.length; i++) {\n                    if (max === null || result.rows[i].value > max) {\n                        max = result.rows[i].value;\n                    }\n                }\n                if (max !== null) {\n                    result.rows = [{id: '_stats', value: {max: max}}];\n                } else {\n                    result.rows = [];\n                }\n            }\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by script\n        if (wildCardLastPos && func && func.map && this.scripts.script && func.map.indexOf('doc.common.engineType') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.script, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            return {id: obj._id, value: obj};\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by hm-rega programs\n        if (wildCardLastPos && func && func.map && this.scripts.programs && func.map.indexOf('doc.native.TypeName === \\'PROGRAM\\'') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.programs, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            return {id: obj._id, value: obj};\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while(cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by hm-rega variables\n        if (wildCardLastPos && func && func.map && this.scripts.variables && func.map.indexOf('doc.native.TypeName === \\'ALARMDP\\'') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.variables, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            return {id: obj._id, value: obj};\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by custom, redis also returns if common.custom is not present\n        if (wildCardLastPos && func && func.map && this.scripts.custom && func.map.indexOf('doc.common.custom') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.custom, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        objs.forEach(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                            }\n                            if (obj.common && obj.common.custom) {\n                                result.rows.push({id: obj._id, value: obj.common.custom});\n                            }\n                        });\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else {\n            this.log.debug(`${this.namespace} No suitable Lua script, fallback to keys!: ${func.map}`);\n\n            let searchKeys = this.objNamespace + '*';\n            if (wildcardPos !== -1) { // Wildcard included\n                searchKeys = this.objNamespace + params.endkey.replace(/\\u9999/g, '*');\n            }\n            // todo: also use scan on fallback\n            this.client.keys(searchKeys, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                const endAfterWildcard = params.endkey.substr(wildcardPos + 1);\n                params.startkey = this.objNamespace + params.startkey;\n                params.endkey   = this.objNamespace + params.endkey;\n\n                keys = keys.sort().filter(key => {\n                    if (key && !utils.regCheckId.test(key)) {\n                        if (params && wildcardPos > 0) {\n                            if (params.startkey && key < params.startkey) {\n                                return false;\n                            }\n                            if (params.endkey   && key > params.endkey)   {\n                                return false;\n                            }\n                        } else\n                        if (params && wildcardPos === 0) {\n                            if (!key.endsWith(endAfterWildcard)) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                this.client.mget(keys, (err, objs) => {\n                    // eslint-disable-next-line no-unused-vars\n                    function _emit_(id, obj) {\n                        result.rows.push({id: id, value: obj});\n                    }\n\n                    const f = eval('(' + func.map.replace(/^function\\(([a-z0-9A-Z_]+)\\)/g, 'function($1, emit)') + ')');\n\n                    objs = objs || [];\n                    for (let i = 0; i < keys.length; i++) {\n                        try {\n                            objs[i] = JSON.parse(objs[i]);\n                        } catch (e) {\n                            this.log.error(this.namespace + ' Cannot parse JSON ' + keys[i] + ':  ' + objs[i]);\n                            continue;\n                        }\n                        if (!utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                            continue;\n                        }\n\n                        if (objs[i]) {\n                            try {\n                                f(objs[i], _emit_);\n                            } catch (e) {\n                                this.log.error(this.namespace + ' Cannot execute map: ' + e.message);\n                            }\n                        }\n                    }\n                    // Calculate max\n                    if (func.reduce === '_stats') {\n                        let max = null;\n                        for (let i = 0; i < result.rows.length; i++) {\n                            if (max === null || result.rows[i].value > max) {\n                                max = result.rows[i].value;\n                            }\n                        }\n                        if (max !== null) {\n                            result.rows = [{id: '_stats', value: {max: max}}];\n                        } else {\n                            result.rows = [];\n                        }\n                    }\n                    typeof callback === 'function' && callback(null, result);\n                });\n            });\n        }\n    }\n    _applyView(func, params, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this._applyView(func, params, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && callback(err);\n                } else {\n                    return this._applyViewFunc(func, params, options, callback);\n                }\n            });\n        }\n    }\n\n    _getObjectView(design, search, params, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        this.client.get(this.objNamespace + '_design/' + design, (err, obj) => {\n            if (obj) {\n                try {\n                    obj = JSON.parse(obj);\n                } catch (e) {\n                    this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                    return typeof callback === 'function' && callback(new Error('Cannot parse JSON: \"' + '_design/' + design + '\" / \"' + obj + '\"'));\n                }\n\n                if (obj.views && obj.views[search]) {\n                    this._applyViewFunc(obj.views[search], params, options, callback);\n                } else {\n                    this.log.error(`${this.namespace} Cannot find search \"${search}\" in \"${design}\"`);\n                    typeof callback === 'function' && callback(new Error('Cannot find search \"' + search + '\" in \"' + design + '\"'));\n                }\n            } else {\n                this.log.error(`${this.namespace} Cannot find view \"${design}\" for search \"${search}\" : ${err}`);\n                typeof callback === 'function' && callback(new Error('Cannot find view \"' + design + '\"'));\n            }\n        });\n    }\n    getObjectView(design, search, params, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjectView(design, search, params, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjectView(design, search, params, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectViewAsync(design, search, params, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjectView(design, search, params, options, (err, arr) =>\n                err ? reject(err) : resolve(arr)));\n    }\n\n    _getObjectList(params, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        //params = {startkey, endkey, include_docs}\n        params = params || {};\n        params.startkey = params.startkey || '';\n        params.endkey = params.endkey || '\\u9999';\n        const pattern = (params.endkey.substring(0, params.startkey.length) === params.startkey) ? this.objNamespace + params.startkey + '*' : this.objNamespace + '*';\n\n        // todo: use lua script for this\n        this.client.keys(pattern, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const _keys = [];\n            for (let i = 0; i < keys.length; i++) {\n                const id = keys[i].substring(this.objNamespaceL);\n                if (params.startkey && id < params.startkey) {\n                    continue;\n                }\n                if (params.endkey && id > params.endkey) {\n                    continue;\n                }\n                if (!id || utils.regCheckId.test(id) || id.match(/\\|file\\$%\\$/)) {\n                    continue;\n                }\n                if (!params.include_docs && id[0] === '_') {\n                    continue;\n                }\n                _keys.push(keys[i]);\n            }\n            _keys.sort();\n            this.client.mget(_keys, (err, objs) => {\n                // return rows with id and doc\n                const result = {\n                    rows: []\n                };\n                if (objs) {\n                    for (let r = 0; r < objs.length; r++) {\n                        try {\n                            objs[r] = JSON.parse(objs[r]);\n                        } catch (e) {\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[r]}: ${objs[r]}`);\n                            continue;\n                        }\n\n                        if (!objs[r] || !utils.checkObject(objs[r], options, utils.CONSTS.ACCESS_READ)) {\n                            continue;\n                        }\n                        result.rows.push({id: objs[r]._id, value: objs[r], doc: objs[r]});\n                    }\n                }\n                typeof callback === 'function' && callback(null, result);\n            });\n        });\n    }\n    getObjectList(params, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjectList(params, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjectList(params, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectListAsync(params, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjectList(params, options, (err, arr) =>\n                err ? reject(err) : resolve(arr)));\n    }\n\n    // could be optimised, to read object only once. Now it will read 3 times\n    _extendObject(id, obj, options, callback, _iteration) {\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate (() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\n            try {\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\n            } catch (e) {\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${oldObj}`);\n                oldObj = null;\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n            }\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n            }\n\n            let _oldObj;\n            if (oldObj && oldObj.nonEdit) {\n                // copy object\n                _oldObj = deepClone(oldObj);\n            }\n\n            oldObj = oldObj || {};\n            oldObj = extend(true, oldObj, deepClone(obj)); // copy here to prevent \"sandboxed\" objects from JavaScript adapter\n            oldObj._id = id;\n\n            // add user default rights\n            if (this.defaultNewAcl && !oldObj.acl) {\n                oldObj.acl = deepClone(this.defaultNewAcl);\n                delete oldObj.acl.file;\n                if (oldObj.type !== 'state') {\n                    delete oldObj.acl.state;\n                }\n\n                if (options.owner) {\n                    oldObj.acl.owner = options.owner;\n\n                    if (!options.ownerGroup) {\n                        oldObj.acl.ownerGroup = null;\n                        return this.getUserGroup(options.owner, (user, groups /*, permissions */) => {\n                            if (!groups || !groups[0]) {\n                                options.ownerGroup = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\n                            } else {\n                                options.ownerGroup = groups[0];\n                            }\n                            this._extendObject(id, obj, options, callback);\n                        });\n                    }\n                }\n            }\n\n            if (this.defaultNewAcl && options.ownerGroup && oldObj.acl && !oldObj.acl.ownerGroup) {\n                oldObj.acl.ownerGroup = options.ownerGroup;\n            }\n\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\n                if (typeof obj.common.alias.id === 'object') {\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                } else {\n                    if (typeof obj.common.alias.id !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                }\n            }\n\n            if (_oldObj && !tools.checkNonEditable(_oldObj, oldObj)) {\n                return typeof callback === 'function' && callback('Invalid password for update of vendor information');\n            }\n            const message = JSON.stringify(oldObj);\n            this.client.set(this.objNamespace + id, message, err => {\n                if (!err) {\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\n                    this.client.publish(this.objNamespace + id, message)\n                        .catch(_err => {});\n                    // extended -> if its now type meta and currently marked as not -> cache\n                    if (this.existingMetaObjects[id] === false && oldObj && oldObj.type === 'meta') {\n                        this.existingMetaObjects[id] = true;\n                    }\n                }\n                typeof callback === 'function' && callback(err, {id: id, value: oldObj}, id);\n            });\n        });\n    }\n    extendObject(id, obj, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.extendObject(id, obj, options, (err, res) =>\n                    err ? reject(err) : resolve(res)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._extendObject(id, obj, options, callback);\n            }\n        });\n    }\n\n    extendObjectAsync(id, obj, options) {\n        return new Promise((resolve, reject) =>\n            this.extendObject(id, obj, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    setConfig(id, obj, options, callback) {\n        return this.setObject(id, obj, options, callback);\n    }\n\n    delConfig(id, options, callback) {\n        return this.delObject(id, options, callback);\n    }\n\n    getConfig(id, options, callback) {\n        return this.getObject(id, options, callback);\n    }\n\n    getConfigs(keys, options, callback, dontModify) {\n        return this.getObjects(keys, options, callback, dontModify);\n    }\n\n    _findObject(idOrName, type, options, callback) {\n        this._getObject(idOrName, options, (err, obj) => {\n            // Assume it is ID\n            if (obj && utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ) && (!type || (obj.common && obj.common.type === type))) {\n                typeof callback === 'function' && callback(null, idOrName, obj.common.name);\n            } else {\n                this._getKeys('*', options, (err, keys) =>\n                    this.client.mget(keys, (err, objs) => {\n                        objs = objs || [];\n                        // Assume it is name\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                objs[i] = JSON.parse(objs[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                                continue;\n                            }\n                            if (objs[i].common &&\n                                objs[i].common.name === idOrName &&\n                                (!type || (objs[i].common && objs[i].common.type === type))) {\n                                return typeof callback === 'function' && callback(null, objs[i]._id, idOrName);\n                            }\n                        }\n                        typeof callback === 'function' && callback(null, null, idOrName);\n                    }), true);\n            }\n        });\n    }\n    findObject(idOrName, type, options, callback) {\n        if (typeof type === 'function') {\n            callback = type;\n            options = null;\n            type = null;\n        }\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.findObject(idOrName, type, options, (err, id, _idOrName) =>\n                    err ? reject(err) : resolve(id)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_LIST, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._findObject(idOrName, type, options, callback);\n                }\n            });\n        }\n    }\n\n    findObjectAsync(idOrName, type, options) {\n        return new Promise((resolve, reject) =>\n            this.findObject(idOrName, type, options, (err, id, _idOrName) =>\n                err ? reject(err) : resolve(id)));\n    }\n\n    // can be called only from js-controller\n    addPreserveSettings(settings) {\n        if (!Array.isArray(settings)) {\n            settings = [settings];\n        }\n\n        for (let s = 0; s < settings.length; s++) {\n            if (this.preserveSettings.indexOf(settings[s]) === -1) {\n                this.preserveSettings.push(settings[s]);\n            }\n        }\n    }\n\n    _destroyDBHelper(keys, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id = keys.shift();\n            this.client.del(id, _err =>\n                setImmediate(() => this._destroyDBHelper(keys, callback)));\n        }\n    }\n    _destroyDB(options, callback) {\n        if (!this.client) {\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        } else {\n            this.client.keys(this.redisNamespace + '*', (err, keys) =>\n                this._destroyDBHelper(keys, callback));\n        }\n    }\n    destroyDB(options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                if (!options.acl.file.write || options.user !== utils.CONSTS.SYSTEM_ADMIN_USER) {\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\n                } else {\n                    return this._destroyDB(options, callback);\n                }\n            }\n        });\n    }\n    destroyDBAsync(options) {\n        return new Promise((resolve, reject) =>\n            this.destroyDB(options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    // Destructor of the class. Called by shutting down.\n    destroy() {\n        this.stop = true;\n        if (this.client) {\n            try {\n                this.client.quit(() =>\n                    this.client = null);\n            } catch (e) {\n                // ignore error\n            }\n\n        }\n        if (this.sub) {\n            try {\n                this.sub.quit(() =>\n                    this.sub = null);\n            } catch (e) {\n                // ignore error\n            }\n        }\n        if (this.subSystem) {\n            try {\n                this.subSystem.quit(() =>\n                    this.subSystem = null);\n            } catch (e) {\n                // ignore error\n            }\n        }\n    }\n\n    loadLuaScripts(callback, _scripts) {\n        if (!_scripts) {\n            if (scriptFiles && scriptFiles.filter) {\n                _scripts = [];\n                for (const name in scriptFiles) {\n                    if (!scriptFiles.hasOwnProperty(name)) {\n                        continue;\n                    }\n                    const shasum = crypto.createHash('sha1');\n                    const buf = Buffer.from(scriptFiles[name]);\n                    shasum.update(buf);\n                    _scripts.push({\n                        name,\n                        text: buf,\n                        hash: shasum.digest('hex')\n                    });\n                }\n            } else {\n                _scripts = fs.readdirSync(__dirname + '/lua/').map(name => {\n                    const shasum = crypto.createHash('sha1');\n                    const script = fs.readFileSync(__dirname + '/lua/' + name);\n                    shasum.update(script);\n                    const hash = shasum.digest('hex');\n                    return {name: name.replace(/\\.lua$/, ''), text: script, hash};\n                });\n            }\n            const hashes = _scripts.map(e => e.hash);\n            hashes.unshift('EXISTS');\n\n            if (!this.client) {\n                return;\n            }\n\n            return this.client.script(hashes, (err, arr) => {\n                arr && _scripts.forEach((e, i) => _scripts[i].loaded = !!arr[i]);\n                this.loadLuaScripts(callback, _scripts);\n            });\n        }\n\n        if (!this.client) {\n            return;\n        }\n\n        for (let i = 0; i < _scripts.length; i++) {\n            if (!_scripts[i].loaded) {\n                const script = _scripts[i];\n                return this.client.script(['LOAD', script.text], (err, hash) => {\n                    script.hash = hash;\n                    script.loaded = !err;\n                    err && this.log.error(this.namespace + ' Cannot load \"' + script.name + '\": ' + err);\n                    setImmediate(() => this.loadLuaScripts(callback, _scripts));\n                });\n            }\n        }\n        this.scripts = {};\n        _scripts.forEach(e => this.scripts[e.name] = e.hash);\n        typeof callback === 'function' && callback();\n    }\n}\n\nmodule.exports = ObjectsInRedis;"],"file":"../../dist/index.js"}