{"version":3,"sources":["index.js"],"names":["_0x4ab477","require","_0x1e04bd","_0x4f7652","_0x23ceb3","_0x18a690","isDeepStrictEqual","_0x7eeaba","_0x3ec41b","_0x162c1a","__dirname","_0x5513ac","_0x54eb4e","_0x152f36","_0x2b805b","_0x556f72","_0x1f783f","_0x52c281","_0x24f64d","Object","_0x3d64ac","Array","undefined","JSON","console","_0x8286db","_0x333aea","_0x5e137f","_0x16c5c4","_0x42a929","_0x316875","_0x1e2dde","setImmediate","_0x51261d","Promise","_0x19ea29","_0x20489c","_0x56ccf2","Error","_0x50592c","_0x98e30d","_0x3113c0","_0x55d46f","_0x19a8e1","_0x47e50e","_0x57a524","_0x109fd3","_0x493def","constructor","_0x50cfbc","_0x51fb63","RegExp","_0x10a234","_0x87a7fc","_0x1d591a","_0x4724c3","_0x4599e6","_0x5e45ab","_0x2fd646","_0x224851","_0x3f147f","_0x1d0fa1","_0x58727c","_0x2f00b9","_0x37eab5","_0x5c5cea","_0x5b7758","_0x4289cc","_0x562e1a","_0x145ec5","_0x2bb317","_0x48dc2c","_0x36f80a","_0x46e373","_0x21bd08","_0x120c50","_0x114e4e","_0x26cff8","_0x27e436","_0x1c82be","_0x4e8617","_0xdfccdc","_0x32c703","_0x332b7b","_0x557f99","_0x159bd6","_0x58860c","_0x1bbfd4","_0x41cfc0","_0x23c099","_0x38bd94","_0x43eed9","_0x29d326","_0x198658","_0x137fcc","_0x140b72","Buffer","_0x528999","_0x483106","_0x11032d","_0x4ba0a2","_0x42b6c6","_0x2e3c39","_0x2a3f7a","_0x10004d","_0x3a8d5a","_0x178606","_0x340960","_0x24ad93","_0x4a7e08","_0x4549f6","_0xe49d9b","_0x218c47","_0x4d312e","_0x396e10","_0x55d972","_0x5359a4","_0x1826fa","_0x1f6351","_0x363cab","_0xf9d8c3","_0x452ac7","_0x4bd557","_0x4d7611","_0x4c69d5","_0x266d83","_0x3e6003","_0x1f53ef","_0x525d07","_0x4705de","_0x6a3ed6","_0x2415d6","_0x4542b9","_0x290504","_0x541a62","_0x39ccd4","_0x38de74","_0x381c3e","_0x296819","_0x10e5cb","_0x45f2a4","_0x258b9c","_0x476ad4","_0x4f99de","_0x4fdfc7","_0x23641a","_0x1cd30f","_0x1d9ddb","_0x593ba8","_0x277265","_0x5b7e2b","_0x4a9ccb","_0x5791b1","_0x207200","_0x4e5c96","Date","_0x327659","_0x29b215","_0x13665c","_0x35e5f2","_0x1a4195","_0x5116fd","_0x54d802","_0x35a744","_0x1f9021","_0x5ef44b","_0x120989","_0xa41026","_0x16a177","_0x3bfa92","_0x414b32","_0xdc7a8e","_0x40638b","_0x4338dc","_0x571c50","_0x2e5b24","_0x5608bd","_0x13bdaa","_0x3982aa","_0x3a7126","_0x1a9828","_0x43b563","_0x20331c","_0x1a5c55","_0x20aad2","_0x81a5f1","_0x598b26","_0x9bba7a","_0x152f41","_0xa489be","_0x40d256","_0xfe61db","_0x453bfb","_0x59c615","_0x1efb83","_0xcda5e9","_0x76084b","_0x213ab8","_0xc7d91b","_0x264a34","_0x142dde","_0x397693","_0x38b4af","_0x5be0fd","_0x29710a","_0x4f0f46","_0x3dd70f","_0xc4c08c","_0x3c9937","_0x26f9a6","_0x5045a0","_0x51c815","_0x5d669d","_0x88cfeb","_0x3724df","_0x2d8910","_0x23bb71","_0x3cd15f","_0x576ceb","_0x20be31","_0x3e675d","_0x9534b","_0x52dd2f","_0x523bb9","_0x5afbed","_0x265523","_0x20e288","_0x389e0f","_0x4dba94","_0x1753cf","_0x2aaab8","_0x19768f","_0x1be494","_0x6603af","_0x2c68a6","_0x106653","_0x355d92","_0x16cbcc","_0x350712","_0x4e2ce0","_0x1e9577","_0x416ac6","_0x5e23b9","_0x517559","_0x156bff","_0x2b40d1","_0x51efb8","_0x4de04b","_0x5ccaa0","_0x1e78ef","_0xa39c9b","_0x1aebfd","_0x33a774","_0x497b0c","_0x3e450a","_0x3b57f7","_0x504a15","_0x437115","_0x5d6fbc","_0xf2d97e","_0x5200cb","_0x4ea741","_0x2f603a","_0xad390a","_0x2e483c","_0x17a3d2","_0x4f681a","_0x406e51","_0x4e8d3d","_0x3f4a2d","_0x2b5c87","_0x1be44d","_0x407b80","_0x1d7ba2","_0x23348b","_0x931cbb","_0x20024a","_0xe62880","_0x574c26","_0x5e7a5f","_0x5030d0","_0xb9c51d","_0x2babc5","_0xa1562e","_0x32b256","_0x45ffc8","_0x573826","_0x6279a6","_0x5aceb6","_0x210ef6","_0x5105c7","_0x2ea63b","_0x497362","_0x3bb7ba","_0x40267e","_0x4a444a","_0x3ea1c0","_0x44a4cd","_0x9ca8a2","_0x3eecbb","_0x3ffbba","_0x18c59b","_0x326ad4","_0xc8e1ed","_0x101bfa","_0x49a033","_0x5b44f8","_0x31e8af","_0x71e452","_0xdf3d4a","_0x52b654","_0x1de6f1","_0x42589b","_0x15da9c","_0xc4304c","_0x3a5c6f","_0x161753","_0x31eb80","_0x3ea32f","_0x4bd01d","_0x40dda8","_0x43c6c6","_0x451f0f","_0x544afb","_0x6e37a9","_0x50c3d3","_0x5e77a7","_0x2d5640","_0x7434bb","_0xbd1bd5","_0x389bd3","_0x432f66","_0x2ebd70","_0x38122d","_0x55ba7c","_0x57a70d","_0x6f40f5","_0x17602c","_0x4fd163","_0x1eccdd","_0xc92877","_0x880636","_0x3435d3","_0x56583d","_0x38346d","_0x1bf986","_0x517fa5","_0x7c14ab","_0x235d6a","_0x5d3d78","_0x2d6b86","_0x4ca7f4","_0x12144a","_0x5c434c","_0x3c5418","_0x26ef13","_0x25c903","_0x120fbf","_0x398b6e","_0x5c5a95","_0x6fa145","_0x3108d0","_0x2a0293","_0x5cce37","_0x56aa0f","_0x3f6053","_0x28b72b","_0x42ff28","_0x4b5218","_0x1e1a0f","_0x702868","_0x4327f6","_0x22796f","_0x4491b2","_0x106533","_0x4450eb","_0x2fa41c","_0x53eda4","_0x4a7739","_0x532cc6","_0x384cba","_0x20091f","_0x3ab8b6","_0x31b689","_0x4e42a6","_0x5d31ff","_0xd1cadc","_0x42b54b","_0x420557","_0x549b0d","_0x555018","_0x41617a","_0x177b45","_0x5e19e0","_0x4ddacc","_0x10622f","_0x19daaf","_0x3895e8","_0x21c75e","_0x196e55","_0xc6e3cf","_0x591118","_0x147e5f","_0x10e6f8","_0x4cd9e7","_0x2312cc","_0x59dc20","_0x18b04a","_0xba2482","_0x272aaf","_0x5bb3cb","_0x4e9c66","_0x37031c","_0x28c5de","_0x42de16","_0x5b2a37","_0xa3336","_0x477feb","_0x59c284","_0x670ae9","_0x34dc2d","_0x4945a8","_0x4df845","_0x297f8d","_0xecf762","_0x3550e3","_0x3587c0","_0x41e9b6","_0x5344cd","_0x19a2ee","_0x5042c0","_0x54861d","_0x8998f2","_0xfe1158","_0x392155","_0x19e058","_0x4d5a95","_0x1b2042","_0x24f847","_0x3a39b2","_0x11750a","_0x435152","_0x21ae25","_0x468de5","_0x1bb7b1","_0x426d7c","_0x44316b","_0x5c7e1f","_0x36897c","_0x2d8f90","_0x1b8c2f","_0x319c48","_0x43b2c7","_0x55de15","_0x3dbc08","_0x100ea0","_0x46c4e5","_0x180f80","_0x6faa04","_0x35d87a","_0x216a3f","_0x3599b8","_0x5492e5","_0xb2309c","_0xe8256a","_0x53a748","_0x37aba5","_0x2029dc","_0x47a3c6","_0x5e1b19","_0x9b2369","_0x4fb0f7","_0x40a01c","_0x546e84","_0x34c30c","_0x28c778","_0xbd21c9","_0x87be42","_0x33baf5","_0x35ede4","_0x16099c","_0x52884d","_0xb66ec8","_0x2b3f61","_0x349fe4","_0x3a9781","_0x5ed8c3","_0x121cc3","_0x721b0f","_0x5f3755","_0x135e59","_0x3bf8a9","_0x418048","_0x5f07ff","_0x2bebba","parseInt","_0x4c0ed6","_0x3dcb55","_0x47d0fe","_0xec985f","_0x311ba0","_0x5dca4b","_0x42765b","_0x274502","_0x14ede4","_0x3dc595","_0x4503f9","_0x2220ae","_0x1661d2","_0x116f4e","_0x586edb","_0x347b38","_0x1935b7","_0x4392f3","_0x20dfd2","_0x275d8d","_0x2b85f2","_0x255029","_0x5cd9fb","_0x55abd9","_0x41ee57","_0x2f9da1","_0x11bde8","_0x3ec005","_0xaacd99","_0x40090b","_0x447daa","_0x2cf3b5","_0x50ee5c","_0x25f2b6","_0x5cb1a2","_0x39808f","_0x5c2c01","_0x3944c9","_0x1e5109","_0x2df276","_0x174f12","_0x573563","_0x4ae9ab","_0x95e7a6","_0xb2c07a","_0x5b1c82","_0x1aea97","_0x4c77bd","_0x46ecbe","_0x5dc3eb","_0x91d2ba","_0x432818","_0x126907","_0x4d4b60","_0xea4e16","_0xf2f607","_0x13b822","_0x35c743","_0x494e75","_0x25b170","_0x22b173","_0x2ff47e","_0x28e6bb","_0x333625","_0x5f0460","_0x2ef6ba","_0x3cd0c3","_0x1bcca5","_0x35c2f9","_0x5dc640","_0x2c1889","_0x3129b7","_0x27328d","_0x1cd817","_0x649b85","_0x16cc5e","_0x92bd65","_0x322c61","_0x34fb0c","_0x258d32","_0x52d50f","_0x547fec","_0x1cb5ce","_0x49cb07","_0x5417e3","_0x9a5eb9","_0x57603a","_0x581030","_0x443a4","_0x3eb145","_0x4705b3","_0x232e67","_0x3412d3","_0x57dc05","_0x29b3f2","_0x4f6707","_0x500c55","_0x1aeb46","_0x51058e","_0x4d3c65","_0x2ed8fc","_0x557d70","_0x52f391","_0x55cab8","_0x1f26f1","_0x5d551c","_0x81215","_0x2a92fc","_0x54f344","_0xc2be09","_0x279a0e","_0x5f08a0","_0x5355ef","_0x5db79c","_0x2d6c98","_0x2b5b75","_0x4dc563","_0x41467c","_0x3e1be3","_0x49e2a3","_0x52ade2","_0x2313c7","_0x241d0d","_0x417c50","_0x293a3a","_0x4c6717","_0x339681","_0x4646a6","_0x4f34e8","_0x2c606d","_0xbff5f2","_0x611120","_0x38a8db","_0x59a0a6","_0x448937","_0x4fcc96","_0x2a98c3","_0x31fbd","_0x9c4d7","_0x338caa","_0x4dbf31","_0x58ef2b","_0x1e43ae","_0x2eddc7","_0x310fd3","_0x8ea7d7","_0x3842ee","_0x2e192a","_0x13ba13","_0x389c69","_0x23fe6e","_0xd28157","_0x2e90c6","_0x590122","_0x3bd1bd","_0x40b5c5","_0x4c690c","_0x33f245","_0x589a02","_0xab3118","_0x331095","_0x1fb93d","_0x1ddcd1","_0x11bba6","_0x5c475e","_0x28691f","_0x7dfee1","_0x2c23c0","_0x5703bc","_0x2cc9c1","_0x2b4886","_0x2946f8","_0x4b5890","_0x2597b1","_0x3c9c5f","_0x5c3868","_0x557786","_0x14d7d4","_0x57c727","_0xea529e","_0x2b12cd","_0x439a69","_0x179d39","_0x30cab9","_0x38dc7a","_0x2d0aa7","_0x4b8413","_0x3ec1e1","_0x11b52d","_0x3b2b51","_0x23bd90","_0x46184b","_0x5a76fe","_0x221016","_0x3e8829","_0x3237d4","_0x3585c6","_0x53d484","_0x2f1a0f","_0x29658a","_0x5065de","_0x22f56a","_0x40e2cc","_0x10a715","_0x30f536","_0xcf78b6","_0x43343a","_0x49d097","_0x5bfbfa","_0xc637b7","_0x5992e0","_0x57fb44","_0x3aaa25","_0x586974","_0xa9e047","_0x548569","_0x1fc1c2","_0x173045","_0x3c8755","_0x399335","_0x2bf054","_0x2ec7aa","_0x5b00f1","_0xce9854","_0x289627","_0x5af6e6","_0x375e1c","_0x2b6b86","_0x3bff7e","_0x456ba6","_0x58308b","_0x54cd6b","_0x8477a2","_0x201206","_0x446996","_0x1281ba","_0x43ea94","_0x2b4a5e","_0x3df157","_0x12a540","_0x54811c","_0x2a08ca","_0x16702e","_0x3f01e5","_0x2ad582","_0x3860ee","_0x2adfb0","_0x330bae","_0x417ef7","_0x5c6165","_0x4a9129","_0x3b9c48","_0x165cce","_0x2e525e","_0x2fecbe","_0x4bf2bb","_0x39f6c5","_0x260242","_0x440dcc","_0x13e026","_0x19044a","_0x181d65","_0x1dd661","_0x5a3748","_0x5e4834","_0x987f9d","_0x339708","_0x45c711","_0x344812","_0x16d921","_0x1a3dff","_0x3aaef7","_0x3fb276","_0x4125ad","_0x2ab54e","_0x19be2c","_0x122489","_0x37f816","_0x3a30ff","_0x306f12","_0x6e45a8","_0x438e06","_0x599f23","_0x3ea067","_0x13f40b","_0x440457","_0x321568","_0xc1ae8d","_0x387c50","_0x252585","_0x316852","_0x27ab15","_0x58a1bb","_0x4864a3","_0xd84921","_0x236cf4","_0x4976e0","_0x5392aa","_0xd01614","_0x287473","_0x3f4591","_0xf23859","_0x47bcf0","_0x227250","_0x3fdb4a","_0x24b5ce","_0x404a3e","_0x418f43","_0x1638b9","_0x1674fd","_0x2df6b5","_0x5cb60e","_0x500368","_0x16c1ed","_0x5549b5","_0x578cde","_0x30846e","_0x568965","_0x2af911","_0x2c5acf","_0x32f875","_0x180293","_0x5798ba","_0x159e1e","_0x5a4064","_0x1f7379","_0x351bd2","_0x350df7","_0x337174","_0xe5d851","_0x30fcb6","_0xd93fee","_0x4a2b10","_0x42b5d9","_0x5ea1bb","_0x2585c9","_0x345395","_0x1dc343","_0x386be0","_0x4dc3aa","_0x59f26","_0x2edc69","_0x5e52a1","_0x489427","_0x468480","_0x14b25f","_0x284ede","_0x18f0f7","_0x234918","_0x3b5aea","_0x206cde","_0x203b22","_0x3753ab","_0x421653","_0x1d7082","_0xfef28c","eval","_0x1b4fec","_0x83d628","_0xdcef89","_0x506694","_0x5c4171","_0x5a0002","_0x100de6","_0xf57a79","_0x430fb1","_0x1ec6f8","_0x4b3c47","_0x1d3733","_0x5e97bb","_0x1a9819","_0x3eab21","_0x5f4910","_0x343a58","_0x7cf88d","_0x5ae3a2","_0x5e4a86","_0x1a20f1","_0x543562","_0x247615","_0x5a9948","_0x48c55b","_0x4aa244","_0xa2e838","_0x5194a6","_0xaee1cf","_0xd82326","_0x15080b","_0x453abc","_0x5cb5b0","_0x5a1093","_0x555872","_0x4f3bb9","_0x40bf93","_0x557b87","_0x39e91b","_0x489885","_0x4ebe35","_0x51af99","_0x1e6544","_0x283c17","_0x5114a4","_0x221e97","_0x32013f","_0x561d79","_0xbceabf","_0x485a6e","_0x49a1e1","_0x58cc04","_0x69d3fb","_0x35ee0d","_0x40c442","_0x2ff02d","_0x45eed6","_0x2ad158","_0x1b74b4","_0x38dda4","_0x553cf0","_0x3f5d53","_0x22cf07","_0x2a61f7","_0x25837c","_0xcf263","_0x4ef1ed","_0x45ad06","_0x1b1b2b","_0x8da0aa","_0x239a22","_0x19ddd6","_0x3709e1","_0x54a635","_0x3886bc","_0x4feeab","_0x537dbc","_0x18c820","_0x4e43d4","_0x41acf2","_0x966ae3","_0x280446","_0x34eedc","_0x1aca42","_0x552a77","_0x1ed7b6","_0x6ecc89","_0x9bb519","_0x10efec","_0x2fc5b6","_0x23aa7d","_0x2a3fdf","_0x43dd11","_0x237389","_0x487c2f","_0xa76b8a","_0x58a716","_0x11a452","_0x1da45c","_0x5a05dd","_0xc45caf","_0x32b09b","_0x587046","_0x22e8aa","_0x5b48cd","_0x4a5799","_0x1f7740","_0x456976","_0x36541f","_0xb90b0e","_0x181847","_0x80e985","_0x18fe65","_0x7a5443","_0x25f258","_0x265cc3","_0x4e1f7e","_0x50fc35","_0x428e32","_0x18ba8a","_0x3fc6f6","_0x187b7a","_0xbe6523","_0x1857b4","_0x2c43d9","_0x4316a8","_0x2bf1ae","_0x48a955","_0x1d1371","_0x3237ef","_0x31de40","_0x4bcccb","_0x11bc0c","_0x33d01c","_0x1b953d","_0x1d27fd","_0x538396","_0x24ab53","_0x8e5a71","_0x277404","_0x4c3d3d","_0x5f155f","_0x29995d","_0x1fb77c","_0x8b705e","_0x277e3e","_0x4b7412","_0x543c20","_0x2422aa","_0x1063de","_0x4738ed","_0x425d23","_0x34162c","_0x1df84b","_0x32dca4","_0x22e8ca","_0x4650be","_0x470b59","_0x3947a4","_0x38703d","_0x327261","_0x2d9656","_0x2c58aa","_0x7a78ce","_0x1a0750","_0x521a85","_0x283ebf","_0x466016","_0x19989c","_0x4ff130","_0x70243b","_0x2f64ce","_0x14fa4a","_0x47e8d0","_0x169a42","_0x9b2560","_0x5dd890","_0x4843c9","_0x4280ad","_0x1a5f13","_0x355fc1","_0x53ee9f","_0xa081dd","_0x1efa72","_0x52dd0d","_0x461738","_0x52c0de","Set","module"],"mappings":"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","sourcesContent":["/**\r\n * Object DB in REDIS - Client\r\n *\r\n * Copyright (c) 2018-2020 ioBroker GmbH - All rights reserved.\r\n *\r\n * You may not to use, modify or distribute this package in any form without explicit agreement from ioBroker GmbH.\r\n *\r\n * Unauthorized using, modifying or copying of this file, via any medium is strictly prohibited.\r\n * Proprietary and confidential\r\n * Written by bluefox <dogafox@gmail.com>, 2014-2019\r\n *\r\n */\r\n/* jshint -W097 */\r\n/* jshint strict: false */\r\n/* jslint node: true */\r\n/* jshint -W061 */\r\n'use strict';\r\n\r\nconst extend                = require('node.extend');\r\nconst Redis                 = require('ioredis');\r\n\nconst fs                    = require('fs');\r\nconst path                  = require('path');\r\nconst crypto                = require('crypto');\r\nconst { isDeepStrictEqual } = require('util');\r\nconst deepClone             = require('deep-clone');\r\n\r\nconst utils                 = require(path.join(getControllerDir() || __dirname, 'objectsUtils.js'));\r\n\r\n// copied from tools.js\r\n/**\r\n * Converts ioB pattern into regex.\r\n * @param {string} pattern - Regex string to us it in new RegExp(pattern)\r\n * @returns {string}\r\n */\r\nfunction pattern2RegEx(pattern) {\r\n    pattern = (pattern || '').toString()\r\n        .replace(/\\$/g, '\\\\$')\r\n        .replace(/\\^/g, '\\\\^');\r\n\r\n    if (pattern !== '*') {\r\n        if (pattern[0] === '*' && pattern[pattern.length - 1] !== '*') pattern += '$';\r\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] === '*') pattern = '^' + pattern;\r\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] !== '*') pattern = '^' + pattern + '$';\r\n    }\r\n\r\n    pattern = pattern\r\n        .replace(/\\?/g, '\\\\?')\r\n        .replace(/\\./g, '\\\\.')\r\n        .replace(/\\(/g, '\\\\(')\r\n        .replace(/\\)/g, '\\\\)')\r\n        .replace(/\\[/g, '\\\\[')\r\n        .replace(/]/g, '\\\\]')\r\n        .replace(/\\*/g, '.*');\r\n\r\n    return pattern;\r\n}\r\n\r\nlet crypto_;\r\n\r\n/**\r\n * recursively copy values from old object to new one\r\n *\r\n * @alias copyAttributes\r\n * @memberof tools\r\n * @param {object} oldObj source object\r\n * @param {object} newObj destination object\r\n * @param {object} [originalObj] optional object for read __no_change__ values\r\n * @param {boolean} [isNonEdit] optional indicator if copy is in nonEdit part\r\n *\r\n */\r\nfunction copyAttributes(oldObj, newObj, originalObj, isNonEdit) {\r\n    Object.keys(oldObj).forEach(attr => {\r\n        if (typeof oldObj[attr] !== 'object' || oldObj[attr] instanceof Array) {\r\n            if (oldObj[attr] === '__no_change__' && originalObj && !isNonEdit) {\r\n                if (originalObj[attr] !== undefined) {\r\n                    newObj[attr] = JSON.parse(JSON.stringify(originalObj[attr]));\r\n                } else {\r\n                    console.log(`Attribute ${attr} ignored by copying`);\r\n                }\r\n            } else\r\n            if (oldObj[attr] === '__delete__' && !isNonEdit) {\r\n                if (newObj[attr] !== undefined) {\r\n                    delete newObj[attr];\r\n                }\r\n            } else {\r\n                newObj[attr] = oldObj[attr];\r\n            }\r\n        } else {\r\n            newObj[attr] = newObj[attr] || {};\r\n            copyAttributes(oldObj[attr], newObj[attr], originalObj && originalObj[attr], isNonEdit || attr === 'nonEdit');\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Checks the flag nonEdit and restores non-changeable values if required\r\n *\r\n * @alias checkNonEditable\r\n * @memberof tools\r\n * @param {object} oldObject source object\r\n * @param {object} newObject destination object\r\n *\r\n */\r\nfunction checkNonEditable(oldObject, newObject) {\r\n    if (!oldObject) {\r\n        return true;\r\n    } else\r\n    if (!oldObject.nonEdit && !newObject.nonEdit) {\r\n        return true;\r\n    }\r\n\r\n    // if nonEdit is protected with password\r\n    if (oldObject.nonEdit && oldObject.nonEdit.passHash) {\r\n        // If new Object wants to update the nonEdit information\r\n        if (newObject.nonEdit && newObject.nonEdit.password) {\r\n            crypto_ = crypto_ || require('crypto');\r\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\r\n            if (oldObject.nonEdit.passHash !== hash) {\r\n                delete newObject.nonEdit;\r\n                return false;\r\n            } else {\r\n                oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\r\n                delete oldObject.nonEdit.password;\r\n                delete newObject.nonEdit.password;\r\n                oldObject.nonEdit.passHash = hash;\r\n                newObject.nonEdit.passHash = hash;\r\n            }\r\n            copyAttributes(newObject.nonEdit, newObject, newObject);\r\n\r\n            if (newObject.passHash) {\r\n                delete newObject.passHash;\r\n            }\r\n            if (newObject.nonEdit && newObject.nonEdit.password) {\r\n                delete newObject.nonEdit.password;\r\n            }\r\n\r\n            return true;\r\n        } else {\r\n            newObject.nonEdit = oldObject.nonEdit;\r\n        }\r\n\r\n    } else if (newObject.nonEdit) {\r\n        oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\r\n        if (newObject.nonEdit.password) {\r\n            crypto_ = crypto_ || require('crypto');\r\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\r\n            delete oldObject.nonEdit.password;\r\n            delete newObject.nonEdit.password;\r\n            oldObject.nonEdit.passHash = hash;\r\n            newObject.nonEdit.passHash = hash;\r\n        }\r\n    }\r\n\r\n    // restore settings\r\n    copyAttributes(oldObject.nonEdit, newObject, oldObject);\r\n\r\n    if (newObject.passHash) {\r\n        delete newObject.passHash;\r\n    }\r\n    if (newObject.nonEdit && newObject.nonEdit.password) {\r\n        delete newObject.nonEdit.password;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Checks if the given callback is a function and if so calls it with the given parameter immediately, else a resolved Promise is returned\r\n *\r\n * @param {(...args: any[]) => void | null | undefined} callback - callback function to be executed\r\n * @param {any[]} args - as many arguments as needed, which will be returned by the callback function or by the Promise\r\n * @returns {Promise<any>} - if Promise is resolved with multiple arguments, an array is returned\r\n */\r\nfunction maybeCallback(callback, ...args) {\r\n    if (typeof callback === 'function') {\r\n        // if function we call it with given param\r\n        setImmediate(callback, ...args);\r\n    } else {\r\n        return Promise.resolve(args.length > 1 ? args : args[0]);\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the given callback is a function and if so calls it with the given error and parameter immediately, else a resolved or rejected Promise is returned\r\n *\r\n * @param {((error: Error, ...args: any[]) => void) | null | undefined} callback - callback function to be executed\r\n * @param {Error | string | null | undefined} error - error which will be used by the callback function. If callback is not a function and\r\n * error is given, a rejected Promise is returned. If error is given but it is not an instance of Error, it is converted into one.\r\n * @param {any[]} args - as many arguments as needed, which will be returned by the callback function or by the Promise\r\n * @returns {Promise<any>} - if Promise is resolved with multiple arguments, an array is returned\r\n */\r\nfunction maybeCallbackWithError(callback, error, ...args) {\r\n    if (error !== undefined && error !== null && !(error instanceof Error)) {\r\n        // if its not a real Error, we convert it into one\r\n        error = new Error(error);\r\n    }\r\n\r\n    if (typeof callback === 'function') {\r\n        setImmediate(callback, error, ...args);\r\n    } else if (error) {\r\n        return Promise.reject(error);\r\n    } else {\r\n        return Promise.resolve(args.length > 1 ? args : args[0]);\r\n    }\r\n}\r\n\r\nconst tools       = {\r\n    checkNonEditable,\r\n    pattern2RegEx,\r\n    maybeCallback,\r\n    maybeCallbackWithError\r\n};\r\n\n\nconst scriptFiles = {};\r\nscriptFiles.custom = '-- design: custom\\n-- search: state\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result = redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1] .. \"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart = KEYS[1] .. KEYS[2]\\nlocal argEnd = KEYS[1] .. KEYS[3]\\n--  function(doc) {\\n--      if (doc.type===\"state\" && (doc.common.custom || doc.common.history))\\n--          emit(doc._id, doc.common.custom || doc.common.history)\\n--   }\\nfor _, key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        local obj = redis.call(\"get\", key)\\n        local success, decoded = pcall(cjson.decode, obj)\\n        if (success and decoded.type == \"state\" and decoded.common ~= nil and decoded.common.custom ~= nil) then\\n            rep[#rep + 1] = obj\\n        end\\n    end\\nend\\nreturn { rep, cursor }\\n';\nscriptFiles.filter = '-- func: function(doc) { if (doc.type === \"%1\") emit(doc._id, doc); }\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[5];\\nlocal result = redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1] .. \"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart = KEYS[1] .. KEYS[2]\\nlocal argEnd = KEYS[1] .. KEYS[3]\\nlocal type = KEYS[4]\\n-- function(doc) { if (doc.type === \"chart\") emit(doc._id, doc); }\\nfor _, key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        local obj = redis.call(\"get\", key)\\n        local success, decoded = pcall(cjson.decode, obj)\\n        if (success and decoded.type == type) then\\n            rep[#rep + 1] = obj\\n        end\\n    end\\nend\\nreturn { rep, cursor }\\n';\nscriptFiles.programs = '-- design: hm-rega\\n-- search: programs\\nlocal rep = {}\\nlocal cursor = KEYS[4];\\nlocal result = redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1] .. \"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart = KEYS[1] .. KEYS[2]\\nlocal argEnd = KEYS[1] .. KEYS[3]\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"PROGRAM\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n        local obj = redis.call(\"get\", key)\\n        local success, decoded = pcall(cjson.decode, obj)\\n        if (success and decoded.native ~= nil and decoded.native.TypeName == \"PROGRAM\") then\\n            rep[#rep + 1] = obj\\n        end\\n    end\\nend\\nreturn { rep, cursor }\\n';\nscriptFiles.script = '-- design: script\\n-- search: javascript\\nlocal rep = {}\\nlocal cursor = KEYS[4];\\nlocal result = redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1] .. \"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart = KEYS[1] .. KEYS[2]\\nlocal argEnd = KEYS[1] .. KEYS[3]\\n--  function(doc) {\\n--      if (doc.type === \"script\" && doc.common.engineType.match(/^[jJ]ava[sS]cript|^[cC]offee[sS]cript|^[tT]ype[sS]cript|^Blockly/)) emit(doc.common.name, doc); }\\nfor _, key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        local obj = redis.call(\"get\", key)\\n        local success, decoded = pcall(cjson.decode, obj)\\n        if (success and decoded.type == \"script\") then\\n            rep[#rep + 1] = obj\\n        end\\n    end\\nend\\nreturn { rep, cursor }\\n';\nscriptFiles.variables = '-- design: hm-rega\\n-- search: variables\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result = redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1] .. \"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart = KEYS[1] .. KEYS[2]\\nlocal argEnd = KEYS[1] .. KEYS[3]\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"ALARMDP\" || doc.native.TypeName === \"VARDP\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n        local obj = redis.call(\"get\", key)\\n        local success, decoded = pcall(cjson.decode, obj)\\n        if (success and decoded.native ~= nil and (decoded.native.TypeName == \"ALARMDP\" or decoded.native.TypeName == \"VARDP\")) then\\n            rep[#rep + 1] = obj\\n        end\\n    end\\nend\\nreturn { rep, cursor }\\n';\n\r\nfunction getControllerDir() {\r\n    const possibilities = ['iobroker.js-controller', 'ioBroker.js-controller'];\r\n    let controllerPath = null;\r\n    for (const pkg of possibilities) {\r\n        try {\r\n            const possiblePath = require.resolve(pkg);\r\n            if (fs.existsSync(possiblePath)) {\r\n                controllerPath = possiblePath;\r\n                break;\r\n            }\r\n        } catch (_a) {\r\n            /* not found */\r\n        }\r\n    }\r\n    // Apparently, checking vs null/undefined may miss the odd case of controllerPath being \"\"\r\n    // Thus we check for falsyness, which includes failing on an empty path\r\n    if (!controllerPath) {\r\n        controllerPath = path.join(__dirname, '..', '..', 'lib', 'objects');\r\n        if (!fs.existsSync(controllerPath)) {\r\n            controllerPath = null;\r\n        }\r\n    } else {\r\n        controllerPath = path.join(path.dirname(controllerPath), 'lib', 'objects');\r\n    }\r\n    return controllerPath;\r\n}\r\n\r\nclass ObjectsInRedis {\r\n\r\n    constructor(settings) {\r\n        // const originalSettings = settings;\r\n        this.settings = settings || {};\r\n        this.redisNamespace = (this.settings.redisNamespace || (this.settings.connection && this.settings.connection.redisNamespace) || 'cfg') + '.';\r\n        this.fileNamespace = this.redisNamespace + 'f.';\r\n        this.fileNamespaceL = this.fileNamespace.length;\r\n        this.objNamespace = this.redisNamespace + 'o.';\r\n        this.objNamespaceL = this.objNamespace.length;\r\n        const ioRegExp = new RegExp('^' + this.objNamespace.replace(/\\./g, '\\\\.') + '[_A-Za-z0-9ÄÖÜäöüа-яА-Я]+'); // cfg.o.[_A-Za-z0-9]+\r\n\r\n        const onChange = this.settings.change; // on change handler\r\n        const onChangeUser = this.settings.changeUser; // on change handler for User events\r\n\r\n        this.stop = false;\r\n        this.client = null;\r\n        this.sub = null;\r\n        this.subSystem = null;\r\n        this.preserveSettings = ['custom', 'smartName', 'material', 'habpanel', 'mobile'];\r\n        this.defaultNewAcl = this.settings.defaultNewAcl || null;\r\n        this.namespace = this.settings.namespace || this.settings.hostname || '';\r\n        this.scripts = {};\r\n\r\n        // cached meta objects for file operations\r\n        this.existingMetaObjects = {};\r\n\r\n        this.log = utils.getLogger(this.settings.logger);\r\n\r\n        this.settings.connection = this.settings.connection || {};\r\n\r\n        // limit max number of log entries in the list\r\n        this.settings.connection.maxQueue = this.settings.connection.maxQueue || 1000;\r\n\r\n        this.settings.connection.options = this.settings.connection.options || {};\r\n        const retry_max_delay = this.settings.connection.options.retry_max_delay || 5000;\r\n        const retry_max_count = this.settings.connection.options.retry_max_count || 19;\r\n\r\n        this.settings.connection.options.retryStrategy = reconnectCount => {\r\n            if (!ready && initError && ignoreErrors) {\r\n                return new Error('No more tries');\r\n            }\r\n            if (this.stop) {\r\n                return new Error('Client has stopped ... no retries anymore');\r\n            }\r\n            if (ready && reconnectCount >= retry_max_count) {\r\n                return new Error('Stop trying to reconnect');\r\n            }\r\n            // A function that receives an options object as parameter including the retry attempt,\r\n            // the total_retry_time indicating how much time passed since the last time connected,\r\n            // the error why the connection was lost and the number of times_connected in total.\r\n            // If you return a number from this function, the retry will happen exactly after that\r\n            // time in milliseconds. If you return a non-number, no further retry will happen and\r\n            // all offline commands are flushed with errors. Return an error to return that\r\n            // specific error to all offline commands.\r\n\r\n            if (!ready) {\r\n                return 300;\r\n            } else {\r\n                return retry_max_delay;\r\n            }\r\n            /*if (options.error.code === 'ECONNREFUSED') {\r\n                // End reconnecting on a specific error and flush all commands with a individual error\r\n                return new Error('The server refused the connection');\r\n            }\r\n            if (options.total_retry_time > 1000 * 60 * 60) {\r\n                // End reconnecting after a specific timeout and flush all commands with a individual error\r\n                return new Error('Retry time exhausted');\r\n            }\r\n            if (options.times_connected > 10) {\r\n                // End reconnecting with built in error\r\n                return undefined;\r\n            }\r\n            // reconnect after\r\n            return Math.max(options.attempt * 100, 3000);*/\r\n        };\r\n\r\n        delete this.settings.connection.options.retry_max_delay;\r\n        this.settings.connection.options.enableReadyCheck = true;\r\n\r\n        let ready = false;\r\n        let initError = false;\r\n        let ignoreErrors = false;\r\n        let connected = false;\r\n        let reconnectCounter = 0;\r\n\r\n        if (this.settings.connection.port === 0) { // Port = 0 means unix socket\r\n            // initiate a unix socket connection\r\n            this.settings.connection.options.path = this.settings.connection.host;\r\n            this.log.debug(this.namespace + ' Redis Objects: Use File Socket for connection: ' + this.settings.connection.options.path);\r\n        } else if (Array.isArray(this.settings.connection.host)) { // Host is an array means we use a sentinel\r\n            const defaultPort = Array.isArray(this.settings.connection.port) ? null : this.settings.connection.port;\r\n\r\n            this.settings.connection.options.sentinels = this.settings.connection.host.map((redisNode, idx) => ({\r\n                host: redisNode,\r\n                port: defaultPort || this.settings.connection.port[idx]\r\n            }));\r\n\r\n            this.settings.connection.options.name = this.settings.connection.sentinelName ? this.settings.connection.sentinelName : 'mymaster';\r\n            this.log.debug(this.namespace + ' Redis Objects: Use Sentinel for connection: ' + this.settings.connection.options.name + ', ' + JSON.stringify(this.settings.connection.options.sentinels));\r\n        } else {\r\n            this.settings.connection.options.host = this.settings.connection.host;\r\n            this.settings.connection.options.port = this.settings.connection.port;\r\n            this.log.debug(this.namespace + ' Redis Objects: Use Redis connection: ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port);\r\n        }\r\n        this.settings.connection.options.db = this.settings.connection.options.db || 0;\r\n        this.settings.connection.options.family = this.settings.connection.options.family || 0;\r\n        this.settings.connection.options.password = this.settings.connection.options.auth_pass || this.settings.connection.pass || null;\r\n\r\n        this.settings.connection.options.autoResubscribe = false; // We do our own resubscribe because other sometimes not work\r\n\r\n        this.client = new Redis(this.settings.connection.options);\r\n\r\n        this.client.on('error', error => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Redis ERROR Objects: (' + ignoreErrors + '/' + this.stop + ') ' + error.message + ' / ' + error.stack);\r\n            if (this.stop) {\r\n                return;\r\n            }\r\n            if (!ready) {\r\n                initError = true;\r\n                // Seems we have a socket.io server\r\n                if (!ignoreErrors && error.message.startsWith('Protocol error, got \"H\" as reply type byte.')) {\r\n                    this.log.error('Socket.io Server detected. Please update to js-controller 2.0 or higher!');\r\n                }\r\n                return;\r\n            }\r\n            this.log.error(this.settings.namespace + ' ' + error.message);\r\n        });\r\n\r\n        this.client.on('end', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end (stop=' + this.stop + ')');\r\n            ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n        });\r\n\r\n        this.client.on('connect', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event connect (stop=' + this.stop + ')');\r\n            connected = true;\r\n        });\r\n\r\n        this.client.on('close', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event close (stop=' + this.stop + ')');\r\n            //if (ready && typeof this.settings.disconnected === 'function') this.settings.disconnected();\r\n        });\r\n\r\n        this.client.on('reconnecting', () => {\r\n            if (connected && !ready && !initError && !ignoreErrors) {\r\n                reconnectCounter++;\r\n            }\r\n\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')');\r\n\r\n            if (reconnectCounter > 2) { // fallback logic for nodejs <10\r\n                this.log.error('Could not connect database at ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port + ' (invalid protocol). Please make sure the configured IP and port points to a host running JS-Controller >= 2.0.');\r\n                return;\r\n            }\r\n            connected = false;\r\n            initError = false;\r\n        });\r\n\r\n        this.client.on('ready', async () => {\r\n            if (this.stop) {\r\n                return;\r\n            }\r\n            initError = false;\r\n            ignoreErrors = false;\r\n\r\n            this.log.debug(this.namespace + ' Objects client ready ... initialize now');\r\n            try {\r\n                await this.client.config('set', ['lua-time-limit', 10000]); // increase LUA timeout TODO needs better fix\r\n            } catch (e) {\r\n                this.log.warn(`Unable to increase LUA script timeout: ${e}`);\r\n            }\r\n\r\n            let initCounter = 0;\r\n            if (!this.subSystem && typeof onChange === 'function') {\r\n                initCounter++;\r\n                this.log.debug(this.namespace + ' Objects create System PubSub Client');\r\n                this.subSystem = new Redis(this.settings.connection.options);\r\n                this.subSystem.ioBrokerSubscriptions = {};\r\n\r\n                if (typeof onChange === 'function') {\r\n                    this.subSystem.on('pmessage', (pattern, channel, message) =>\r\n                        setImmediate(() => {\r\n                            this.log.silly(`${this.namespace} Objects system redis pmessage ${pattern}/${channel}:${message}`);\r\n                            try {\r\n                                if (ioRegExp.test(channel)) {\r\n                                    const id = channel.substring(this.objNamespaceL);\r\n                                    try {\r\n                                        const obj = message ? JSON.parse(message) : null;\r\n\r\n                                        if (this.settings.controller &&\r\n                                                id === 'system.config' &&\r\n                                                obj &&\r\n                                                obj.common &&\r\n                                                obj.common.defaultNewAcl &&\r\n                                                !isDeepStrictEqual(obj.common.defaultNewAcl, this.defaultNewAcl)) {\r\n                                            this.defaultNewAcl = JSON.parse(JSON.stringify(obj.common.defaultNewAcl));\r\n                                            this.setDefaultAcl(this.defaultNewAcl);\r\n                                        }\r\n\r\n                                        onChange(id, obj);\r\n                                    } catch (e) {\r\n                                        this.log.warn(`${this.namespace} Objects Cannot process system pmessage ${id} - ${message}: ${e.message}`);\r\n                                        this.log.warn(`${this.namespace} ${e.stack}`);\r\n                                    }\r\n                                } else {\r\n                                    this.log.warn(`${this.namespace} Objects Received unexpected system pmessage: ${channel}`);\r\n                                }\r\n                            } catch (e) {\r\n                                this.log.warn(this.namespace + ' Objects system pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\r\n                                this.log.warn(this.namespace + ' ' + e.stack);\r\n                            }\r\n                        }));\r\n                }\r\n\r\n                this.subSystem.on('end', () => {\r\n                    this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis System Event end sub (stop=' + this.stop + ')');\r\n                    ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n                });\r\n\r\n                this.subSystem.on('error', error => {\r\n                    if (this.stop) {\r\n                        return;\r\n                    }\r\n                    this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub System client Objects No redis connection: ' + JSON.stringify(error));\r\n                });\r\n\r\n                if (this.settings.connection.enhancedLogging) {\r\n                    this.subSystem.on('connect', () =>\r\n                        this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event connect (stop=' + this.stop + ')'));\r\n\r\n                    this.subSystem.on('close', () =>\r\n                        this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event close (stop=' + this.stop + ')'));\r\n\r\n                    this.subSystem.on('reconnecting', reconnectCounter =>\r\n                        this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\r\n                }\r\n\r\n                this.subSystem.on('ready', async () => {\r\n                    if (--initCounter < 1) {\r\n                        if (this.settings.connection.port === 0) {\r\n                            this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                        } else {\r\n                            this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                        }\r\n                        !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                        ready = true;\r\n                    }\r\n                    // subscribe on system.config only if js-controller\r\n                    if (this.settings.controller) {\r\n                        try {\r\n                            await this.subSystem.psubscribe(`${this.objNamespace}system.config`);\r\n                        } catch {\r\n                            // ignore\r\n                        }\r\n                    }\r\n                    for (const sub of Object.keys(this.subSystem.ioBrokerSubscriptions)) {\r\n                        try {\r\n                            await this.subSystem.psubscribe(sub);\r\n                        } catch {\r\n                            // ignore\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!this.sub && typeof onChangeUser === 'function') {\r\n                initCounter++;\r\n                this.log.debug(this.namespace + ' Objects create User PubSub Client');\r\n                this.sub = new Redis(this.settings.connection.options);\r\n                this.sub.ioBrokerSubscriptions = {};\r\n\r\n                this.sub.on('pmessage', (pattern, channel, message) => {\r\n                    setImmediate(() => {\r\n                        this.log.silly(this.namespace + ' Objects user redis pmessage ' + pattern + '/' + channel + ':' + message);\r\n                        try {\r\n                            if (ioRegExp.test(channel)) {\r\n                                const id = channel.substring(this.objNamespaceL);\r\n                                try {\r\n                                    const obj = message ? JSON.parse(message) : null;\r\n\r\n                                    onChangeUser(id, obj);\r\n                                } catch (e) {\r\n                                    this.log.warn(`${this.namespace} Objects user cannot process pmessage ${id} - ${message}: ${e.message}`);\r\n                                    this.log.warn(`${this.namespace} ${e.stack}`);\r\n                                }\r\n                            } else {\r\n                                this.log.warn(`${this.namespace} Objects user received unexpected pmessage: ${channel}`);\r\n                            }\r\n                        } catch (e) {\r\n                            this.log.warn(this.namespace + ' Objects user pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\r\n                            this.log.warn(this.namespace + ' ' + e.stack);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.sub.on('end', () => {\r\n                    this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end user sub (stop=' + this.stop + ')');\r\n                    ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n                });\r\n\r\n                this.sub.on('error', error => {\r\n                    if (this.stop) {\r\n                        return;\r\n                    }\r\n                    this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub user client Objects No redis connection: ' + JSON.stringify(error));\r\n                });\r\n\r\n                if (this.settings.connection.enhancedLogging) {\r\n                    this.sub.on('connect', () =>\r\n                        this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event connect (stop=' + this.stop + ')'));\r\n\r\n                    this.sub.on('close', () =>\r\n                        this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event close (stop=' + this.stop + ')'));\r\n\r\n                    this.sub.on('reconnecting', reconnectCounter =>\r\n                        this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\r\n                }\r\n\r\n                this.sub.on('ready', async () => {\r\n                    if (--initCounter < 1) {\r\n                        if (this.settings.connection.port === 0) {\r\n                            this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                        } else {\r\n                            this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                        }\r\n                        !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                        ready = true;\r\n                    }\r\n\r\n                    for (const sub of Object.keys(this.sub.ioBrokerSubscriptions)) {\r\n                        try {\r\n                            await this.sub.psubscribe(sub);\r\n                        } catch {\r\n                            // ignore\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.log.debug(this.namespace + ' Objects client initialize lua scripts');\r\n            initCounter++;\r\n            this.loadLuaScripts(async () => {\r\n                if (!this.client) {\r\n                    return;\r\n                }\r\n                // init default new acl\r\n                let obj;\r\n                try {\r\n                    obj = await this.client.get(this.objNamespace + 'system.config');\r\n                } catch {\r\n                    // ignore\r\n                }\r\n                if (obj) {\r\n                    try {\r\n                        obj = JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON system.config: ${obj}`);\r\n                        obj = null;\r\n                    }\r\n                    if (obj && obj.common && obj.common.defaultNewAcl) {\r\n                        this.defaultNewAcl = obj.common.defaultNewAcl;\r\n                    }\r\n                } else {\r\n                    this.log.error(`${this.namespace} Cannot read system.config: ${obj} (OK when migrating or restoring)`);\r\n                }\r\n\r\n                if (--initCounter < 1) {\r\n                    if (this.settings.connection.port === 0) {\r\n                        this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                    } else {\r\n                        this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                    }\r\n                    !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                    ready = true;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getStatus() {\r\n        return {type: 'redis', server: false};\r\n    }\r\n\r\n    /**\r\n     * Checks if given Id is a meta object, else throws error\r\n     *\r\n     * @param {string} id to check\r\n     * @throws Error if id is invalid\r\n     */\r\n    async validateMetaObject(id) {\r\n        if (this.existingMetaObjects[id] === undefined) {\r\n            // if not cached -> getObject\r\n            const obj = await this.getObjectAsync(id);\r\n            if (obj && obj.type === 'meta') {\r\n                this.existingMetaObjects[id] = true;\r\n            } else {\r\n                this.existingMetaObjects[id] = false;\r\n                return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\r\n            }\r\n        } else if (this.existingMetaObjects[id] === false) {\r\n            return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\r\n        }\r\n    }\r\n\r\n    normalizeFilename(name) {\r\n        return name ? name.replace(/[/\\\\]+/g, '/') : name;\r\n    }\r\n\r\n    // -------------- FILE FUNCTIONS -------------------------------------------\r\n    async _setBinaryState(id, data, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!Buffer.isBuffer(data)) {\r\n            data = Buffer.from(data);\r\n        }\r\n        try {\r\n            await this.client.set(id, data);\r\n            return tools.maybeCallback(callback);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get buffer of given id from redis\r\n     *\r\n     * @param {string} id - id of the data with namespace prefix\r\n     * @param {function(Error|null, Buffer?):void} [callback] - cb function, if not given a Promise is returned\r\n     * @return {Promise<Buffer|void>}\r\n     * @private\r\n     */\r\n    async _getBinaryState(id, callback) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        try {\r\n            const data = await this.client.getBuffer(id);\r\n            return tools.maybeCallbackWithError(callback, null, data);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * deletes binary state of given id from redis db\r\n     *\r\n     * @param {string} id - id to delete, with namespace prefix\r\n     * @param {function(Error|null):void} [callback] - callback function, if not given promise is returned\r\n     * @return {Promise<void>}\r\n     * @private\r\n     */\r\n    async _delBinaryState(id, callback) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        } else {\r\n            try {\r\n                await this.client.del(id);\r\n                return tools.maybeCallback(callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    getFileId(id, name, isMeta) {\r\n        name = this.normalizeFilename(name);\r\n        // e.g. ekey.admin and admin/ekey.png\r\n        if (id.match(/\\.admin$/)) {\r\n            if (name.match(/^admin\\//)) {\r\n                name = name.replace(/^admin\\//, '');\r\n            } else\r\n            // e.g. ekey.admin and iobroker.ekey/admin/ekey.png\r\n            if (name.match(/^iobroker.[-\\d\\w]\\/admin\\//i)) {\r\n                name = name.replace(/^iobroker.[-\\d\\w]\\/admin\\//i, '');\r\n            }\r\n        }\r\n        const normalized = utils.sanitizePath(id, name);\r\n        if (!normalized) {\r\n            this.log.debug(this.namespace + ' Invalid file path ' + id + '/' + name);\r\n            return '';\r\n        }\r\n        id = normalized.id;\r\n        name = normalized.name;\r\n\r\n        return this.fileNamespace + id + '$%$' + name + (isMeta !== undefined ? (isMeta ? '$%$meta' : '$%$data') : '');\r\n    }\r\n\r\n    async checkFile(id, name, options, flag, callback) {\r\n        // read file settings from redis\r\n        const fileId = this.getFileId(id, name, true);\r\n        if (!fileId) {\r\n            const fileOptions = {'notExists': true};\r\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\r\n                return typeof callback === 'function' && setImmediate(() => callback(false, options, fileOptions)); // NO error\r\n            } else {\r\n                return typeof callback === 'function' && setImmediate(() => callback(true, options)); // error\r\n            }\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED, options));\r\n        }\r\n        let fileOptions;\r\n        try {\r\n            fileOptions = await this.client.get(fileId);\r\n        } catch {\r\n            // ignore\r\n        }\r\n        fileOptions = fileOptions || '{\"notExists\": true}';\r\n        try {\r\n            fileOptions = JSON.parse(fileOptions);\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${fileOptions}`);\r\n            fileOptions = {notExists: true};\r\n        }\r\n        if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\r\n            return typeof callback === 'function' && callback(false, options, fileOptions); // NO error\r\n        } else {\r\n            return typeof callback === 'function' && callback(true, options); // error\r\n        }\r\n    }\r\n\r\n    checkFileRights(id, name, options, flag, callback) {\r\n        return utils.checkFileRights(this, id, name, options, flag, callback);\r\n    }\r\n\r\n    _setDefaultAcl(ids, defaultAcl) {\r\n        if (ids && ids.length) {\r\n            const id = ids.shift();\r\n            this.getObject(id, (err, obj) => {\r\n                if (obj && !obj.acl) {\r\n                    obj.acl = defaultAcl;\r\n                    this.setObject(id, obj, null, () =>\r\n                        setImmediate(() =>\r\n                            this._setDefaultAcl(ids, defaultAcl)));\r\n                } else {\r\n                    setImmediate(() =>\r\n                        this._setDefaultAcl(ids, defaultAcl));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setDefaultAcl(defaultNewAcl) {\r\n        this.defaultNewAcl = defaultNewAcl || {\r\n            owner: utils.CONSTS.SYSTEM_ADMIN_USER,\r\n            ownerGroup: utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n            object: 0x664,\r\n            state: 0x664,\r\n            file: 0x664\r\n        };\r\n        // Get ALL Objects\r\n        this.getKeys('*', (err, ids) => this._setDefaultAcl(ids, this.defaultNewAcl));\r\n    }\r\n\r\n    getUserGroup(user, callback) {\r\n        return utils.getUserGroup(this, user, (error, user, userGroups, userAcl) => {\r\n            if (error) {\r\n                this.log.error(this.namespace + ' ' + error);\r\n            }\r\n            callback.call(this, user, userGroups, userAcl);\r\n        });\r\n    }\r\n\r\n    insert(id, attName, ignore, options, obj, callback) {\r\n        return utils.insert(this, id, attName, ignore, options, obj, callback);\r\n    }\r\n\r\n    async _writeFile(id, name, data, options, callback, meta) {\r\n        const ext         = name.match(/\\.[^.]+$/);\r\n        const mime        = utils.getMimeType(ext);\r\n        const _mimeType   = mime.mimeType;\r\n        const isBinary    = mime.isBinary;\r\n\r\n        const metaID = this.getFileId(id, name, true);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        // virtual files only get Meta objects\r\n        if (options.virtualFile) {\r\n            meta = {\r\n                notExists: true,\r\n                virtualFile: true\r\n            }; // Store file with flags as it would not exist\r\n            try {\r\n                await this.client.set(metaID, JSON.stringify(meta));\r\n                return tools.maybeCallback(callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        } else {\r\n            if (!meta) {\r\n                meta = {createdAt: Date.now()};\r\n            }\r\n            if (!meta.acl) {\r\n                meta.acl = {\r\n                    owner: options.user || (this.defaultNewAcl && this.defaultNewAcl.owner) || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                    ownerGroup: options.group || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                    permissions: options.mode || (this.defaultNewAcl && this.defaultNewAcl.file) || 0x644\r\n                };\r\n            }\r\n            meta.stats = {\r\n                size: data ? data.length : 0\r\n            };\r\n            if (Object.prototype.hasOwnProperty.call(meta, 'notExists')) {\r\n                delete meta.notExists;\r\n            }\r\n\r\n            meta.mimeType = options.mimeType || _mimeType;\r\n            meta.binary = isBinary;\r\n            meta.acl.ownerGroup = meta.acl.ownerGroup || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n            meta.modifiedAt = Date.now();\r\n\r\n            this._setBinaryState(this.getFileId(id, name, false), data, async err => {\r\n                try {\r\n                    await this.client.set(metaID, JSON.stringify(meta));\r\n                    return tools.maybeCallbackWithError(callback, err);\r\n                } catch (e) {\r\n                    return tools.maybeCallbackWithError(callback, err || e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async writeFile(id, name, data, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (typeof options === 'string') {\r\n            options = {mimeType: options};\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.writeFile(id, name, data, options, err =>\r\n                    err ? reject(err) : resolve()));\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.error(`Cannot write file ${name}: ${e.message}`);\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (data === undefined) {\r\n            data = null;\r\n        }\r\n\r\n        // If file yet exists => check the permissions\r\n        return this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                return this._writeFile(id, name, data, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    writeFileAsync(id, name, data, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.writeFile(id, name, data, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    async _readFile(id, name, options, callback, meta) {\r\n        if (meta.notExists) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        let buffer;\r\n        try {\r\n            buffer = await this._getBinaryState(this.getFileId(id, name, false));\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n        const mimeType = meta && meta.mimeType;\r\n        if (meta && !meta.binary && buffer) {\r\n            buffer = buffer.toString();\r\n        }\r\n        return tools.maybeCallbackWithError(callback, null, buffer, mimeType);\r\n    }\r\n\r\n    async readFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options  = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.readFile(id, name, options, (err, res, mimeType) =>\r\n                    err ? reject(err) : resolve({data: res, mimeType: mimeType})));\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        options = options || {};\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                return this._readFile(id, name, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    readFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.readFile(id, name, options, (err, res, mimeType) =>\r\n                err ? reject(err) : resolve({data: res, mimeType: mimeType})));\r\n    }\r\n\r\n    /**\r\n     * Check if given object exists\r\n     *\r\n     * @param {string} id id of the object\r\n     * @param {object} [options] optional user context\r\n     * @return {Promise<boolean>}\r\n     */\r\n    async objectExists(id, options) {\r\n        if (!this.client) {\r\n            return Promise.reject(new Error(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!id || typeof id !== 'string') {\r\n            return Promise.reject(new Error(`invalid id ${JSON.stringify(id)}`));\r\n        }\r\n\r\n        try {\r\n            await new Promise((resolve, reject) => {\r\n                utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_LIST, err => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n            });\r\n            const exists = await this.client.exists(this.objNamespace + id);\r\n            return !!exists;\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot check object existence of \"${id}\": ${e}`);\r\n            return Promise.reject(new Error(`Cannot check object existence of \"${id}\": ${e}`));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if given file exists\r\n     *\r\n     * @param {string} id id of the namespace\r\n     * @param {string} [name] name of the file\r\n     * @param {object} [options] optional user context\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    async fileExists(id, name, options) {\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        try {\r\n            await new Promise((resolve, reject) => {\r\n                this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, err => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n            });\r\n            id = this.getFileId(id, name, false);\r\n            const exists = await this.client.exists(id);\r\n            return !!exists;\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot check file existence of \"${id}\": ${e}`);\r\n            return Promise.reject(new Error(`Cannot check file existence of \"${id}\": ${e}`));\r\n        }\r\n    }\r\n\r\n    async _unlink(id, name, options, callback, meta) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (meta && meta.notExists) {\r\n            this._rm(id, name, options, callback);\r\n            //typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        } else {\r\n            const metaID = this.getFileId(id, name, true);\r\n            const dataID = this.getFileId(id, name, false);\r\n            try {\r\n                await this._delBinaryState(dataID);\r\n                await this.client.del(metaID);\r\n                return tools.maybeCallback(callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    unlink(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options  = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.file['delete']) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._unlink(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    unlinkAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unlink(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    delFile(id, name, options, callback) {\r\n        return this.unlink(id, name, options, callback);\r\n    }\r\n\r\n    delFileAsync(id, name, options) {\r\n        return this.unlinkAsync(id, name, options);\r\n    }\r\n\r\n    async _readDir(id, name, options, callback) {\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (id === '') { // special case for \"root\"\r\n            const dirID = this.getFileId('*', '*');\r\n\r\n            let keys;\r\n            try {\r\n                keys = await this._getKeysViaScan(dirID);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            const result = [];\r\n            if (!keys || !keys.length) {\r\n                return tools.maybeCallbackWithError(callback, null, result);\r\n            }\r\n            let lastDir;\r\n            keys.sort().forEach(dir => {\r\n                dir = dir.substring(this.fileNamespaceL, dir.indexOf('$%$'));\r\n                if (dir !== lastDir) {\r\n                    result.push({\r\n                        file: dir,\r\n                        stats: {},\r\n                        isDir: true\r\n                    });\r\n                }\r\n                lastDir = dir;\r\n            });\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        }\r\n\r\n        const dirID = this.getFileId(id, name + (name.length ? '/' : '') + '*');\r\n\r\n        let keys;\r\n        try {\r\n            keys = await this._getKeysViaScan(dirID);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        const start = dirID.indexOf('$%$') + 3;\r\n        const end = '$%$meta'.length;\r\n\r\n        const baseName = name + (name.length ? '/' : '');\r\n        const dirs = [];\r\n        const deepLevel = baseName.split('/').length;\r\n        if (!keys || !keys.length) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND, []);\r\n        }\r\n        keys = keys\r\n            .sort()\r\n            .filter(key => {\r\n                if (key.match(/\\$%\\$meta$/)) {\r\n                    const parts = key.substr(start, key.length - end).split('/');\r\n                    if (parts.length === deepLevel) {\r\n                        return !key.includes('/_data.json$%$') && key !== '_data.json'; // sort out \"virtual\" files that are used to mark directories\r\n                    } else {\r\n                        const dir = parts[deepLevel - 1];\r\n                        if (dirs.indexOf(dir) === -1) {\r\n                            dirs.push(dir);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        if (!keys.length) {\r\n            const result = [];\r\n            while (dirs.length) {\r\n                result.push({\r\n                    file: dirs.shift(),\r\n                    stats: {},\r\n                    isDir: true\r\n                });\r\n            }\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        }\r\n\r\n        // Check permissions\r\n        let objs;\r\n        try {\r\n            objs = await this.client.mget(keys);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        const result = [];\r\n        const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n        objs = objs || [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const file = keys[i].substring(start + baseName.length, keys[i].length - end);\r\n            while (dirs.length && dirs[0] < file) {\r\n                result.push({\r\n                    file: dirs.shift(),\r\n                    stats: {},\r\n                    isDir: true\r\n                });\r\n            }\r\n\r\n            try {\r\n                objs[i] = JSON.parse(objs[i]);\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                continue;\r\n            }\r\n            if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                if (!objs[i] || objs[i].virtualFile) {\r\n                    continue;\r\n                } // virtual file, ignore\r\n                objs[i].acl = objs[i].acl || {};\r\n                if (options.user !== utils.CONSTS.SYSTEM_ADMIN_USER && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) === -1) {\r\n                    objs[i].acl.read  = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_READ);\r\n                    objs[i].acl.write = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_WRITE);\r\n                } else {\r\n                    objs[i].acl.read  = true;\r\n                    objs[i].acl.write = true;\r\n                }\r\n                result.push({\r\n                    file: file,\r\n                    stats: objs[i].stats,\r\n                    isDir: false,\r\n                    acl: objs[i].acl,\r\n                    modifiedAt: objs[i].modifiedAt,\r\n                    createdAt:  objs[i].createdAt\r\n                });\r\n            }\r\n        }\r\n        while (dirs.length) {\r\n            result.push({\r\n                file: dirs.shift(),\r\n                stats: {},\r\n                isDir: true\r\n            });\r\n        }\r\n        return tools.maybeCallbackWithError(callback, null, result);\r\n    }\r\n\r\n    async readDir(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        // remove first and last\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n        if (name.endsWith('/')) {\r\n            name = name.substring(0, name.length - 1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.file.list) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    this._readDir(id, name, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    readDirAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.readDir(id, name, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    async _renameHelper(keys, oldBase, newBase, callback) {\r\n        if (!keys || !keys.length) {\r\n            return tools.maybeCallback(callback);\r\n        } else {\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            for (const id of keys) {\r\n                try {\r\n                    await this.client.rename(id.replace(/\\$%\\$meta$/, '$%$data'), id.replace(oldBase, newBase).replace(/\\$%\\$meta$/, '$%$data'));\r\n                    await this.client.rename(id, id.replace(oldBase, newBase));\r\n                } catch (e) {\r\n                    return tools.maybeCallbackWithError(callback, e);\r\n                }\r\n            }\r\n            return tools.maybeCallback(callback);\r\n        }\r\n    }\r\n\r\n    async _rename(id, oldName, newName, options, callback, meta) {\r\n        const oldMetaID = this.getFileId(id, oldName, true);\r\n        const oldDataID = this.getFileId(id, oldName, false);\r\n        const newMetaID = this.getFileId(id, newName, true);\r\n        const newDataID = this.getFileId(id, newName, false);\r\n        if (!meta || !this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        } else if (meta.notExists) {\r\n            oldName = this.normalizeFilename(oldName);\r\n            newName = this.normalizeFilename(newName);\r\n\r\n            // it could be dir\r\n            if (!oldName.endsWith('/*')) {\r\n                oldName += '/*';\r\n            } else if (oldName.endsWith('/')) {\r\n                oldName += '*';\r\n            }\r\n\r\n            if (!newName.endsWith('/*')) {\r\n                newName += '/*';\r\n            } else if (newName.endsWith('/')) {\r\n                newName += '*';\r\n            }\r\n\r\n            const oldBase = oldName.substring(0, oldName.length - 1);\r\n            const newBase = newName.substring(0, newName.length - 1);\r\n            const dirID = this.getFileId(id, oldName);\r\n            let keys;\r\n            try {\r\n                keys = await this._getKeysViaScan(dirID);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            if (!keys) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n            if (!keys.length) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n            // Check permissions\r\n            let objs;\r\n            try {\r\n                objs = await this.client.mget(keys);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n            let result;\r\n            const dontCheck =\r\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n            objs = objs || [];\r\n            if (!dontCheck) {\r\n                result = [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                        result.push(keys[i]);\r\n                    }\r\n                }\r\n            } else {\r\n                result = keys;\r\n            }\r\n            return this._renameHelper(result, oldBase, newBase, callback);\r\n        } else {\r\n            try {\r\n                await this.client.rename(oldDataID, newDataID);\r\n                await this.client.rename(oldMetaID, newMetaID);\r\n                return tools.maybeCallback(callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    rename(id, oldName, newName, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof oldName !== 'string' || !oldName.length || oldName === '/' || oldName === '//' ||\r\n            typeof newName !== 'string' || !newName.length || newName === '/' || newName === '//') {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        if (oldName.startsWith('/')) {\r\n            oldName = oldName.substring(1);\r\n        }\r\n        if (newName.startsWith('/')) {\r\n            newName = newName.substring(1);\r\n        }\r\n        if (oldName.endsWith('/')) {\r\n            oldName = oldName.substring(0, oldName.length - 1);\r\n        }\r\n        if (newName.endsWith('/')) {\r\n            newName = newName.substring(0, newName.length - 1);\r\n        }\r\n\r\n        this.checkFileRights(id, oldName, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    this._rename(id, oldName, newName, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    renameAsync(id, oldName, newName, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.rename(id, oldName, newName, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    async _touch(id, name, options, callback, meta) {\r\n        const metaID = this.getFileId(id, name, true);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta || meta.notExists) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        meta.modifiedAt = Date.now();\r\n        try {\r\n            await this.client.set(metaID, JSON.stringify(meta));\r\n            return tools.maybeCallback(callback);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n    }\r\n\r\n    touch(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                return this._touch(id, name, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    touchAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.touch(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    async _rmHelper(keys, callback) {\r\n        if (!keys || !keys.length) {\r\n            return tools.maybeCallback(callback);\r\n        } else {\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            try {\r\n                await this._delBinaryState(id.replace(/\\$%\\$meta$/, '$%$data'));\r\n                await this.client.del(id);\r\n                setImmediate(this._rmHelper, keys, callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    async _rm(id, name, options, callback, meta) {\r\n        if (meta && !meta.isDir) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            const dataID = this.getFileId(id, name, false);\r\n            this.delObject(dataID, _err => this.delObject(metaID, callback));\r\n        } else {\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            name = this.normalizeFilename(name);\r\n            // it could be dir\r\n            if (! name.endsWith('/*')) {\r\n                name += '/*';\r\n            } else if (name.endsWith('/')) {\r\n                name += '*';\r\n            }\r\n            const dirID = this.getFileId(id, name);\r\n            let keys;\r\n            try {\r\n                keys = await this._getKeysViaScan(dirID);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            if (!keys) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n            if (!keys.length) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n            // Check permissions\r\n            let objs;\r\n            try {\r\n                objs = await this.client.mget(keys);\r\n            } catch {\r\n                // ignore\r\n            }\r\n            let result;\r\n            const dontCheck =\r\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n            objs = objs || [];\r\n            if (!dontCheck) {\r\n                result = [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                        result.push(keys[i]);\r\n                    }\r\n                }\r\n            } else {\r\n                result = keys;\r\n            }\r\n            const files = result.map(key => {\r\n                const name = key.substring(this.fileNamespaceL + id.length + 3, key.length - 7);\r\n                const pos = name.lastIndexOf('/');\r\n                if (pos !== -1) {\r\n                    return {file: name.substring(pos + 1), path: name.substring(0, pos)};\r\n                } else {\r\n                    return {file: id, path: ''};\r\n                }\r\n            });\r\n            this._rmHelper(result, () => {\r\n                return tools.maybeCallbackWithError(callback, null, files);\r\n            });\r\n        }\r\n    }\r\n\r\n    rm(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        this.checkFileRights(id, null, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.file['delete']) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._rm(id, name, options, callback, meta && meta.notExists ? null : meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    rmAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.rm(id, name, options, (err, files) =>\r\n                err ? reject(err) : resolve(files)));\r\n    }\r\n\r\n    // simulate. redis has no dirs\r\n    mkdir(id, dirName, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (typeof dirName !== 'string') {\r\n            dirName = '';\r\n        }\r\n\r\n        dirName = this.normalizeFilename(dirName);\r\n        if (dirName.startsWith('/')) {\r\n            dirName = dirName.substring(1);\r\n        }\r\n        this.checkFileRights(id, dirName, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    // we create a dummy file (for file this file exists to store meta data)\r\n                    options = options || {};\r\n                    options.virtualFile = true; // this is a virtual File\r\n                    const realName = dirName + (dirName.endsWith('/') ? '' : '/');\r\n                    this.writeFile(id, realName + '_data.json', '', options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    mkdirAsync(id, dirName, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.mkdir(id, dirName, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    async _chownFileHelper(keys, metas, options, callback) {\r\n        if (!keys || !keys.length) {\r\n            return tools.maybeCallback(callback);\r\n        }\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        const id  = keys.shift();\r\n        const meta = metas.shift();\r\n        meta.acl.owner      = options.owner;\r\n        meta.acl.ownerGroup = options.ownerGroup;\r\n        try {\r\n            await this.client.set(id, JSON.stringify(meta));\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        return setImmediate(this._chownFileHelper, keys, metas, options, callback);\r\n    }\r\n\r\n    async _chownFile(id, name, options, callback, meta) {\r\n        if (!meta) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta.isDir && !meta.notExists) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            meta.acl.owner = options.owner;\r\n            meta.acl.ownerGroup = options.ownerGroup;\r\n            try {\r\n                await this.client.set(metaID, JSON.stringify(meta));\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n            const nameArr = name.split('/');\r\n            const file = nameArr.pop();\r\n            const res = [{\r\n                path:       nameArr.join('/'),\r\n                file:       file,\r\n                stats:      meta.stats,\r\n                isDir:      false,\r\n                acl:        meta.acl || {},\r\n                modifiedAt: meta.modifiedAt,\r\n                createdAt:  meta.createdAt\r\n            }];\r\n            return tools.maybeCallbackWithError(callback, null, res);\r\n        }\r\n\r\n        // it could be dir\r\n        if (! name.endsWith('/*')) {\r\n            name += '/*';\r\n        } else if (name.endsWith('/')) {\r\n            name += '*';\r\n        }\r\n        const dirID = this.getFileId(id, name);\r\n\r\n        let keys;\r\n        try {\r\n            keys = await this._getKeysViaScan(dirID);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!keys) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        keys = keys\r\n            .sort()\r\n            .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n        // Check permissions\r\n        let metas;\r\n        try {\r\n            metas = await this.client.mget(keys);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n        const dontCheck = options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n        const keysFiltered = [];\r\n        const objsFiltered = [];\r\n        const processed = [];\r\n        const start = dirID.indexOf('$%$') + 3;\r\n        const end = '$%$meta'.length;\r\n\r\n        metas = metas || [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            try {\r\n                metas[i] = JSON.parse(metas[i]);\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\r\n                continue;\r\n            }\r\n            if (dontCheck || utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                if (!metas[i] || metas[i].virtualFile) {\r\n                    continue;\r\n                } // virtual file, ignore\r\n                keysFiltered.push(keys[i]);\r\n                objsFiltered.push(metas[i]);\r\n\r\n                const name = keys[i].substring(start, keys[i].length - end);\r\n                const nameArr = name.split('/');\r\n                const file = nameArr.pop();\r\n                processed.push({\r\n                    path:       nameArr.join('/'),\r\n                    file:       file,\r\n                    stats:      metas[i].stats || {},\r\n                    isDir:      false,\r\n                    acl:        metas[i].acl || {},\r\n                    modifiedAt: metas[i].modifiedAt,\r\n                    createdAt:  metas[i].createdAt\r\n                });\r\n            }\r\n        }\r\n        this._chownFileHelper(keysFiltered, objsFiltered, options, err => {\r\n            return tools.maybeCallbackWithError(callback, err, processed);\r\n        });\r\n    }\r\n\r\n    chownFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        if (typeof options !== 'object') {\r\n            options = {owner: options};\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (!options.ownerGroup && options.group) {\r\n            options.ownerGroup = options.group;\r\n        }\r\n        if (!options.owner      && options.user)  {\r\n            options.owner      = options.user;\r\n        }\r\n\r\n        if (!options.owner) {\r\n            this.log.error(this.namespace + ' user is not defined');\r\n            return tools.maybeCallbackWithError(callback, 'invalid parameter');\r\n        }\r\n\r\n        if (!options.ownerGroup) {\r\n            // get user group\r\n            this.getUserGroup(options.owner, (user, groups /* , permissions */) => {\r\n                if (!groups || !groups[0]) {\r\n                    return tools.maybeCallbackWithError(callback, `user \"${options.owner}\" belongs to no group`);\r\n                } else {\r\n                    options.ownerGroup = groups[0];\r\n                }\r\n                this.chownFile(id, name, options, callback);\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chownFile(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chownFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chownFile(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    async _chmodFileHelper(keys, metas, options, callback) {\r\n        if (!keys || !keys.length) {\r\n            return tools.maybeCallback(callback);\r\n        } else {\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id   = keys.shift();\r\n            const meta = metas.shift();\r\n            meta.acl.permissions = options.mode;\r\n            try {\r\n                await this.client.set(id, JSON.stringify(meta));\r\n                return setImmediate(this._chmodFileHelper, keys, metas, options, callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    async _chmodFile(id, name, options, callback, meta) {\r\n        if (!meta) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta.isDir && !meta.notExists) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            meta.acl.permissions = options.mode;\r\n            try {\r\n                await this.client.set(metaID, JSON.stringify(meta));\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n\r\n            const nameArr = name.split('/');\r\n            const file = nameArr.pop();\r\n            const res = [{\r\n                path:       nameArr.join('/'),\r\n                file:       file,\r\n                stats:      meta.stats,\r\n                isDir:      false,\r\n                acl:        meta.acl || {},\r\n                modifiedAt: meta.modifiedAt,\r\n                createdAt:  meta.createdAt\r\n            }];\r\n            return tools.maybeCallbackWithError(callback, null, res);\r\n        }\r\n\r\n        // it could be dir\r\n        if (!name.endsWith('/*')) {\r\n            name += '/*';\r\n        } else if (name.endsWith('/')) {\r\n            name += '*';\r\n        }\r\n        const dirID = this.getFileId(id, name);\r\n\r\n        let keys;\r\n        try {\r\n            keys = await this._getKeysViaScan(dirID);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!keys) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        keys = keys\r\n            .sort()\r\n            .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n        // Check permissions\r\n        let objs;\r\n        try {\r\n            objs = await this.client.mget(keys);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n        const keysFiltered = [];\r\n        const objsFiltered = [];\r\n        const processed = [];\r\n        const start = dirID.indexOf('$%$') + 3;\r\n        const end = '$%$meta'.length;\r\n\r\n        objs = objs || [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            try {\r\n                objs[i] = JSON.parse(objs[i]);\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                continue;\r\n            }\r\n            if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                if (!objs[i] || objs[i].virtualFile) {\r\n                    continue;\r\n                } // virtual file, ignore\r\n                keysFiltered.push(keys[i]);\r\n                objsFiltered.push(objs[i]);\r\n\r\n                const name = keys[i].substring(start, keys[i].length - end);\r\n                const nameArr = name.split('/');\r\n                const file = nameArr.pop();\r\n                processed.push({\r\n                    path:       nameArr.join('/'),\r\n                    file:       file,\r\n                    stats:      objs[i].stats,\r\n                    isDir:      false,\r\n                    acl:        objs[i].acl || {},\r\n                    modifiedAt: objs[i].modifiedAt,\r\n                    createdAt:  objs[i].createdAt\r\n                });\r\n            }\r\n        }\r\n        this._chmodFileHelper(keysFiltered, objsFiltered, options, err => {\r\n            return tools.maybeCallbackWithError(callback, err, processed);\r\n        });\r\n    }\r\n\r\n    chmodFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        if (name[0].startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {mode: options};\r\n        }\r\n\r\n        if (options.mode === undefined) {\r\n            this.log.error(this.namespace + ' mode is not defined');\r\n            return tools.maybeCallbackWithError(callback, 'invalid parameter');\r\n        } else if (typeof options.mode === 'string') {\r\n            options.mode = parseInt(options.mode, 16);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chmodFile(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chmodFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chmodFile(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    enableFileCache(enabled, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, _options) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                // cache cannot be enabled\r\n                return tools.maybeCallbackWithError(callback, null, false);\r\n            }\r\n        });\r\n    }\r\n\r\n    enableFileCacheAsync(enabled, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.enableFileCache(enabled, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    // -------------- OBJECT FUNCTIONS -------------------------------------------\r\n    _subscribe(pattern, options, subClient, callback) {\r\n        if (!subClient) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (Array.isArray(pattern)) {\r\n            let count = pattern.length;\r\n            pattern.forEach(pattern => {\r\n                this.log.silly(`${this.namespace} redis psubscribe ${this.objNamespace}${pattern}`);\r\n                subClient.psubscribe(this.objNamespace + pattern, err => {\r\n                    if (!err) {\r\n                        subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\r\n                    }\r\n                    if (!--count) {\r\n                        return tools.maybeCallbackWithError(callback, err);\r\n                    }\r\n                });\r\n\r\n            });\r\n        } else {\r\n            this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\r\n            subClient.psubscribe(this.objNamespace + pattern, err => {\r\n                if (!err) {\r\n                    subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\r\n                }\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            });\r\n        }\r\n    }\r\n\r\n    subscribeConfig(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._subscribe(pattern, options, this.subSystem, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribe(pattern, options, callback) {\r\n        return this.subscribeConfig(pattern, options, callback);\r\n    }\r\n\r\n    subscribeAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.subscribe(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    subscribeUser(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._subscribe(pattern, options, this.sub, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeUserAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.subscribeUser(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _unsubscribe(pattern, options, subClient, callback) {\r\n        if (!subClient) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (Array.isArray(pattern)) {\r\n            let count = pattern.length;\r\n            pattern.forEach(pattern => {\r\n                this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\r\n                subClient.punsubscribe(this.objNamespace + pattern, err => {\r\n                    if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\r\n                        delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\r\n                    }\r\n                    !--count && typeof callback === 'function' && callback(err);\r\n                });\r\n            });\r\n        } else {\r\n            this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\r\n            subClient.punsubscribe(this.objNamespace + pattern, err => {\r\n                if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\r\n                    delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\r\n                }\r\n                typeof callback === 'function' && callback(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    unsubscribeConfig(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._unsubscribe(pattern, options, this.subSystem, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    unsubscribe(pattern, options, callback) {\r\n        return this.unsubscribeConfig(pattern, options, callback);\r\n    }\r\n\r\n    unsubscribeAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unsubscribe(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    unsubscribeUser(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._unsubscribe(pattern, options, this.sub, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    unsubscribeUserAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unsubscribeUser(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    async _objectHelper(keys, objs, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id  = keys.shift();\r\n            const obj = objs.shift();\r\n            const message = JSON.stringify(obj);\r\n            try {\r\n                await this.client.set(id, message);\r\n                await this.client.publish(id, message);\r\n                setImmediate(this._objectHelper, keys, objs, callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    _chownObject(pattern, options, callback) {\r\n        this.getConfigKeys(pattern, options, async (err, keys) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            }\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            let objects;\r\n            try {\r\n                objects = await this.client.mget(keys);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n            const filteredKeys = [];\r\n            const filteredObjs = [];\r\n            objects = objects || [];\r\n            for (let k = 0; k < keys.length; k++) {\r\n                try {\r\n                    objects[k] = JSON.parse(objects[k]);\r\n                } catch (e) {\r\n                    this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\r\n                    continue;\r\n                }\r\n                if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                    continue;\r\n                }\r\n                if (!objects[k].acl) {\r\n                    objects[k].acl = {\r\n                        owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                        ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                        object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\r\n                    };\r\n                    if (objects[k].type === 'state') {\r\n                        objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\r\n                    }\r\n                }\r\n                objects[k].acl.owner      = options.owner;\r\n                objects[k].acl.ownerGroup = options.ownerGroup;\r\n                filteredKeys.push(keys[k]);\r\n                filteredObjs.push(objects[k]);\r\n            }\r\n            this._objectHelper(filteredKeys, filteredObjs, () => {\r\n                return tools.maybeCallbackWithError(callback, null, filteredObjs);\r\n            });\r\n        }, true);\r\n    }\r\n\r\n    chownObject(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        options.acl = null;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {owner: options};\r\n        }\r\n\r\n        if (!options.ownerGroup && options.group) {\r\n            options.ownerGroup = options.group;\r\n        }\r\n        if (!options.owner && options.user)  {\r\n            options.owner = options.user;\r\n        }\r\n\r\n        if (!options.owner) {\r\n            this.log.error(`${this.namespace} user is not defined`);\r\n            return tools.maybeCallbackWithError(callback, 'invalid parameter');\r\n        }\r\n\r\n        if (!options.ownerGroup) {\r\n            // get user group\r\n            this.getUserGroup(options.owner, (user, groups /* , permissions*/) => {\r\n                if (!groups || !groups[0]) {\r\n                    return tools.maybeCallbackWithError(callback, `user \"${options.owner}\" belongs to no group`);\r\n                } else {\r\n                    options.ownerGroup = groups[0];\r\n                }\r\n                this.chownObject(pattern, options, callback);\r\n            });\r\n            return;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                if (!options.acl.object || !options.acl.object.write) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chownObject(pattern, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chownObjectAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chownObject(pattern, options, (err, list) =>\r\n                err ? reject(err) : resolve(list)));\r\n    }\r\n\r\n    _chmodObject(pattern, options, callback) {\r\n        this.getConfigKeys(pattern, options, async (err, keys) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            }\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            let objects;\r\n            try {\r\n                objects = await this.client.mget(keys);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n\r\n            const filteredKeys = [];\r\n            const filteredObjs = [];\r\n            objects = objects || [];\r\n            for (let k = 0; k < keys.length; k++) {\r\n                try {\r\n                    objects[k] = JSON.parse(objects[k]);\r\n                } catch (e) {\r\n                    this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\r\n                    continue;\r\n                }\r\n                if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                    continue;\r\n                }\r\n                if (!objects[k].acl) {\r\n                    objects[k].acl = {\r\n                        owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                        ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                        object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\r\n                    };\r\n                    if (objects[k].type === 'state') {\r\n                        objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\r\n                    }\r\n                }\r\n                if (options.object !== undefined) {\r\n                    objects[k].acl.object = options.object;\r\n                }\r\n                if (options.state !== undefined) {\r\n                    objects[k].acl.state = options.state;\r\n                }\r\n                filteredKeys.push(keys[k]);\r\n                filteredObjs.push(objects[k]);\r\n            }\r\n            this._objectHelper(filteredKeys, filteredObjs, () => {\r\n                return tools.maybeCallbackWithError(callback, null, filteredObjs);\r\n            });\r\n        }, true);\r\n    }\r\n\r\n    chmodObject(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        options.acl = null;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {object: options};\r\n        }\r\n\r\n        if (options.mode && !options.object) {\r\n            options.object = options.mode;\r\n        }\r\n\r\n        if (options.object === undefined) {\r\n            this.log.error(this.namespace + ' mode is not defined');\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n        } else if (typeof options.mode === 'string') {\r\n            options.mode = parseInt(options.mode, 16);\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._chmodObject(pattern, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chmodObjectAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chmodObject(pattern, options, (err, list) =>\r\n                err ? reject(err) : resolve(list)));\r\n    }\r\n\r\n    async _getObject(id, options, callback) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!id || typeof id !== 'string') {\r\n            return tools.maybeCallbackWithError(callback, `invalid id ${JSON.stringify(id)}`);\r\n        }\r\n\r\n        let obj, err;\r\n        try {\r\n            obj = await this.client.get(this.objNamespace + id);\r\n        } catch (e) {\r\n            this.log.debug(`${this.namespace} redis get ${id}, error - ${e}`);\r\n            err = e;\r\n        }\r\n\r\n        try {\r\n            obj = obj ? JSON.parse(obj) : null;\r\n        } catch (e) {\r\n            this.log.warn(`${this.namespace} Cannot parse ${id} - ${obj}: ${e.message}`);\r\n        }\r\n        if (obj) {\r\n            // Check permissions\r\n            if (utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ)) {\r\n                return tools.maybeCallbackWithError(callback, null, obj);\r\n            } else {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n            }\r\n        } else {\r\n            return tools.maybeCallbackWithError(callback, err, obj);\r\n        }\r\n    }\r\n\r\n    getObject(id, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObject(id, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            if (options && options.acl) {\r\n                options.acl = null;\r\n            }\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    return tools.maybeCallbackWithError(callback, err);\r\n                } else {\r\n                    return this._getObject(id, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObject(id, options, (err, obj) =>\r\n                err ? reject(err) : resolve(obj)));\r\n    }\r\n\r\n    async _getKeys(pattern, options, callback, dontModify) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!pattern || typeof pattern !== 'string') {\r\n            return tools.maybeCallbackWithError(callback, `invalid pattern ${JSON.stringify(pattern)}`);\r\n        }\r\n\r\n        const r = new RegExp(tools.pattern2RegEx(pattern));\r\n        let keys;\r\n\r\n        try {\r\n            keys = await this._getKeysViaScan(this.objNamespace + pattern);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        const result = [];\r\n        if (keys) {\r\n            keys.sort();\r\n            const result = [];\r\n            const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n            if (dontCheck) {\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    const id = keys[i].substring(this.objNamespaceL);\r\n                    if (r.test(id)) {\r\n                        if (!dontModify) {\r\n                            result.push(id);\r\n                        } else {\r\n                            result.push(keys[i]);\r\n                        }\r\n                    }\r\n                }\r\n                return tools.maybeCallbackWithError(callback, null, result);\r\n            } else {\r\n                // Check permissions\r\n                let metas;\r\n                try {\r\n                    metas = await this.client.mget(keys);\r\n                } catch (e) {\r\n                    return tools.maybeCallbackWithError(callback, e);\r\n                }\r\n                metas = metas || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        metas[i] = JSON.parse(metas[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\r\n                        continue;\r\n                    }\r\n\r\n                    if (r.test(keys[i]) && utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                        if (!dontModify) {\r\n                            result.push(keys[i].substring(this.objNamespaceL));\r\n                        } else {\r\n                            result.push(keys[i]);\r\n                        }\r\n                    }\r\n                }\r\n                return tools.maybeCallbackWithError(callback, null, result);\r\n            }\r\n        } else {\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        }\r\n    }\r\n\r\n    getKeys(pattern, options, callback, dontModify) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getKeys(pattern, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj), dontModify));\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getKeys(pattern, options, callback, dontModify);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getKeysAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getKeys(id, options, (err, keys) =>\r\n                err ? reject(err) : resolve(keys)));\r\n    }\r\n\r\n    getConfigKeys(pattern, options, callback, dontModify) {\r\n        return this.getKeys(pattern, options, callback, dontModify);\r\n    }\r\n\r\n    async _getObjects(keys, options, callback, dontModify) {\r\n        if (!keys) {\r\n            return tools.maybeCallbackWithError(callback, 'no keys', null);\r\n        }\r\n        if (!keys.length) {\r\n            return tools.maybeCallbackWithError(callback, null, []);\r\n        }\r\n\r\n        let _keys;\r\n        if (!dontModify) {\r\n            _keys = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                _keys[i] = this.objNamespace + keys[i];\r\n            }\r\n        } else {\r\n            _keys = keys;\r\n        }\r\n\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        let objs;\r\n        try {\r\n            objs = await this.client.mget(_keys);\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis mget ' + (!objs ? 0 : objs.length) + ' ' + _keys.length);\r\n        } catch (e) {\r\n            this.log.warn(`${this.namespace} redis mget ${!objs ? 0 : objs.length} ${_keys.length}, err: ${e}`);\r\n        }\r\n        let result = [];\r\n\r\n        if (objs) {\r\n            const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n            if (!dontCheck) {\r\n                for (let i = 0; i < objs.length; i++) {\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${objs[i]}`);\r\n                        result.push({error: utils.ERRORS.ERROR_PERMISSION});\r\n                        continue;\r\n                    }\r\n                    if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                        result.push(objs[i]);\r\n                    } else {\r\n                        result.push({error: utils.ERRORS.ERROR_PERMISSION});\r\n                    }\r\n                }\r\n            } else {\r\n                result = objs.map((obj, i) => {\r\n                    try {\r\n                        return JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${obj}`);\r\n                        return null;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return tools.maybeCallbackWithError(callback, null, result);\r\n    }\r\n\r\n    getObjects(keys, options, callback, dontModify) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjects(keys, options, (err, objs) =>\r\n                    err ? reject(err) : resolve(objs), dontModify));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjects(keys, options, callback, dontModify);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectsAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjects(id, options, (err, objs) =>\r\n                err ? reject(err) : resolve(objs)));\r\n    }\r\n\r\n    async _getObjectsByPattern(pattern, options, callback) {\r\n        if (!pattern || typeof pattern !== 'string') {\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\r\n            return;\r\n        }\r\n\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        let keys;\r\n        try {\r\n            keys = await this._getKeysViaScan(this.objNamespace + pattern);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        this.settings.connection.enhancedLogging && this.log.silly(`${this.namespace} redis keys ${keys.length} ${pattern}`);\r\n        this._getObjects(keys, options, callback, true);\r\n    }\r\n\r\n    getObjectsByPattern(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectsByPattern(pattern, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectsByPattern(pattern, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectsByPatternAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectsByPattern(pattern, options, (err, objs) =>\r\n                err ? reject(err) : resolve(objs)));\r\n    }\r\n\r\n    async _setObject(id, obj, options, callback) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n\r\n        if (!obj) {\r\n            this.log.warn(this.namespace + ' setObject: Argument object is null');\r\n            return typeof callback === 'function' && setImmediate(() => callback('obj is null'));\r\n        }\r\n        if (typeof obj !== 'object') {\r\n            this.log.warn(this.namespace + ' setObject: Argument object is no object: ' + obj);\r\n            return typeof callback === 'function' && setImmediate(() => callback('obj is no object'));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        // make a copy of object, because we will modify it\r\n        obj = deepClone(obj);\r\n\r\n        obj._id = id;\r\n\r\n        let oldObj;\r\n        try {\r\n            oldObj = await this.client.get(this.objNamespace + id);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        try {\r\n            oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n            return tools.maybeCallbackWithError(callback, `Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n        }\r\n\r\n        if (!tools.checkNonEditable(oldObj, obj)) {\r\n            return tools.maybeCallbackWithError(callback, 'Invalid password for update of vendor information');\r\n        }\r\n\r\n        // do not delete common settings, like \"history\" or \"mobile\". It can be erased only with \"null\"\r\n        if (oldObj && oldObj.common) {\r\n            this.preserveSettings.forEach(commonSetting => {\r\n                // special case if \"custom\"\r\n                if (commonSetting === 'custom') {\r\n                    if (!oldObj.common.custom) {\r\n                        // do nothing\r\n                    } else if ((!obj.common || !obj.common.custom) && oldObj.common.custom) {\r\n                        obj.common = obj.common || {};\r\n                        obj.common.custom = oldObj.common.custom;\r\n                    } else if (obj.common && obj.common.custom && oldObj.common.custom) {\r\n                        // merge together\r\n                        Object.keys(oldObj.common.custom).forEach(attr => {\r\n                            if (obj.common.custom[attr] === null) {\r\n                                delete obj.common.custom[attr];\r\n                            } else if (obj.common.custom[attr] === undefined) {\r\n                                obj.common.custom[attr] = oldObj.common.custom[attr];\r\n                            }\r\n                        });\r\n                    }\r\n                    // remove custom if no one attribute inside\r\n                    if (obj.common && obj.common.custom) {\r\n                        Object.keys(obj.common.custom).forEach(attr => {\r\n                            if (obj.common.custom[attr] === null) {\r\n                                delete obj.common.custom[attr];\r\n                            }\r\n                        });\r\n                        if (!Object.keys(obj.common.custom).length) {\r\n                            delete obj.common.custom;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // remove settings if desired\r\n                    if (obj.common && obj.common[commonSetting] === null) {\r\n                        delete obj.common[commonSetting];\r\n                    } else\r\n                    // if old setting present and new setting is absent\r\n                    if (oldObj.common[commonSetting] !== undefined && (!obj.common || obj.common[commonSetting] === undefined)) {\r\n                        obj.common = obj.common || {};\r\n                        obj.common[commonSetting] = oldObj.common[commonSetting];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (obj.common && obj.common.alias && obj.common.alias.id) {\r\n            if (typeof obj.common.alias.id === 'object') {\r\n                if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\r\n                    return typeof callback === 'function' && callback('Invalid alias ID');\r\n                }\r\n\r\n                if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\r\n                    return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                }\r\n            } else {\r\n                if (typeof obj.common.alias.id !== 'string') {\r\n                    return typeof callback === 'function' && callback('Invalid alias ID');\r\n                }\r\n\r\n                if (obj.common.alias.id.startsWith('alias.')) {\r\n                    return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (oldObj && oldObj.acl && !obj.acl) {\r\n            obj.acl = oldObj.acl;\r\n        }\r\n\r\n        // add user default rights\r\n        if (this.defaultNewAcl && !obj.acl) {\r\n            obj.acl = deepClone(this.defaultNewAcl);\r\n            delete obj.acl.file;\r\n            if (obj.type !== 'state') {\r\n                delete obj.acl.state;\r\n            }\r\n            // take the owner as current user\r\n            if (options.user) {\r\n                obj.acl.owner = options.user;\r\n            }\r\n            // take the group as current user's group\r\n            if (options.group) {\r\n                obj.acl.ownerGroup = options.group;\r\n            } else  {\r\n                obj.acl.ownerGroup = null;\r\n                return this.getUserGroup(obj.acl.owner, async (user, groups /* , permissions */) => {\r\n                    if (!groups || !groups[0]) {\r\n                        options.group = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n                    } else {\r\n                        options.group = groups[0];\r\n                    }\r\n                    obj.acl.ownerGroup = options.group;\r\n                    const message = JSON.stringify(obj);\r\n                    try {\r\n                        await this.client.set(this.objNamespace + id, message);\r\n\r\n                        // object updated -> if type changed to meta -> cache\r\n                        if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\r\n                            this.existingMetaObjects[id] = true;\r\n                        }\r\n\r\n                        //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                        await this.client.publish(this.objNamespace + id, message);\r\n\r\n                        return tools.maybeCallbackWithError(callback, null, {id});\r\n                    } catch (e) {\r\n                        return tools.maybeCallbackWithError(callback, e, {id});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.defaultNewAcl && obj.acl && !obj.acl.ownerGroup && options.group) {\r\n            obj.acl.ownerGroup = options.group;\r\n        }\r\n\r\n        const message = JSON.stringify(obj);\r\n        try {\r\n            await this.client.set(this.objNamespace + id, message);\r\n            //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n            // object updated -> if type changed to meta -> cache\r\n            if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\r\n                this.existingMetaObjects[id] = true;\r\n            }\r\n\r\n            await this.client.publish(this.objNamespace + id, message);\r\n\r\n            return tools.maybeCallbackWithError(callback, null, {id});\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e, {id});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set anew or update object\r\n     *\r\n     * This function writes the object into DB\r\n     *\r\n     * @alias setObject\r\n     * @memberof objectsInMemServer\r\n     * @param {string} id ID of the object\r\n     * @param {object} obj\r\n     * @param {object} options options for access control are optional\r\n     * @param {function} callback return function\r\n     */\r\n    setObject(id, obj, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.setObject(id, obj, options, (err, res) =>\r\n                    err ? reject(err) : resolve(res)));\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._setObject(id, obj, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    setObjectAsync(id, obj, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.setObject(id, obj, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    async _delObject(id, options, callback) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return tools.maybeCallbackWithError(callback, `Invalid ID: ${id}`);\r\n        }\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        // read object\r\n        let oldObj;\r\n        try {\r\n            oldObj = await this.client.get(this.objNamespace + id);\r\n        } catch (e) {\r\n            this.log.warn(`${this.namespace} redis get ${id}, error - ${e}`);\r\n        }\r\n\r\n        if (!oldObj) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        try {\r\n            oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n        } catch (e) {\r\n            this.log.warn(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n        }\r\n\r\n        if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_PERMISSION);\r\n        } else {\r\n            try {\r\n                await this.client.del(this.objNamespace + id);\r\n                // object has been deleted -> remove from cached meta if there\r\n                if (this.existingMetaObjects[id]) {\r\n                    this.existingMetaObjects[id] = false;\r\n                }\r\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' null');\r\n                await this.client.publish(this.objNamespace + id, 'null');\r\n                return tools.maybeCallback(callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    delObject(id, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.delObject(id, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_DELETE, (err, options) => {\r\n            if (err) {\r\n                return tools.maybeCallbackWithError(callback, err);\r\n            } else {\r\n                return this._delObject(id, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    delObjectAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.delObject(id, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    // this function is very ineffective. Because reads all objects and then process them\r\n    async _applyViewFunc(func, params, options, callback) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        const result = {\r\n            rows: []\r\n        };\r\n\r\n        // filters objs which are already present in array by property 'id'\r\n        const filterDuplicates = arr => {\r\n            const included = {};\r\n            return arr.filter(obj => {\r\n                if (included[obj.id]) {\r\n                    return false;\r\n                } else {\r\n                    included[obj.id] = true;\r\n                    return true;\r\n                }\r\n            });\r\n        };\r\n\r\n        params = params || {};\r\n        params.startkey = params.startkey || '';\r\n        params.endkey   = params.endkey   || '\\u9999';\r\n        const wildcardPos = params.endkey.indexOf('\\u9999');\r\n        let wildCardLastPos = true;\r\n        if (wildcardPos !== -1 && wildcardPos !== params.endkey.length - 1) {\r\n            wildCardLastPos = false; // TODO do in LUA\r\n        }\r\n        let m;\r\n\r\n        // if start and and end keys are equal modify end key\r\n        if (params.startkey === params.endkey) {\r\n            params.endkey = params.endkey + '\\u0000';\r\n        }\r\n\r\n        // filter by type\r\n        if (wildCardLastPos && func && func.map && this.scripts.filter && (m = func.map.match(/if\\s\\(doc\\.type\\s?===?\\s?'(\\w+)'\\)\\semit\\(([^,]+),\\s?doc\\s?\\)/))) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n\r\n                let objs;\r\n                try {\r\n                    objs = await this.client.evalsha([this.scripts.filter, 5, this.objNamespace, params.startkey, params.endkey, m[1], cursor]);\r\n                } catch (e) {\r\n                    this.log.warn(`${this.namespace} Cannot get view: ${e}`);\r\n                }\r\n                objs = objs || [];\r\n                // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                if (Array.isArray(objs[0])) {\r\n                    cursor = objs[1] || '0';\r\n                    objs = objs[0];\r\n                } else {\r\n                    cursor = '0';\r\n                    filterRequired = false;\r\n                }\r\n\r\n                const currRows = objs.map(obj => {\r\n                    try {\r\n                        obj = JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                        return {id: 'parseError', value: null};\r\n                    }\r\n                    if (m[2] && m[2].trim() === 'doc._id') {\r\n                        return {id: obj._id, value: obj};\r\n                    } else if (m[2] && m[2].trim() === 'doc.common.name' && obj.common) {\r\n                        return {id: obj.common.name, value: obj};\r\n                    } else {\r\n                        this.log.error(`${this.namespace} Cannot filter \"${m[2]}\": ${JSON.stringify(obj)}`);\r\n                        return {id: 'parseError', value: null};\r\n                    }\r\n                });\r\n                if (currRows.length) {\r\n                    result.rows = [...result.rows, ...currRows];\r\n                } // endIf\r\n            } while (cursor !== '0');\r\n\r\n            // Now we have all objects -> calculate max if desired\r\n            if (func.reduce === '_stats') {\r\n                let max = null;\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    if (max === null || result.rows[i].value > max) {\r\n                        max = result.rows[i].value;\r\n                    }\r\n                }\r\n                if (max !== null) {\r\n                    result.rows = [{id: '_stats', value: {max: max}}];\r\n                } else {\r\n                    result.rows = [];\r\n                }\r\n            }\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        } else\r\n        // filter by script\r\n        if (wildCardLastPos && func && func.map && this.scripts.script && func.map.indexOf('doc.common.engineType') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                let objs;\r\n                try {\r\n                    objs = await this.client.evalsha([this.scripts.script, 4, this.objNamespace, params.startkey, params.endkey, cursor]);\r\n                } catch (e) {\r\n                    this.log.warn(`${this.namespace} Cannot get view: ${e}`);\r\n                }\r\n                // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                if (Array.isArray(objs[0])) {\r\n                    cursor = objs[1] || '0';\r\n                    objs = objs[0];\r\n                } else {\r\n                    cursor = '0';\r\n                    filterRequired = false;\r\n                }\r\n\r\n                const currRows = objs.map(obj => {\r\n                    try {\r\n                        obj = JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                        return {id: 'parseError', value: null};\r\n                    }\r\n                    return {id: obj._id, value: obj};\r\n                });\r\n                if (currRows.length) {\r\n                    result.rows = [...result.rows, ...currRows];\r\n                } // endIf\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        } else\r\n        // filter by hm-rega programs\r\n        if (wildCardLastPos && func && func.map && this.scripts.programs && func.map.indexOf('doc.native.TypeName === \\'PROGRAM\\'') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n\r\n                let objs;\r\n                try {\r\n                    objs = await this.client.evalsha([this.scripts.programs, 4, this.objNamespace, params.startkey, params.endkey, cursor]);\r\n                } catch (e) {\r\n                    this.log.warn(`${this.namespace} Cannot get view: ${e}`);\r\n                }\r\n                // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                if (Array.isArray(objs[0])) {\r\n                    cursor = objs[1] || '0';\r\n                    objs = objs[0];\r\n                } else {\r\n                    cursor = '0';\r\n                    filterRequired = false;\r\n                }\r\n\r\n                const currRows = objs.map(obj => {\r\n                    try {\r\n                        obj = JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                        return {id: 'parseError', value: null};\r\n                    }\r\n                    return {id: obj._id, value: obj};\r\n                });\r\n                if (currRows.length) {\r\n                    result.rows = [...result.rows, ...currRows];\r\n                } // endIf\r\n            } while(cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        } else\r\n        // filter by hm-rega variables\r\n        if (wildCardLastPos && func && func.map && this.scripts.variables && func.map.indexOf('doc.native.TypeName === \\'ALARMDP\\'') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n\r\n                let objs;\r\n                try {\r\n                    objs = await this.client.evalsha([this.scripts.variables, 4, this.objNamespace, params.startkey, params.endkey, cursor]);\r\n                } catch (e) {\r\n                    this.log.warn(`${this.namespace} Cannot get view ${e}`);\r\n                }\r\n                // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                if (Array.isArray(objs[0])) {\r\n                    cursor = objs[1] || '0';\r\n                    objs = objs[0];\r\n                } else {\r\n                    cursor = '0';\r\n                    filterRequired = false;\r\n                }\r\n\r\n                const currRows = objs.map(obj => {\r\n                    try {\r\n                        obj = JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                        return {id: 'parseError', value: null};\r\n                    }\r\n                    return {id: obj._id, value: obj};\r\n                });\r\n                if (currRows.length) {\r\n                    result.rows = [...result.rows, ...currRows];\r\n                } // endIf\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by custom, redis also returns if common.custom is not present\r\n        if (wildCardLastPos && func && func.map && this.scripts.custom && func.map.indexOf('doc.common.custom') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                let objs;\r\n                try {\r\n                    objs = await this.client.evalsha([this.scripts.custom, 4, this.objNamespace, params.startkey, params.endkey, cursor]);\r\n                } catch (e) {\r\n                    this.log.warn(`${this.namespace} Cannot get view: ${e}`);\r\n                }\r\n                // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                if (Array.isArray(objs[0])) {\r\n                    cursor = objs[1] || '0';\r\n                    objs = objs[0];\r\n                } else {\r\n                    cursor = '0';\r\n                    filterRequired = false;\r\n                }\r\n\r\n                objs.forEach(obj => {\r\n                    try {\r\n                        obj = JSON.parse(obj);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                    }\r\n                    if (obj.common && obj.common.custom) {\r\n                        result.rows.push({id: obj._id, value: obj.common.custom});\r\n                    }\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        } else {\r\n            this.log.debug(`${this.namespace} No suitable Lua script, fallback to keys!: ${func.map}`);\r\n\r\n            let searchKeys = this.objNamespace + '*';\r\n            if (wildcardPos !== -1) { // Wildcard included\r\n                searchKeys = this.objNamespace + params.endkey.replace(/\\u9999/g, '*');\r\n            }\r\n\r\n            let keys;\r\n            try {\r\n                keys = await this._getKeysViaScan(searchKeys);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            const endAfterWildcard = params.endkey.substr(wildcardPos + 1);\r\n            params.startkey = this.objNamespace + params.startkey;\r\n            params.endkey   = this.objNamespace + params.endkey;\r\n\r\n            keys = keys.sort().filter(key => {\r\n                if (key && !utils.regCheckId.test(key)) {\r\n                    if (params && wildcardPos > 0) {\r\n                        if (params.startkey && key < params.startkey) {\r\n                            return false;\r\n                        }\r\n                        if (params.endkey   && key > params.endkey)   {\r\n                            return false;\r\n                        }\r\n                    } else\r\n                    if (params && wildcardPos === 0) {\r\n                        if (!key.endsWith(endAfterWildcard)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            let objs;\r\n            try {\r\n                objs = await this.client.mget(keys);\r\n            } catch {\r\n                //ignore\r\n            }\r\n            // eslint-disable-next-line no-unused-vars\r\n            const _emit_ = (id, obj) => {\r\n                result.rows.push({id: id, value: obj});\r\n            };\r\n\r\n            const f = eval('(' + func.map.replace(/^function\\(([a-z0-9A-Z_]+)\\)/g, 'function($1, emit)') + ')');\r\n\r\n            objs = objs || [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                try {\r\n                    objs[i] = JSON.parse(objs[i]);\r\n                } catch (e) {\r\n                    this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                    continue;\r\n                }\r\n                if (!utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                    continue;\r\n                }\r\n\r\n                if (objs[i]) {\r\n                    try {\r\n                        f(objs[i], _emit_);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot execute map: ${e.message}`);\r\n                    }\r\n                }\r\n            }\r\n            // Calculate max\r\n            if (func.reduce === '_stats') {\r\n                let max = null;\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    if (max === null || result.rows[i].value > max) {\r\n                        max = result.rows[i].value;\r\n                    }\r\n                }\r\n                if (max !== null) {\r\n                    result.rows = [{id: '_stats', value: {max: max}}];\r\n                } else {\r\n                    result.rows = [];\r\n                }\r\n            }\r\n            return tools.maybeCallbackWithError(callback, null, result);\r\n        }\r\n    }\r\n\r\n    _applyView(func, params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this._applyView(func, params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && callback(err);\r\n                } else {\r\n                    return this._applyViewFunc(func, params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async _getObjectView(design, search, params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        let obj;\r\n        try {\r\n            obj = await this.client.get(this.objNamespace + '_design/' + design);\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot find view \"${design}\" for search \"${search}\" : ${e}`);\r\n            return tools.maybeCallbackWithError(callback, new Error(`Cannot find view \"${design}\"`));\r\n        }\r\n\r\n        if (obj) {\r\n            try {\r\n                obj = JSON.parse(obj);\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                return tools.maybeCallbackWithError(callback, new Error(`Cannot parse JSON: \"_design/${design}\" / \"${obj}\"`));\r\n            }\r\n\r\n            if (obj.views && obj.views[search]) {\r\n                return this._applyViewFunc(obj.views[search], params, options, callback);\r\n            } else {\r\n                this.log.error(`${this.namespace} Cannot find search \"${search}\" in \"${design}\"`);\r\n                return tools.maybeCallbackWithError(callback, new Error(`Cannot find search \"${search}\" in \"${design}\"`));\r\n            }\r\n        } else {\r\n            this.log.error(`${this.namespace} Cannot find view \"${design}\" for search \"${search}\"`);\r\n            return tools.maybeCallbackWithError(callback, new Error(`Cannot find view \"${design}\"`));\r\n        }\r\n    }\r\n\r\n    getObjectView(design, search, params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectView(design, search, params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectView(design, search, params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectViewAsync(design, search, params, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectView(design, search, params, options, (err, arr) =>\r\n                err ? reject(err) : resolve(arr)));\r\n    }\r\n\r\n    async _getObjectList(params, options, callback) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        //params = {startkey, endkey, include_docs}\r\n        params = params || {};\r\n        params.startkey = params.startkey || '';\r\n        params.endkey = params.endkey || '\\u9999';\r\n        const pattern = (params.endkey.substring(0, params.startkey.length) === params.startkey) ? this.objNamespace + params.startkey + '*' : this.objNamespace + '*';\r\n\r\n        // todo: use lua script for this\r\n        let keys;\r\n        try {\r\n            keys = await this._getKeysViaScan(pattern);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n\r\n        const _keys = [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const id = keys[i].substring(this.objNamespaceL);\r\n            if (params.startkey && id < params.startkey) {\r\n                continue;\r\n            }\r\n            if (params.endkey && id > params.endkey) {\r\n                continue;\r\n            }\r\n            if (!id || utils.regCheckId.test(id) || id.match(/\\|file\\$%\\$/)) {\r\n                continue;\r\n            }\r\n            if (!params.include_docs && id[0] === '_') {\r\n                continue;\r\n            }\r\n            _keys.push(keys[i]);\r\n        }\r\n        _keys.sort();\r\n        let objs;\r\n        try {\r\n            objs = await this.client.mget(_keys);\r\n        } catch {\r\n            // ignore\r\n        }\r\n        // return rows with id and doc\r\n        const result = {\r\n            rows: []\r\n        };\r\n        if (objs) {\r\n            for (let r = 0; r < objs.length; r++) {\r\n                try {\r\n                    objs[r] = JSON.parse(objs[r]);\r\n                } catch (e) {\r\n                    this.log.error(`${this.namespace} Cannot parse JSON ${_keys[r]}: ${objs[r]}`);\r\n                    continue;\r\n                }\r\n\r\n                if (!objs[r] || !utils.checkObject(objs[r], options, utils.CONSTS.ACCESS_READ)) {\r\n                    continue;\r\n                }\r\n                result.rows.push({id: objs[r]._id, value: objs[r], doc: objs[r]});\r\n            }\r\n        }\r\n        return tools.maybeCallbackWithError(callback, null, result);\r\n    }\r\n\r\n    getObjectList(params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectList(params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectList(params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectListAsync(params, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectList(params, options, (err, arr) =>\r\n                err ? reject(err) : resolve(arr)));\r\n    }\r\n\r\n    // could be optimised, to read object only once. Now it will read 3 times\r\n    async _extendObject(id, obj, options, callback, _iteration) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate (() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        let oldObj;\r\n        try {\r\n            oldObj = await this.client.get(this.objNamespace + id);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n\r\n        try {\r\n            oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${oldObj}`);\r\n            oldObj = null;\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n        }\r\n        if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n        }\r\n\r\n        let _oldObj;\r\n        if (oldObj && oldObj.nonEdit) {\r\n            // copy object\r\n            _oldObj = deepClone(oldObj);\r\n        }\r\n\r\n        oldObj = oldObj || {};\r\n        oldObj = extend(true, oldObj, deepClone(obj)); // copy here to prevent \"sandboxed\" objects from JavaScript adapter\r\n        oldObj._id = id;\r\n\r\n        // add user default rights\r\n        if (this.defaultNewAcl && !oldObj.acl) {\r\n            oldObj.acl = deepClone(this.defaultNewAcl);\r\n            delete oldObj.acl.file;\r\n            if (oldObj.type !== 'state') {\r\n                delete oldObj.acl.state;\r\n            }\r\n\r\n            if (options.owner) {\r\n                oldObj.acl.owner = options.owner;\r\n\r\n                if (!options.ownerGroup) {\r\n                    oldObj.acl.ownerGroup = null;\r\n                    return this.getUserGroup(options.owner, (user, groups /*, permissions */) => {\r\n                        if (!groups || !groups[0]) {\r\n                            options.ownerGroup = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n                        } else {\r\n                            options.ownerGroup = groups[0];\r\n                        }\r\n                        this._extendObject(id, obj, options, callback);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.defaultNewAcl && options.ownerGroup && oldObj.acl && !oldObj.acl.ownerGroup) {\r\n            oldObj.acl.ownerGroup = options.ownerGroup;\r\n        }\r\n\r\n        if (obj.common && obj.common.alias && obj.common.alias.id) {\r\n            if (typeof obj.common.alias.id === 'object') {\r\n                if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\r\n                    return typeof callback === 'function' && callback('Invalid alias ID');\r\n                }\r\n\r\n                if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\r\n                    return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                }\r\n            } else {\r\n                if (typeof obj.common.alias.id !== 'string') {\r\n                    return typeof callback === 'function' && callback('Invalid alias ID');\r\n                }\r\n\r\n                if (obj.common.alias.id.startsWith('alias.')) {\r\n                    return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (_oldObj && !tools.checkNonEditable(_oldObj, oldObj)) {\r\n            return typeof callback === 'function' && callback('Invalid password for update of vendor information');\r\n        }\r\n        const message = JSON.stringify(oldObj);\r\n\r\n        try {\r\n            await this.client.set(this.objNamespace + id, message);\r\n\r\n            // extended -> if its now type meta and currently marked as not -> cache\r\n            if (this.existingMetaObjects[id] === false && oldObj && oldObj.type === 'meta') {\r\n                this.existingMetaObjects[id] = true;\r\n            }\r\n            //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n            await this.client.publish(this.objNamespace + id, message);\r\n            return tools.maybeCallbackWithError(callback, null, {id: id, value: oldObj}, id);\r\n        } catch (e) {\r\n            return tools.maybeCallbackWithError(callback, e);\r\n        }\r\n    }\r\n\r\n    extendObject(id, obj, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.extendObject(id, obj, options, (err, res) =>\r\n                    err ? reject(err) : resolve(res)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._extendObject(id, obj, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    extendObjectAsync(id, obj, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.extendObject(id, obj, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    setConfig(id, obj, options, callback) {\r\n        return this.setObject(id, obj, options, callback);\r\n    }\r\n\r\n    delConfig(id, options, callback) {\r\n        return this.delObject(id, options, callback);\r\n    }\r\n\r\n    getConfig(id, options, callback) {\r\n        return this.getObject(id, options, callback);\r\n    }\r\n\r\n    getConfigs(keys, options, callback, dontModify) {\r\n        return this.getObjects(keys, options, callback, dontModify);\r\n    }\r\n\r\n    _findObject(idOrName, type, options, callback) {\r\n        this._getObject(idOrName, options, (err, obj) => {\r\n            // Assume it is ID\r\n            if (obj && utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ) && (!type || (obj.common && obj.common.type === type))) {\r\n                return tools.maybeCallbackWithError(callback, null, idOrName, obj.common.name);\r\n            } else {\r\n                this._getKeys('*', options, async (err, keys) => {\r\n                    let objs;\r\n                    try {\r\n                        objs = await this.client.mget(keys);\r\n                    } catch (e) {\r\n                        return tools.maybeCallbackWithError(callback, e);\r\n                    }\r\n                    objs = objs || [];\r\n                    // Assume it is name\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        try {\r\n                            objs[i] = JSON.parse(objs[i]);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                            continue;\r\n                        }\r\n                        if (objs[i].common &&\r\n                                objs[i].common.name === idOrName &&\r\n                                (!type || (objs[i].common && objs[i].common.type === type))) {\r\n                            return tools.maybeCallbackWithError(callback, null, objs[i]._id, idOrName);\r\n                        }\r\n                    }\r\n                    return tools.maybeCallbackWithError(callback, null, null, idOrName);\r\n                }, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    findObject(idOrName, type, options, callback) {\r\n        if (typeof type === 'function') {\r\n            callback = type;\r\n            options = null;\r\n            type = null;\r\n        }\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.findObject(idOrName, type, options, (err, id, _idOrName) =>\r\n                    err ? reject(err) : resolve(id)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_LIST, (err, options) => {\r\n                if (err) {\r\n                    return tools.maybeCallbackWithError(callback, err);\r\n                } else {\r\n                    return this._findObject(idOrName, type, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    findObjectAsync(idOrName, type, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.findObject(idOrName, type, options, (err, id, _idOrName) =>\r\n                err ? reject(err) : resolve(id)));\r\n    }\r\n\r\n    // can be called only from js-controller\r\n    addPreserveSettings(settings) {\r\n        if (!Array.isArray(settings)) {\r\n            settings = [settings];\r\n        }\r\n\r\n        for (let s = 0; s < settings.length; s++) {\r\n            if (this.preserveSettings.indexOf(settings[s]) === -1) {\r\n                this.preserveSettings.push(settings[s]);\r\n            }\r\n        }\r\n    }\r\n\r\n    async _destroyDBHelper(keys, callback) {\r\n        if (!keys || !keys.length) {\r\n            return tools.maybeCallback(callback);\r\n        } else {\r\n            if (!this.client) {\r\n                return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            for (const id of keys) {\r\n                try {\r\n                    await this.client.del(id);\r\n                } catch {\r\n                    // ignore\r\n                }\r\n            }\r\n\r\n            return tools.maybeCallback(callback);\r\n        }\r\n    }\r\n\r\n    async _destroyDB(options, callback) {\r\n        if (!this.client) {\r\n            return tools.maybeCallbackWithError(callback, utils.ERRORS.ERROR_DB_CLOSED);\r\n        } else {\r\n            try {\r\n                const keys = await this._getKeysViaScan(`${this.redisNamespace}*`);\r\n                return this._destroyDBHelper(keys, callback);\r\n            } catch (e) {\r\n                return tools.maybeCallbackWithError(callback, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    destroyDB(options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                if (!options.acl.file.write || options.user !== utils.CONSTS.SYSTEM_ADMIN_USER) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._destroyDB(options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    destroyDBAsync(options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.destroyDB(options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    // Destructor of the class. Called by shutting down.\r\n    async destroy() {\r\n        this.stop = true;\r\n        if (this.client) {\r\n            try {\r\n                await this.client.quit();\r\n                this.client = null;\r\n            } catch {\r\n                // ignore error\r\n            }\r\n\r\n        }\r\n        if (this.sub) {\r\n            try {\r\n                await this.sub.quit();\r\n                this.sub = null;\r\n            } catch {\r\n                // ignore error\r\n            }\r\n        }\r\n        if (this.subSystem) {\r\n            try {\r\n                await this.subSystem.quit();\r\n                this.subSystem = null;\r\n            } catch {\r\n                // ignore error\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadLuaScripts(callback, _scripts) {\r\n        if (!_scripts) {\r\n            if (scriptFiles && scriptFiles.filter) {\r\n                _scripts = [];\r\n                for (const name in scriptFiles) {\r\n                    if (!Object.prototype.hasOwnProperty.call(scriptFiles, name)) {\r\n                        continue;\r\n                    }\r\n                    const shasum = crypto.createHash('sha1');\r\n                    const buf = Buffer.from(scriptFiles[name]);\r\n                    shasum.update(buf);\r\n                    _scripts.push({\r\n                        name,\r\n                        text: buf,\r\n                        hash: shasum.digest('hex')\r\n                    });\r\n                }\r\n            } else {\r\n                _scripts = fs.readdirSync(__dirname + '/lua/').map(name => {\r\n                    const shasum = crypto.createHash('sha1');\r\n                    const script = fs.readFileSync(__dirname + '/lua/' + name);\r\n                    shasum.update(script);\r\n                    const hash = shasum.digest('hex');\r\n                    return {name: name.replace(/\\.lua$/, ''), text: script, hash};\r\n                });\r\n            }\r\n            const hashes = _scripts.map(e => e.hash);\r\n            hashes.unshift('EXISTS');\r\n\r\n            if (!this.client) {\r\n                return;\r\n            }\r\n\r\n            let arr;\r\n            try {\r\n                arr = await this.client.script(hashes);\r\n            } catch {\r\n                // ignore\r\n            }\r\n\r\n            arr && _scripts.forEach((e, i) => _scripts[i].loaded = !!arr[i]);\r\n            return this.loadLuaScripts(callback, _scripts);\r\n        }\r\n\r\n        if (!this.client) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < _scripts.length; i++) {\r\n            if (!_scripts[i].loaded) {\r\n                const script = _scripts[i];\r\n                let hash;\r\n                try {\r\n                    hash = await this.client.script(['LOAD', script.text]);\r\n                    script.loaded = true;\r\n                } catch (e) {\r\n                    script.loaded = false;\r\n                    this.log.error(this.namespace + ' Cannot load \"' + script.name + '\": ' + e);\r\n                }\r\n                script.hash = hash;\r\n                return setImmediate(() => this.loadLuaScripts(callback, _scripts));\r\n            }\r\n        }\r\n        this.scripts = {};\r\n        _scripts.forEach(e => this.scripts[e.name] = e.hash);\r\n        typeof callback === 'function' && callback();\r\n    }\r\n\r\n    /**\r\n     * Get all keys matching a pattern using redis SCAN command, duplicates are filtered out\r\n     *\r\n     * @param {string} pattern - pattern to match, e. g. io.hm-rpc.0*\r\n     * @param {number} count - count argument used by redis SCAN, default is 500\r\n     * @return {Promise<string[]>}\r\n     * @private\r\n     */\r\n    _getKeysViaScan(pattern, count= 500) {\r\n        return new Promise(resolve => {\r\n            const stream = this.client.scanStream({match: pattern, count: count});\r\n            let uniqueKeys = [];\r\n\r\n            stream.on('data', resultKeys => {\r\n                // append result keys to uniqueKeys without duplicates\r\n                uniqueKeys = [...uniqueKeys, ...resultKeys];\r\n            });\r\n\r\n            stream.on('end', () => {\r\n                // return without duplicates\r\n                resolve(Array.from(new Set(uniqueKeys)));\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = ObjectsInRedis;"],"file":"../../dist/index.js"}