{"version":3,"sources":["index.js"],"names":["_0x8e0f83","require","_0x2114d1","_0xba948e","_0x42ea6c","_0x542892","isDeepStrictEqual","_0x51c1c0","_0x33d3b8","_0x30c8e8","__dirname","_0x2f79e1","_0xcde4cd","_0x397a9c","_0x464738","_0x4ab129","_0x2ea0b1","_0x12a22d","_0x4d7146","Object","_0x1bea32","Array","undefined","JSON","console","_0x19e9f9","_0x1a53b8","_0x1a2eea","_0x3286b1","_0x512059","_0x567676","_0x5a5cf9","_0x546c9c","_0x4833d7","_0x557599","_0x2fc932","_0x14671a","_0x489e7b","constructor","_0x4e3188","_0x521e63","_0x335818","RegExp","_0x1a339e","_0x177ad1","_0x1bb20c","_0x4ad9a3","_0x322f6f","_0xd2747e","_0x35f3af","_0xc22fa2","Error","_0x51b5b4","_0x4d3e85","_0x3c2f71","_0x5b21f0","_0x5c0c48","_0x2864eb","_0x22b4bd","_0x3d193c","_0x40638c","_0xf8295","_0x3a939b","setImmediate","_0x32f1a5","_0x21fed0","_0x3cb243","_0xef7e19","_0x2a6e79","_0x222c1f","_0x3c210a","_0x4d054d","_0x27578d","_0x218e63","_0x1788a7","_0x318123","_0x721305","_0x6d1a9b","_0x2b18d0","_0x12ba2d","_0xb764f3","_0x475920","_0x273f7","_0x303062","_0x68164f","_0x32e742","Promise","_0x20e846","_0x427e67","_0x29afd8","_0x4b6495","Buffer","_0xaa1177","_0x46e5c8","_0x17fb88","_0x3aca30","_0x3e9e36","_0xaf0698","_0x439fbb","_0x1bc46a","_0x23423e","_0xdbb35a","_0x23e25d","_0x2fb183","_0x153891","_0x37dcbf","_0x588d11","_0x541ea1","_0x59d6e9","_0x42cdc0","_0x3e1b0d","_0x3da5b9","_0x17a42d","_0xd01906","_0x4cf90d","_0x2d14d8","_0x115668","_0x11ab97","_0x307440","_0x3017bb","_0x30e5ee","_0x2a9fd1","_0x3c3756","_0x38a704","_0x409321","_0x2f3c68","_0x18857a","_0x14dd76","_0x4aacf4","_0x55da8f","_0x344a7d","_0x4a0013","_0x4e38b0","_0x111782","_0x3e928a","_0x1294f8","_0x420d8d","_0x139f3f","_0x3dabf2","_0x1384bf","_0x4a1beb","_0x485e62","_0x4eb525","_0x61aff6","_0x2e2b6a","_0x2d13d2","_0x322993","_0x380b9b","_0x70f626","Date","_0x119d76","_0x520582","_0xb2c23b","_0x166bd7","_0x15d5c9","_0x8581ca","_0xc81d7d","_0x12a3c4","_0x18db5d","_0x2df2e7","_0x21c028","_0x50331c","_0x4bc265","_0x6a4b1f","_0x58a48a","_0x12080c","_0xd62b9d","_0x4832b8","_0x12a1a6","_0x55bba1","_0x133625","_0x223dde","_0x4df62b","_0x50ad03","_0x2bf8a4","_0x3da3b7","_0x24238c","_0x520a88","_0x1f5cca","_0x4ef455","_0x28c69a","_0x6bc2e5","_0x1e51a7","_0x42db8a","_0x1b119d","_0x12b8c8","_0x75d793","_0x47adf2","_0x3dd2d4","_0x1c1020","_0x5bcc0b","_0x51ec01","_0x2f2dbd","_0x616237","_0x25dcd9","_0x57390f","_0x419e06","_0x39a96a","_0x47903d","_0x1d7344","_0x293e3a","_0x50d18f","_0x7022c6","_0x214d0d","_0x39ab80","_0x575a3a","_0x361b2b","_0x462470","_0x115cdd","_0x2031ff","_0x53493d","_0x450cf6","_0x451f9c","_0x588f19","_0x4572a7","_0x32fc94","_0xba9327","_0x3ea247","_0xb7b4ae","_0x550738","_0x484168","_0xcd1285","_0x44f0f5","_0x4ae745","_0x2c584f","_0x28970b","_0x3af318","_0x396f96","_0x42cd34","_0xe330fc","_0x16504f","_0x539952","_0x1cd8f4","_0x569a0d","_0x496869","_0x50e1ab","_0x1e81bb","_0x1766e2","_0x38ca9e","_0x1f7b74","_0x2de85a","_0xb39851","_0x1c0dfa","_0x4cb81e","_0x517d59","_0x1f6956","_0x41be17","_0x4ef3a0","_0x3a3d10","_0x401703","_0x1573f4","_0xfe2c25","_0x1ede20","_0xa7290b","_0x538379","_0x58641f","_0x578861","_0x35bb98","_0x28cc4a","_0x24dedb","_0xa45dd","_0x2ee352","_0x5acaf2","_0x3aaaf2","_0x597a8f","_0x5e1221","_0x32cead","_0x40a6d6","_0x80462a","_0x36fdda","_0x3eb449","_0x450374","_0x59bb72","_0x21acf4","_0x4aa47c","_0x2973ae","_0x17f004","_0x1993f0","_0x363553","_0x52273d","_0x20df27","_0x30c58d","_0x58883c","_0x5a2f45","_0x4ccba8","_0x10299c","_0x100987","_0x16cfbf","_0x3ff3a3","_0x493b04","_0x5f466d","_0x270923","_0x332d31","_0x261cfb","_0xe00f34","_0x455850","_0x50fb53","_0x3329e2","_0x5649de","_0x1f9784","_0x537e31","_0x231551","_0x52cd17","_0x22ccc1","_0x3c2d8d","_0x19d972","_0x3dedc3","_0x5fb93b","_0x2f87f8","_0x107438","_0x2f7c20","_0x2240ac","_0x2407b7","_0x8dac30","_0x46f5ff","_0x530a12","_0x185ae0","_0x58e341","_0x13f9e4","_0x156634","_0x419c34","_0x44b1a2","_0x25e224","_0x81e2f3","_0x3a5f54","_0x63d492","_0x490648","_0x21b061","_0x42af79","_0x290a7f","_0x2b4d78","_0x57a65a","_0x4375ba","_0x5e0504","_0x1d6460","_0x3ce570","_0x901408","_0x564b8a","_0x594c32","_0x193ceb","_0x4c320f","_0x351d69","_0x444ce6","_0x1cc2b5","_0x452efd","_0x34cf98","_0xa89b8c","_0x1c1131","_0x1cf2da","_0x4f287d","_0x6a1779","_0x3573cc","_0x4593ba","_0x2b1cd7","_0x147e01","_0x1052b7","_0x158f03","_0x58378c","_0x5d4d53","_0x40ccbc","_0x5d654e","_0xc2cdb6","_0x15fa03","_0x92cc8","_0x2de0de","_0x141650","_0x5ded5b","_0x25fd4c","_0x37659b","_0x24f8f0","_0x354001","_0x3a5ee","_0x3030f1","_0x261c67","_0x428653","_0x5bc1e6","_0x4b7a2c","_0x512e12","_0x544453","_0x54f5cf","_0x4856d4","_0x4361cc","_0x4c49b8","_0x1962d0","_0x5a5b21","_0x481f0e","_0x495412","_0x29cdca","_0x41ea2b","_0x5619e9","_0x3ffb8d","_0xbea61e","_0x2a1ad2","_0x2f31b4","_0x58da2b","_0x39840a","_0x3ef4ba","_0x4aab61","_0x1f45e6","_0x3c422e","_0x37572a","_0xed072e","_0x4ac552","_0x14c84e","_0x1f7a6c","_0x44c641","_0x236a64","_0x2918c2","_0x24085f","_0x30a442","_0x4ecb3d","_0x437768","_0x4066c8","_0x519def","_0xcffcd8","_0x46a08b","_0x34a553","_0x312604","_0x438a27","_0x2a44ff","_0x2dc7da","_0x16e70a","_0x34d829","_0xaac075","_0x2b3dc5","_0x1678f6","_0xb99180","_0x45c184","_0x4ec4a9","_0xbe0a28","_0x389bf5","_0x68bad4","_0x21b52b","_0x36adbd","_0x53310b","_0x4abe79","_0x1826f4","_0x4df6b3","_0x580c91","_0x4f9c93","_0x11f6cb","_0x5ca750","_0x278683","_0x345078","_0x65eac2","_0x3e20be","_0x12101e","_0x497b11","_0x48346a","_0x39c583","_0x477727","_0x157680","_0x5bf483","_0x34d2f2","_0x229c3d","_0x247ce8","_0x3113fa","_0x25aef9","_0x15b07b","_0x458597","_0x810e60","_0x1484b6","_0x281342","_0x4f8160","_0x47973d","_0x3a1bae","_0x15564f","_0x1fdfbb","_0x34e768","_0x34afe5","_0x217cc2","_0x591881","_0x26232c","_0x5eaa4f","_0x129144","_0x191be1","_0x373401","_0x1b8121","_0x42e35e","_0x5104e5","_0x326e9a","_0x47f490","_0x1eae74","_0x54dc4a","_0x5cc475","_0x2fa9e4","parseInt","_0x17e593","_0x2435d9","_0xaf3533","_0x3ebdf6","_0x5416ee","_0x72d7dc","_0x227360","_0x286063","_0x3b6ad9","_0x39f34e","_0x53ddd8","_0xe3b28e","_0x2b5849","_0x5d917f","_0x23a81f","_0x26eb3c","_0x571991","_0x580e21","_0x11d260","_0x5381c9","_0x3469a9","_0x4f7c71","_0x52188c","_0x1bdbd7","_0x33521d","_0x5b5928","_0x3a7a86","_0xd31fb5","_0x1e62c0","_0x478cf8","_0x27e403","_0x2f2d91","_0x5733a5","_0xcc967b","_0x242794","_0x14b8a1","_0x2b5c46","_0x63d981","_0x33db91","_0x134467","_0x4b84d3","_0x3c2a62","_0x59fed9","_0x511705","_0x343f89","_0x5df46c","_0xd3c834","_0x4a94a3","_0x101658","_0x3da17f","_0x533986","_0xcefc3b","_0x5e1f30","_0xe8199a","_0x168a74","_0x48b716","_0x43b036","_0x474d41","_0x11c06b","_0x445826","_0x2df9c9","_0x3247f7","_0x1bb345","_0xfdfd48","_0x1133b1","_0x5c0a8a","_0x207372","_0x151223","_0x1445e7","_0x45e14b","_0x74840c","_0x4d12a8","_0x37cb56","_0x4d3393","_0x28708b","_0x132a4d","_0x348669","_0x193a44","_0x4e1964","_0x441956","_0x8ee98c","_0x1bec5d","_0x1cfd21","_0x58ec30","_0x3949a2","_0x51340b","_0x5d9094","_0x12cc37","_0x44f3d8","_0x244560","_0x1d6ba1","_0x56fb20","_0x180145","_0x9cedc8","_0x2c9736","_0x1c6e6b","_0x1300c2","_0x1d7016","_0x51dc14","_0x2d38b4","_0x5b9795","_0x4b8d41","_0x251dc0","_0x26dbea","_0x12475e","_0xdc6b5d","_0x325596","_0x5972dc","_0x124c9f","_0x4f6e78","_0x465784","_0x55de17","_0x1f94f9","_0x7e9331","_0x32160a","_0x5ecbd4","_0x3ba6cd","_0xcddd3e","_0x54ed03","_0x3f71e7","_0x15ba57","_0x5c6664","_0x70f998","_0xec6bb2","_0x2b1658","_0x3adceb","_0x4e50fc","_0x41904e","_0x11ebc7","_0x35544f","_0x1730cb","_0x3c3c5a","_0x176062","_0x3bb3e6","_0x5d23dc","_0x2c9de2","_0x491e93","_0x546d64","_0x1c4adf","_0x452ca2","_0x1f46a0","_0x4c9b38","_0x12360b","_0x2b4d45","_0x2dae67","_0x1214e7","_0x3b3b24","_0x20372a","_0x32c055","_0x1cccf8","_0xa28e28","_0x125695","_0x110d3e","_0x535392","_0x1d2c7b","_0x162743","_0x3b1904","_0x42eaf0","_0x1f3a2f","_0x37eb7b","_0x438ca7","_0x458d04","_0x3b7de8","_0x40ad42","_0x10d8a5","_0x98e6fc","_0x13e17c","_0x14990e","_0x3c37dd","_0x4a664a","_0x5b0dab","_0x176abf","_0x251870","_0x47ee81","_0x2577d8","_0x114374","_0x390c02","_0x50a447","_0x2642c1","_0x2f7db8","_0x524746","_0x2b9431","_0x18db33","_0x1af204","_0x38a2e6","_0x12e8a8","_0x375788","_0x1fe39c","_0x51c8c2","_0x25bae2","_0x21fc73","_0x28acf8","_0x17098f","_0x4ad9ee","_0x3e8bec","_0x1cb85a","_0x4298c0","_0x5992d4","_0x18cf0e","_0x417133","_0x4eda7d","_0x48e8f1","_0x5d0466","_0xd425fa","_0x554197","_0x253893","_0x911dc3","_0x579f3c","_0x50b99f","_0xdeb789","_0x3fc3ab","_0x3889a4","_0x30c3d8","_0x2a65e5","_0x1b6e13","_0x57a935","_0x190b86","_0x506d0d","_0x1af10a","_0x2143b3","_0x1713fe","_0x328e0f","_0x5cad29","_0xb34854","_0x5d1d9c","_0x20bca3","_0x1f708","_0x58a0c4","_0x46c1c5","_0x5dfa1e","_0xd5ede8","_0x2678af","_0x2cf429","_0x5002bd","_0x87dc94","_0x28877a","_0x3e42f1","_0x5ceedf","_0x144cfc","_0x52012b","_0xf70441","_0x171350","_0x51095a","_0xfa9e3c","_0x5c519d","_0x1aac4a","_0x2b8ea0","_0x2c8b27","_0x12fdd4","_0x128e43","_0xa03dbe","_0x2f1257","_0x45cf04","_0x310d79","_0xacb64e","_0xc1ac07","_0x514073","_0x571015","_0x4db8c6","_0x40686f","_0x267be4","_0x1c7a52","_0x158520","_0x3a151a","_0x5ae528","_0x1a802f","_0x1c1868","_0x2640b8","_0x1fa319","_0x3f9f36","_0x15c549","_0x5e4082","_0x17abbf","_0x38250c","_0x1112be","_0x3f0257","_0x33500e","_0x20b92e","_0x33e5e9","_0x3afda2","_0x2d952a","_0x5b2607","_0x5f3f0f","_0x3ea518","_0x3a6a01","_0x3d5775","_0x282b65","_0x168f8a","_0x437078","_0x97aa44","_0x234442","_0x269ae2","_0x228785","_0x2d1554","_0x4bfe88","_0x35fb79","_0x9f0fd6","_0xe2f6ff","_0x555d70","_0x37d9ae","_0x592067","_0x109e96","_0x47fc00","_0x425d29","_0x49677a","_0x91701f","_0x5a24bf","_0x3ccca4","_0x324a31","_0x3359d7","_0x2c6122","_0x4919ff","_0x181282","_0xb345c6","_0x55c2c3","_0x28aa2e","_0x1bfa78","_0x291a3a","_0x213995","_0x5d374e","_0x30c6b1","_0x10da89","_0x5dd513","_0x13e3f2","_0x2ddfb2","_0x26f4d1","_0x5ca4ba","_0x46517e","_0x2fbb15","_0x2a5848","_0x1e4c14","_0x4d2a2c","_0x2b3871","_0x268b7c","_0x251607","_0x3523bb","_0x1daec8","_0x48082a","_0x5adc99","_0x795e06","_0x4a7186","_0x19b693","_0x294df5","_0xf186db","_0x18feb4","_0xf47823","_0x22d36a","_0x574806","_0x3010b2","_0x3a01d3","_0x583f1c","_0x887117","_0x2bb330","_0x37888d","_0x30462f","_0x39d399","_0x58bb82","_0x1f322e","_0x1d8b49","_0x1a58f1","_0x478de0","_0x24607a","_0x1b754d","_0x338efa","_0x58a77f","_0x2dc6dd","eval","_0x1994f1","_0x4e9379","_0x34a954","_0x43d5cb","_0x1ce7ab","_0x23ec1","_0x5da877","_0x33e334","_0x11a55e","_0x2e383f","_0x282bf6","_0x3630d0","_0x1b9c52","_0x33ac9b","_0x23e71b","_0x1a1d58","_0x5d0c97","_0x2dd8d8","_0x4ecbf4","_0x2b25da","_0x299781","_0x10e51b","_0x27cc48","_0xf5d532","_0x48400d","_0x4b1191","_0x47e96e","_0x49769f","_0x56abde","_0x345e6f","_0xbd44b0","_0x593475","_0x187880","_0x36e92f","_0x25ab46","_0x401718","_0x50a1d","_0x52bf46","_0x4542ef","_0x33d6f3","_0x188f8a","_0x45faf6","_0x41c682","_0x126c2e","_0x5de3e1","_0x55ca3f","_0x4c8a72","_0x32b5ab","_0x20fb1a","_0x58989b","_0x28a393","_0x326c76","_0x28253f","_0x53cbbf","_0x21b5d9","_0x36b5ad","_0x4d1029","_0x1d36f8","_0x290a84","_0x5af2d9","_0x5ce593","_0x199d41","_0x2de0af","_0x45dc38","_0x4b89be","_0x11e6de","_0x551711","_0x724a19","_0x1781ec","_0x4c078b","_0x31c4f5","_0x3fa02e","_0x552d6f","_0x365617","_0x55ca49","_0x1f9391","_0x441e75","_0x15db66","_0x1ce77e","_0x3212f2","_0xcf65f4","_0x4339e8","_0x456de6","_0x1deb81","_0x50d634","_0x3245a8","_0x10c590","_0x147672","_0x1f4c9c","_0x5d9a80","_0x361a6c","_0x1ab112","_0x29a666","_0x4a765f","_0x108515","_0x2c0b3f","_0x368ae2","_0x50cfc2","_0x11dec2","_0x5060f1","_0x3dc0fa","_0x5a347d","_0x1ffb19","_0x52279a","_0x3995fe","_0x6f3b09","_0x385b55","_0x2b0d94","_0x3c5658","_0x47172c","_0x1c1cbf","_0x304176","_0x49d738","_0x491683","_0x22287c","_0x1b924d","_0x1e29dc","_0x354716","_0x4b2e9c","_0xc5c04d","_0x1e8050","_0x525a86","_0x5b8230","_0x98fdb6","_0x45dc9a","_0x35fc2e","_0x3d565a","_0x3dfbb8","_0x3d45d7","_0x4f427e","_0x5671ff","_0x547ca1","_0x296467","_0x6b7f0c","_0x36e946","_0x4258d8","_0x30d192","_0x21db2a","_0x315ea6","_0xc1c599","_0x12eb9d","_0x1743c6","_0x2e3fc1","_0x34be25","_0x35bffd","_0x5db480","_0x554fe4","_0x554bed","_0x475d0a","_0xd321ae","_0x34b34a","_0x53d63f","_0x5bb670","_0x22878e","_0x239023","_0x47f982","_0x5ea248","_0x50ff8d","_0x1d02ce","_0x125faf","_0x206b0b","_0x1ad320","_0xc560d9","_0x507912","_0x37d538","_0x302092","_0x233fd1","_0x34a04b","_0x42bfa2","_0x16c77e","_0x30e997","_0x9fe00e","_0xc78ee2","_0x43ff67","_0x28cf3f","_0x31a64d","_0x58446b","_0x1bf33f","_0x28ff8b","_0x55aed2","_0x2849da","_0xa0b00b","_0x3a18ef","_0x409e82","_0x1ef1eb","_0x4f19df","_0x14d2ab","_0x35112a","module"],"mappings":"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","sourcesContent":["/**\n * Object DB in REDIS - Client\n *\n * Copyright (c) 2018-2020 ioBroker GmbH - All rights reserved.\n *\n * You may not to use, modify or distribute this package in any form without explicit agreement from ioBroker GmbH.\n *\n * Unauthorized using, modifying or copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential\n * Written by bluefox <dogafox@gmail.com>, 2014-2019\n *\n */\n/* jshint -W097 */\n/* jshint strict: false */\n/* jslint node: true */\n/* jshint -W061 */\n'use strict';\n\nconst extend                = require('node.extend');\nconst Redis                 = require('ioredis');\n\nconst fs                    = require('fs');\nconst path                  = require('path');\nconst crypto                = require('crypto');\nconst { isDeepStrictEqual } = require('util');\nconst deepClone             = require('deep-clone');\n\nconst utils                 = require(path.join(getControllerDir() || __dirname, 'objectsUtils.js'));\n\n// copied from tools.js\n/**\n * Converts ioB pattern into regex.\n * @param {string} pattern - Regex string to us it in new RegExp(pattern)\n * @returns {string}\n */\nfunction pattern2RegEx(pattern) {\n    pattern = (pattern || '').toString()\n        .replace(/\\$/g, '\\\\$')\n        .replace(/\\^/g, '\\\\^');\n\n    if (pattern !== '*') {\n        if (pattern[0] === '*' && pattern[pattern.length - 1] !== '*') pattern += '$';\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] === '*') pattern = '^' + pattern;\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] !== '*') pattern = '^' + pattern + '$';\n    }\n\n    pattern = pattern\n        .replace(/\\?/g, '\\\\?')\n        .replace(/\\./g, '\\\\.')\n        .replace(/\\(/g, '\\\\(')\n        .replace(/\\)/g, '\\\\)')\n        .replace(/\\[/g, '\\\\[')\n        .replace(/]/g, '\\\\]')\n        .replace(/\\*/g, '.*');\n\n    return pattern;\n}\n\nlet crypto_;\n\n/**\n * recursively copy values from old object to new one\n *\n * @alias copyAttributes\n * @memberof tools\n * @param {object} oldObj source object\n * @param {object} newObj destination object\n * @param {object} [originalObj] optional object for read __no_change__ values\n * @param {boolean} [isNonEdit] optional indicator if copy is in nonEdit part\n *\n */\nfunction copyAttributes(oldObj, newObj, originalObj, isNonEdit) {\n    Object.keys(oldObj).forEach(attr => {\n        if (typeof oldObj[attr] !== 'object' || oldObj[attr] instanceof Array) {\n            if (oldObj[attr] === '__no_change__' && originalObj && !isNonEdit) {\n                if (originalObj[attr] !== undefined) {\n                    newObj[attr] = JSON.parse(JSON.stringify(originalObj[attr]));\n                } else {\n                    console.log(`Attribute ${attr} ignored by copying`);\n                }\n            } else\n            if (oldObj[attr] === '__delete__' && !isNonEdit) {\n                if (newObj[attr] !== undefined) {\n                    delete newObj[attr];\n                }\n            } else {\n                newObj[attr] = oldObj[attr];\n            }\n        } else {\n            newObj[attr] = newObj[attr] || {};\n            copyAttributes(oldObj[attr], newObj[attr], originalObj && originalObj[attr], isNonEdit || attr === 'nonEdit');\n        }\n    });\n}\n\n/**\n * Checks the flag nonEdit and restores non-changeable values if required\n *\n * @alias checkNonEditable\n * @memberof tools\n * @param {object} oldObject source object\n * @param {object} newObject destination object\n *\n */\nfunction checkNonEditable(oldObject, newObject) {\n    if (!oldObject) {\n        return true;\n    } else\n    if (!oldObject.nonEdit && !newObject.nonEdit) {\n        return true;\n    }\n\n    // if nonEdit is protected with password\n    if (oldObject.nonEdit && oldObject.nonEdit.passHash) {\n        // If new Object wants to update the nonEdit information\n        if (newObject.nonEdit && newObject.nonEdit.password) {\n            crypto_ = crypto_ || require('crypto');\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\n            if (oldObject.nonEdit.passHash !== hash) {\n                delete newObject.nonEdit;\n                return false;\n            } else {\n                oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\n                delete oldObject.nonEdit.password;\n                delete newObject.nonEdit.password;\n                oldObject.nonEdit.passHash = hash;\n                newObject.nonEdit.passHash = hash;\n            }\n            copyAttributes(newObject.nonEdit, newObject, newObject);\n\n            if (newObject.passHash) {\n                delete newObject.passHash;\n            }\n            if (newObject.nonEdit && newObject.nonEdit.password) {\n                delete newObject.nonEdit.password;\n            }\n\n            return true;\n        } else {\n            newObject.nonEdit = oldObject.nonEdit;\n        }\n\n    } else if (newObject.nonEdit) {\n        oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\n        if (newObject.nonEdit.password) {\n            crypto_ = crypto_ || require('crypto');\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\n            delete oldObject.nonEdit.password;\n            delete newObject.nonEdit.password;\n            oldObject.nonEdit.passHash = hash;\n            newObject.nonEdit.passHash = hash;\n        }\n    }\n\n    // restore settings\n    copyAttributes(oldObject.nonEdit, newObject, oldObject);\n\n    if (newObject.passHash) {\n        delete newObject.passHash;\n    }\n    if (newObject.nonEdit && newObject.nonEdit.password) {\n        delete newObject.nonEdit.password;\n    }\n    return true;\n}\n\nconst tools       = {\n    checkNonEditable,\n    pattern2RegEx\n};\n\nconst scriptFiles = {};\nscriptFiles.custom = '-- design: custom\\n-- search: state\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc.type===\"state\" && (doc.common.custom || doc.common.history))\\n--          emit(doc._id, doc.common.custom || doc.common.history)\\n--   }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.type == \"state\" and decoded.common ~= nil and decoded.common.custom ~= nil) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.filter = '-- func: function(doc) { if (doc.type === \"%1\") emit(doc._id, doc); }\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[5];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal type=KEYS[4]\\nlocal obj\\nlocal decoded\\n-- function(doc) { if (doc.type === \"chart\") emit(doc._id, doc); }\\nfor _,key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        obj = redis.call(\"get\", key)\\n        if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded and decoded.type == type) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n    end\\nend\\nreturn {rep, cursor}';\nscriptFiles.programs = '-- design: hm-rega\\n-- search: programs\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"PROGRAM\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and decoded.native.TypeName == \"PROGRAM\") then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.script = '-- design: script\\n-- search: javascript\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\n--  function(doc) {\\n--      if (doc.type === \"script\" && doc.common.engineType.match(/^[jJ]ava[sS]cript|^[cC]offee[sS]cript|^[tT]ype[sS]cript|^Blockly/)) emit(doc.common.name, doc); }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t\tif (obj ~= nil and obj ~= \"\" and cjson.decode(obj).type == \"script\") then\\n            rep[#rep+1] = obj\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.variables = '-- design: hm-rega\\n-- search: variables\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"ALARMDP\" || doc.native.TypeName === \"VARDP\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and (decoded.native.TypeName == \"ALARMDP\" or decoded.native.TypeName == \"VARDP\")) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\n\nfunction getControllerDir() {\n    const possibilities = ['iobroker.js-controller', 'ioBroker.js-controller'];\n    let controllerPath = null;\n    for (const pkg of possibilities) {\n        try {\n            const possiblePath = require.resolve(pkg);\n            if (fs.existsSync(possiblePath)) {\n                controllerPath = possiblePath;\n                break;\n            }\n        } catch (_a) {\n            /* not found */\n        }\n    }\n    // Apparently, checking vs null/undefined may miss the odd case of controllerPath being \"\"\n    // Thus we check for falsyness, which includes failing on an empty path\n    if (!controllerPath) {\n        controllerPath = path.join(__dirname, '..', '..', 'lib', 'objects');\n        if (!fs.existsSync(controllerPath)) {\n            controllerPath = null;\n        }\n    } else {\n        controllerPath = path.join(path.dirname(controllerPath), 'lib', 'objects');\n    }\n    return controllerPath;\n}\n\nclass ObjectsInRedis {\n\n    constructor(settings) {\n        const originalSettings = settings;\n        this.settings = settings || {};\n        this.redisNamespace = (this.settings.redisNamespace || (this.settings.connection && this.settings.connection.redisNamespace) || 'cfg') + '.';\n        this.fileNamespace = this.redisNamespace + 'f.';\n        this.fileNamespaceL = this.fileNamespace.length;\n        this.objNamespace = this.redisNamespace + 'o.';\n        this.objNamespaceL = this.objNamespace.length;\n        const ioRegExp = new RegExp('^' + this.objNamespace.replace(/\\./g, '\\\\.') + '[_A-Za-z0-9ÄÖÜäöüа-яА-Я]+'); // cfg.o.[_A-Za-z0-9]+\n\n        const onChange = this.settings.change; // on change handler\n        const onChangeUser = this.settings.changeUser; // on change handler for User events\n\n        this.stop = false;\n        this.client = null;\n        this.sub = null;\n        this.subSystem = null;\n        this.preserveSettings = ['custom', 'smartName', 'material', 'habpanel', 'mobile'];\n        this.defaultNewAcl = this.settings.defaultNewAcl || null;\n        this.namespace = this.settings.namespace || this.settings.hostname || '';\n        this.scripts = {};\n\n        // cached meta objects for file operations\n        this.existingMetaObjects = {};\n\n        this.log = utils.getLogger(this.settings.logger);\n\n        this.settings.connection = this.settings.connection || {};\n\n        // limit max number of log entries in the list\n        this.settings.connection.maxQueue = this.settings.connection.maxQueue || 1000;\n\n        this.settings.connection.options = this.settings.connection.options || {};\n        const retry_max_delay = this.settings.connection.options.retry_max_delay || 2000;\n        const retry_max_count = this.settings.connection.options.retry_max_count || 19;\n\n        this.settings.connection.options.retryStrategy = reconnectCount => {\n            if (!ready && initError && ignoreErrors) {\n                return new Error('No more tries');\n            }\n            if (this.stop) {\n                return new Error('Client has stopped ... no retries anymore');\n            }\n            if (ready && reconnectCount >= retry_max_count) {\n                return new Error('Stop trying to reconnect');\n            }\n            // A function that receives an options object as parameter including the retry attempt,\n            // the total_retry_time indicating how much time passed since the last time connected,\n            // the error why the connection was lost and the number of times_connected in total.\n            // If you return a number from this function, the retry will happen exactly after that\n            // time in milliseconds. If you return a non-number, no further retry will happen and\n            // all offline commands are flushed with errors. Return an error to return that\n            // specific error to all offline commands.\n\n            if (!ready) {\n                return 300;\n            } else {\n                return retry_max_delay;\n            }\n            /*if (options.error.code === 'ECONNREFUSED') {\n                // End reconnecting on a specific error and flush all commands with a individual error\n                return new Error('The server refused the connection');\n            }\n            if (options.total_retry_time > 1000 * 60 * 60) {\n                // End reconnecting after a specific timeout and flush all commands with a individual error\n                return new Error('Retry time exhausted');\n            }\n            if (options.times_connected > 10) {\n                // End reconnecting with built in error\n                return undefined;\n            }\n            // reconnect after\n            return Math.max(options.attempt * 100, 3000);*/\n        };\n\n        delete this.settings.connection.options.retry_max_delay;\n        this.settings.connection.options.enableReadyCheck = true;\n\n        let ready = false;\n        let initError = false;\n        let ignoreErrors = false;\n        let connected = false;\n        let reconnectCounter = 0;\n\n        if (this.settings.connection.port === 0) { // Port = 0 means unix socket\n            // initiate a unix socket connection\n            this.settings.connection.options.path = this.settings.connection.host;\n            this.log.debug(this.namespace + ' Redis Objects: Use File Socket for connection: ' + this.settings.connection.options.path);\n        } else if (Array.isArray(this.settings.connection.host)) { // Host is an array means we use a sentinel\n            const defaultPort = Array.isArray(this.settings.connection.port) ? null : this.settings.connection.port;\n\n            this.settings.connection.options.sentinels = this.settings.connection.host.map((redisNode, idx) => ({\n                host: redisNode,\n                port: defaultPort || this.settings.connection.port[idx]\n            }));\n\n            this.settings.connection.options.name = this.settings.connection.sentinelName ? this.settings.connection.sentinelName : 'mymaster';\n            this.log.debug(this.namespace + ' Redis Objects: Use Sentinel for connection: ' + this.settings.connection.options.name + ', ' + JSON.stringify(this.settings.connection.options.sentinels));\n        } else {\n            this.settings.connection.options.host = this.settings.connection.host;\n            this.settings.connection.options.port = this.settings.connection.port;\n            this.log.debug(this.namespace + ' Redis Objects: Use Redis connection: ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port);\n        }\n        this.settings.connection.options.db = this.settings.connection.options.db || 0;\n        this.settings.connection.options.family = this.settings.connection.options.family || 0;\n        this.settings.connection.options.password = this.settings.connection.options.auth_pass || this.settings.connection.pass || null;\n\n        this.settings.connection.options.autoResubscribe = false; // We do our own resubscribe because other sometimes not work\n\n        this.client = new Redis(this.settings.connection.options);\n\n        this.client.on('error', error => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Redis ERROR Objects: (' + ignoreErrors + '/' + this.stop + ') ' + error.message + ' / ' + error.stack);\n            if (this.stop) {\n                return;\n            }\n            if (!ready) {\n                initError = true;\n                // Seems we have a socket.io server\n                if (!ignoreErrors && error.message.startsWith('Protocol error, got \"H\" as reply type byte.')) {\n                    this.log.error('Socket.io Server detected. Please update to js-controller 2.0 or higher!');\n                }\n                return;\n            }\n            this.log.error(this.settings.namespace + ' ' + error.message);\n        });\n\n        this.client.on('end', () => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end (stop=' + this.stop + ')');\n            ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\n        });\n\n        this.client.on('connect', () => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event connect (stop=' + this.stop + ')');\n            connected = true;\n        });\n\n        this.client.on('close', () => {\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event close (stop=' + this.stop + ')');\n            //if (ready && typeof this.settings.disconnected === 'function') this.settings.disconnected();\n        });\n\n        this.client.on('reconnecting', () => {\n            if (connected && !ready && !initError && !ignoreErrors) {\n                reconnectCounter++;\n            }\n\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')');\n\n            if (reconnectCounter > 2) { // fallback logic for nodejs <10\n                this.log.error('Could not connect database at ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port + ' (invalid protocol). Please make sure the configured IP and port points to a host running JS-Controller >= 2.0.');\n                return;\n            }\n            connected = false;\n            initError = false;\n        });\n\n        this.client.on('ready', () => {\n            if (this.stop) {\n                return;\n            }\n            initError = false;\n            ignoreErrors = false;\n\n            this.log.debug(this.namespace + ' Objects client ready ... initialize now');\n            this.client.config('set', ['lua-time-limit', 10000], err => { // increase LUA timeout TODO needs better fix\n                if (err) {\n                    this.log.warn('Unable to increase LUA script timeout: ' + err);\n                }\n                let initCounter = 0;\n                if (!this.subSystem && typeof onChange === 'function') {\n                    initCounter++;\n                    this.log.debug(this.namespace + ' Objects create System PubSub Client');\n                    this.subSystem = new Redis(this.settings.connection.options);\n                    this.subSystem.ioBrokerSubscriptions = {};\n\n                    if (typeof onChange === 'function') {\n                        this.subSystem.on('pmessage', (pattern, channel, message) =>\n                            setImmediate(() => {\n                                this.log.silly(this.namespace + ' Objects system redis pmessage ' + pattern + '/' + channel + ':' + message);\n                                try {\n                                    if (ioRegExp.test(channel)) {\n                                        const id = channel.substring(this.objNamespaceL);\n                                        try {\n                                            const obj = message ? JSON.parse(message) : null;\n\n                                            if (this.settings.controller &&\n                                                id === 'system.config' &&\n                                                obj &&\n                                                obj.common &&\n                                                obj.common.defaultNewAcl &&\n                                                !isDeepStrictEqual(obj.common.defaultNewAcl, this.defaultNewAcl)) {\n                                                this.defaultNewAcl = JSON.parse(JSON.stringify(obj.common.defaultNewAcl));\n                                                this.setDefaultAcl(this.defaultNewAcl);\n                                            }\n\n                                            onChange(id, obj);\n                                        } catch (e) {\n                                            this.log.warn(`${this.namespace} Objects Cannot process system pmessage ${id} - ${message}: ${e.message}`);\n                                            this.log.warn(`${this.namespace} ${e.stack}`);\n                                        }\n                                    } else {\n                                        this.log.warn(`${this.namespace} Objects Received unexpected system pmessage: ${channel}`);\n                                    }\n                                } catch (e) {\n                                    this.log.warn(this.namespace + ' Objects system pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\n                                    this.log.warn(this.namespace + ' ' + e.stack);\n                                }\n                            }));\n                    }\n\n                    this.subSystem.on('end', () => {\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis System Event end sub (stop=' + this.stop + ')');\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\n                    });\n\n                    this.subSystem.on('error', error => {\n                        if (this.stop) {\n                            return;\n                        }\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub System client Objects No redis connection: ' + JSON.stringify(error));\n                    });\n\n                    if (this.settings.connection.enhancedLogging) {\n                        this.subSystem.on('connect', () =>\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event connect (stop=' + this.stop + ')'));\n\n                        this.subSystem.on('close', () =>\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event close (stop=' + this.stop + ')'));\n\n                        this.subSystem.on('reconnecting', reconnectCounter =>\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\n                    }\n\n                    this.subSystem.on('ready', () => {\n                        if (--initCounter < 1) {\n                            if (this.settings.connection.port === 0) {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host);\n                            } else {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\n                            }\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\n                            ready = true;\n                        }\n                        // subscribe on system.config only if js-controller\n                        if (this.settings.controller) {\n                            this.subSystem.psubscribe(this.objNamespace + 'system.config');\n                        }\n                        Object.keys(this.subSystem.ioBrokerSubscriptions).forEach(sub => this.subSystem.psubscribe(sub));\n                    });\n                }\n\n                if (!this.sub && typeof onChangeUser === 'function') {\n                    initCounter++;\n                    this.log.debug(this.namespace + ' Objects create User PubSub Client');\n                    this.sub = new Redis(this.settings.connection.options);\n                    this.sub.ioBrokerSubscriptions = {};\n\n                    this.sub.on('pmessage', (pattern, channel, message) => {\n                        setImmediate(() => {\n                            this.log.silly(this.namespace + ' Objects user redis pmessage ' + pattern + '/' + channel + ':' + message);\n                            try {\n                                if (ioRegExp.test(channel)) {\n                                    const id = channel.substring(this.objNamespaceL);\n                                    try {\n                                        const obj = message ? JSON.parse(message) : null;\n\n                                        onChangeUser(id, obj);\n                                    } catch (e) {\n                                        this.log.warn(`${this.namespace} Objects user cannot process pmessage ${id} - ${message}: ${e.message}`);\n                                        this.log.warn(`${this.namespace} ${e.stack}`);\n                                    }\n                                } else {\n                                    this.log.warn(`${this.namespace} Objects user received unexpected pmessage: ${channel}`);\n                                }\n                            } catch (e) {\n                                this.log.warn(this.namespace + ' Objects user pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\n                                this.log.warn(this.namespace + ' ' + e.stack);\n                            }\n                        });\n                    });\n\n                    this.sub.on('end', () => {\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end user sub (stop=' + this.stop + ')');\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\n                    });\n\n                    this.sub.on('error', error => {\n                        if (this.stop) {\n                            return;\n                        }\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub user client Objects No redis connection: ' + JSON.stringify(error));\n                    });\n\n                    if (this.settings.connection.enhancedLogging) {\n                        this.sub.on('connect', () =>\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event connect (stop=' + this.stop + ')'));\n\n                        this.sub.on('close', () =>\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event close (stop=' + this.stop + ')'));\n\n                        this.sub.on('reconnecting', reconnectCounter =>\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\n                    }\n\n                    this.sub.on('ready', () => {\n                        if (--initCounter < 1) {\n                            if (this.settings.connection.port === 0) {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host);\n                            } else {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\n                            }\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\n                            ready = true;\n                        }\n                        Object.keys(this.sub.ioBrokerSubscriptions).forEach(sub => this.sub.psubscribe(sub));\n                    });\n                }\n\n                this.log.debug(this.namespace + ' Objects client initialize lua scripts');\n                initCounter++;\n                this.loadLuaScripts(() => {\n                    if (!this.client) {\n                        return;\n                    }\n                    // init default new acl\n                    this.client.get(this.objNamespace + 'system.config', (err, obj) => {\n                        if (obj) {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON system.config: ${obj}`);\n                                obj = null;\n                            }\n                            if (obj && obj.common && obj.common.defaultNewAcl) {\n                                this.defaultNewAcl = obj.common.defaultNewAcl;\n                            }\n                        } else {\n                            this.log.error(`${this.namespace} Cannot read system.config: ${obj} (OK when migrating or restoring)`);\n                        }\n\n                        if (--initCounter < 1) {\n                            if (this.settings.connection.port === 0) {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host);\n                            } else {\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\n                            }\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\n                            ready = true;\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    getStatus() {\n        return {type: 'redis', server: false};\n    }\n\n    /**\n     * Checks if given Id is a meta object, else throws error\n     *\n     * @param {string} id to check\n     * @throws Error if id is invalid\n     */\n    async validateMetaObject(id) {\n        if (this.existingMetaObjects[id] === undefined) {\n            // if not cached -> getObject\n            const obj = await this.getObjectAsync(id);\n            if (obj && obj.type === 'meta') {\n                this.existingMetaObjects[id] = true;\n            } else {\n                this.existingMetaObjects[id] = false;\n                return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\n            }\n        } else if (this.existingMetaObjects[id] === false) {\n            return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\n        }\n    }\n\n    normalizeFilename(name) {\n        return name ? name.replace(/[/\\\\]+/g, '/') : name;\n    }\n\n    // -------------- FILE FUNCTIONS -------------------------------------------\n    _setBinaryState(id, data, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (!Buffer.isBuffer(data)) {\n            data = Buffer.from(data);\n        }\n        this.client.set(id, data, callback);\n    }\n\n    _getBinaryState(id, callback) {\n        if (typeof callback !== 'function') {\n            return this.log.error(this.namespace + ' no callback found in _getBinaryState');\n        }\n        if (!this.client) {\n            return setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n\n        this.client.getBuffer(id, (err, data) => {\n            if (!err && data) {\n                callback(err, data);\n            } else {\n                callback(err);\n            }\n        });\n    }\n\n    _delBinaryState(id, callback) {\n        if (!this.client) {\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        } else {\n            this.client.del(id, () => typeof callback === 'function' && callback());\n        }\n    }\n\n    getFileId(id, name, isMeta) {\n        name = this.normalizeFilename(name);\n        // e.g. ekey.admin and admin/ekey.png\n        if (id.match(/\\.admin$/)) {\n            if (name.match(/^admin\\//)) {\n                name = name.replace(/^admin\\//, '');\n            } else\n            // e.g. ekey.admin and iobroker.ekey/admin/ekey.png\n            if (name.match(/^iobroker.[-\\d\\w]\\/admin\\//i)) {\n                name = name.replace(/^iobroker.[-\\d\\w]\\/admin\\//i, '');\n            }\n        }\n        const normalized = utils.sanitizePath(id, name);\n        if (!normalized) {\n            this.log.debug(this.namespace + ' Invalid file path ' + id + '/' + name);\n            return '';\n        }\n        id = normalized.id;\n        name = normalized.name;\n\n        return this.fileNamespace + id + '$%$' + name + (isMeta !== undefined ? (isMeta ? '$%$meta' : '$%$data') : '');\n    }\n\n    checkFile(id, name, options, flag, callback) {\n        // read file settings from redis\n        const fileId = this.getFileId(id, name, true);\n        if (!fileId) {\n            const fileOptions = {'notExists': true};\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\n                return typeof callback === 'function' && setImmediate(() => callback(false, options, fileOptions)); // NO error\n            } else {\n                return typeof callback === 'function' && setImmediate(() => callback(true, options)); // error\n            }\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED, options));\n        }\n        this.client.get(fileId, (err, fileOptions) => {\n            fileOptions = fileOptions || '{\"notExists\": true}';\n            try {\n                fileOptions = JSON.parse(fileOptions);\n            } catch (e) {\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${fileOptions}`);\n                fileOptions = {notExists: true};\n            }\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\n                return typeof callback === 'function' && callback(false, options, fileOptions); // NO error\n            } else {\n                return typeof callback === 'function' && callback(true, options); // error\n            }\n        });\n    }\n\n    checkFileRights(id, name, options, flag, callback) {\n        return utils.checkFileRights(this, id, name, options, flag, callback);\n    }\n\n    _setDefaultAcl(ids, defaultAcl) {\n        if (ids && ids.length) {\n            const id = ids.shift();\n            this.getObject(id, (err, obj) => {\n                if (obj && !obj.acl) {\n                    obj.acl = defaultAcl;\n                    this.setObject(id, obj, null, () =>\n                        setImmediate(() =>\n                            this._setDefaultAcl(ids, defaultAcl)));\n                } else {\n                    setImmediate(() =>\n                        this._setDefaultAcl(ids, defaultAcl));\n                }\n            });\n        }\n    }\n\n    setDefaultAcl(defaultNewAcl) {\n        this.defaultNewAcl = defaultNewAcl || {\n            owner: utils.CONSTS.SYSTEM_ADMIN_USER,\n            ownerGroup: utils.CONSTS.SYSTEM_ADMIN_GROUP,\n            object: 0x664,\n            state: 0x664,\n            file: 0x664\n        };\n        // Get ALL Objects\n        this.getKeys('*', (err, ids) => this._setDefaultAcl(ids, this.defaultNewAcl));\n    }\n\n    getUserGroup(user, callback) {\n        return utils.getUserGroup(this, user, (error, user, userGroups, userAcl) => {\n            if (error) {\n                this.log.error(this.namespace + ' ' + error);\n            }\n            callback.call(this, user, userGroups, userAcl);\n        });\n    }\n\n    insert(id, attName, ignore, options, obj, callback) {\n        return utils.insert(this, id, attName, ignore, options, obj, callback);\n    }\n\n    _writeFile(id, name, data, options, callback, meta) {\n        const ext         = name.match(/\\.[^.]+$/);\n        const mime        = utils.getMimeType(ext);\n        const _mimeType   = mime.mimeType;\n        const isBinary    = mime.isBinary;\n\n        const metaID = this.getFileId(id, name, true);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        // virtual files only get Meta objects\n        if (options.virtualFile) {\n            meta = {\n                notExists: true,\n                virtualFile: true\n            }; // Store file with flags as it would not exist\n            this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(_err));\n        } else {\n            if (!meta) {\n                meta = {createdAt: Date.now()};\n            }\n            if (!meta.acl) {\n                meta.acl = {\n                    owner: options.user || (this.defaultNewAcl && this.defaultNewAcl.owner) || utils.CONSTS.SYSTEM_ADMIN_USER,\n                    ownerGroup: options.group || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\n                    permissions: options.mode || (this.defaultNewAcl && this.defaultNewAcl.file) || 0x644\n                };\n            }\n            meta.stats = {\n                size: data ? data.length : 0\n            };\n            if (meta.hasOwnProperty('notExists')) {\n                delete meta.notExists;\n            }\n\n            meta.mimeType = options.mimeType || _mimeType;\n            meta.binary = isBinary;\n            meta.acl.ownerGroup = meta.acl.ownerGroup || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\n            meta.modifiedAt = Date.now();\n\n            this._setBinaryState(this.getFileId(id, name, false), data, err => this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(err || _err)));\n        }\n    }\n\n    async writeFile(id, name, data, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (typeof options === 'string') {\n            options = {mimeType: options};\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.writeFile(id, name, data, options, err =>\n                    err ? reject(err) : resolve()));\n        }\n\n        try {\n            await this.validateMetaObject(id);\n        } catch (e) {\n            this.log.warn(`${this.namespace} writeFile will not write this file (${name}) in future versions: ${e.message}`);\n            // todo: replace by below code in 3.1 + add test\n            // this.log.error(`Cannot write file ${name}: ${e.message}`);\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        if (data === undefined) {\n            data = null;\n        }\n\n        // If file yet exists => check the permissions\n        return this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                return this._writeFile(id, name, data, options, callback, meta);\n            }\n        });\n    }\n\n    writeFileAsync(id, name, data, options) {\n        return new Promise((resolve, reject) =>\n            this.writeFile(id, name, data, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _readFile(id, name, options, callback, meta) {\n        if (meta.notExists) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        this._getBinaryState(this.getFileId(id, name, false), (err, buffer) => {\n            const mimeType = meta && meta.mimeType;\n            if (meta && !meta.binary && buffer) {\n                buffer = buffer.toString();\n            }\n            typeof callback === 'function' && callback(err, buffer, mimeType);\n        });\n    }\n\n    async readFile(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options  = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.readFile(id, name, options, (err, res, mimeType) =>\n                    err ? reject(err) : resolve({data: res, mimeType: mimeType})));\n        }\n\n        try {\n            await this.validateMetaObject(id);\n        } catch (e) {\n            this.log.debug(`${this.namespace} readFile will not read this file (${name}) in future versions: ${e.message}`);\n            // todo: rethink how to replace by below code in 3.1 + add test\n            // this.log.error(`Cannot read file ${name}: ${e.message}`);\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        options = options || {};\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                return this._readFile(id, name, options, callback, meta);\n            }\n        });\n    }\n\n    readFileAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.readFile(id, name, options, (err, res, mimeType) =>\n                err ? reject(err) : resolve({data: res, mimeType: mimeType})));\n    }\n\n    /**\n     * Check if given file exists\n     *\n     * @param {string} id id of the namespace\n     * @param {string} [name] name of the file\n     * @param {object} [options] optional user context\n     * @returns {Promise<boolean>}\n     */\n    async fileExists(id, name, options) {\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        try {\n            await new Promise((resolve, reject) => {\n                this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, err => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve();\n                    }\n                });\n            });\n            id = this.getFileId(id, name, false);\n            const exists = await this.client.exists(id);\n            return !!exists;\n        } catch (e) {\n            this.log.error(`${this.namespace} Cannot check file existence of \"${id}\": ${e}`);\n            return Promise.reject(new Error(`Cannot check file existence of \"${id}\": ${e}`));\n        }\n    }\n\n    _unlink(id, name, options, callback, meta) {\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (meta && meta.notExists) {\n            this._rm(id, name, options, callback);\n            //typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        } else {\n            const metaID = this.getFileId(id, name, true);\n            const dataID = this.getFileId(id, name, false);\n            this._delBinaryState(dataID, _err => this.client.del(metaID, callback));\n        }\n    }\n\n    unlink(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options  = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string') {\n            name = '';\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file['delete']) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._unlink(id, name, options, callback, meta);\n                }\n            }\n        });\n    }\n\n    unlinkAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.unlink(id, name, options, (err) =>\n                err ? reject(err) : resolve()));\n    }\n\n    delFile(id, name, options, callback) {\n        return this.unlink(id, name, options, callback);\n    }\n\n    delFileAsync(id, name, options) {\n        return this.unlinkAsync(id, name, options);\n    }\n\n    _readDir(id, name, options, callback) {\n        name = this.normalizeFilename(name);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (id === '') { // special case for \"root\"\n            const dirID = this.getFileId('*', '*');\n            this.client.keys(dirID, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n\n                const result = [];\n                if (!keys || !keys.length) {\n                    return typeof callback === 'function' && callback(null, result);\n                }\n                let lastDir;\n                keys.sort().forEach(dir => {\n                    dir = dir.substring(this.fileNamespaceL, dir.indexOf('$%$'));\n                    if (dir !== lastDir) {\n                        result.push({\n                            file: dir,\n                            stats: {},\n                            isDir: true\n                        });\n                    }\n                    lastDir = dir;\n                });\n                typeof callback === 'function' && callback(err, result);\n            });\n            return;\n        }\n        const dirID = this.getFileId(id, name + (name.length ? '/' : '') + '*');\n        this.client.keys(dirID, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n\n            const start = dirID.indexOf('$%$') + 3;\n            const end = '$%$meta'.length;\n\n            const baseName = name + (name.length ? '/' : '');\n            const dirs = [];\n            const deepLevel = baseName.split('/').length;\n            if (!keys || !keys.length) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND, []);\n            }\n            keys = keys\n                .sort()\n                .filter(key => {\n                    if (key.match(/\\$%\\$meta$/)) {\n                        const parts = key.substr(start, key.length - end).split('/');\n                        if (parts.length === deepLevel) {\n                            return !key.includes('/_data.json$%$') && key !== '_data.json'; // sort out \"virtual\" files that are used to mark directories\n                        } else {\n                            const dir = parts[deepLevel - 1];\n                            if (dirs.indexOf(dir) === -1) {\n                                dirs.push(dir);\n                            }\n                        }\n                    }\n                });\n            if (!keys.length) {\n                const result = [];\n                while (dirs.length) {\n                    result.push({\n                        file: dirs.shift(),\n                        stats: {},\n                        isDir: true\n                    });\n                }\n                return typeof callback === 'function' && callback(err, result);\n            }\n\n            // Check permissions\n            this.client.mget(keys, (err, objs) => {\n                if (err) {\n                    return typeof callback === 'function' && callback(err, objs);\n                }\n                const result = [];\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                objs = objs || [];\n                for (let i = 0; i < keys.length; i++) {\n                    const file = keys[i].substring(start + baseName.length, keys[i].length - end);\n                    while (dirs.length && dirs[0] < file) {\n                        result.push({\n                            file: dirs.shift(),\n                            stats: {},\n                            isDir: true\n                        });\n                    }\n\n                    try {\n                        objs[i] = JSON.parse(objs[i]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                        continue;\n                    }\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                        if (!objs[i] || objs[i].virtualFile) {\n                            continue;\n                        } // virtual file, ignore\n                        objs[i].acl = objs[i].acl || {};\n                        if (options.user !== utils.CONSTS.SYSTEM_ADMIN_USER && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) === -1) {\n                            objs[i].acl.read  = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_READ);\n                            objs[i].acl.write = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_WRITE);\n                        } else {\n                            objs[i].acl.read  = true;\n                            objs[i].acl.write = true;\n                        }\n                        result.push({\n                            file: file,\n                            stats: objs[i].stats,\n                            isDir: false,\n                            acl: objs[i].acl,\n                            modifiedAt: objs[i].modifiedAt,\n                            createdAt:  objs[i].createdAt\n                        });\n                    }\n                }\n                while (dirs.length) {\n                    result.push({\n                        file: dirs.shift(),\n                        stats: {},\n                        isDir: true\n                    });\n                }\n                typeof callback === 'function' && callback(null, result);\n            });\n        });\n    }\n\n    async readDir(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string') {\n            name = '';\n        }\n\n        // remove first and last\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n        if (name.endsWith('/')) {\n            name = name.substring(0, name.length - 1);\n        }\n\n        try {\n            await this.validateMetaObject(id);\n        } catch (e) {\n            this.log.warn(`${this.namespace} readDir will not read this directory (${name}) in future versions: ${e.message}`);\n            // todo: replace by below code in 3.1 + add test\n            // this.log.error(`Cannot read directory ${name}: ${e.message}`);\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.list) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    this._readDir(id, name, options, callback);\n                }\n            }\n        });\n    }\n\n    readDirAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.readDir(id, name, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    _renameHelper(keys, oldBase, newBase, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id = keys.shift();\n            this.client.rename(id.replace(/\\$%\\$meta$/, '$%$data'), id.replace(oldBase, newBase).replace(/\\$%\\$meta$/, '$%$data'), _err =>\n                this.client.rename(id, id.replace(oldBase, newBase), _err =>\n                    setImmediate(() => this._renameHelper(keys, oldBase, newBase, callback))));\n        }\n    }\n\n    _rename(id, oldName, newName, options, callback, meta) {\n        const oldMetaID = this.getFileId(id, oldName, true);\n        const oldDataID = this.getFileId(id, oldName, false);\n        const newMetaID = this.getFileId(id, newName, true);\n        const newDataID = this.getFileId(id, newName, false);\n        if (!meta || !this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        } else if (meta.notExists) {\n            oldName = this.normalizeFilename(oldName);\n            newName = this.normalizeFilename(newName);\n\n            // it could be dir\n            if (!oldName.endsWith('/*')) {\n                oldName += '/*';\n            } else if (oldName.endsWith('/')) {\n                oldName += '*';\n            }\n\n            if (!newName.endsWith('/*')) {\n                newName += '/*';\n            } else if (newName.endsWith('/')) {\n                newName += '*';\n            }\n\n            const oldBase = oldName.substring(0, oldName.length - 1);\n            const newBase = newName.substring(0, newName.length - 1);\n            const dirID = this.getFileId(id, oldName);\n            this.client.keys(dirID, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                if (err || !keys) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n\n                keys = keys\n                    .sort()\n                    .filter(key => key.match(/\\$%\\$meta$/));\n\n                if (!keys.length) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n                // Check permissions\n                this.client.mget(keys, (err, objs) => {\n                    let result;\n                    const dontCheck =\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                    objs = objs || [];\n                    if (!dontCheck) {\n                        result = [];\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                objs[i] = JSON.parse(objs[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                                continue;\n                            }\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                                result.push(keys[i]);\n                            }\n                        }\n                    } else {\n                        result = keys;\n                    }\n                    this._renameHelper(result, oldBase, newBase, callback);\n                });\n            });\n        } else {\n            this.client.rename(oldDataID, newDataID, _err =>\n                this.client.rename(oldMetaID, newMetaID, callback));\n        }\n    }\n\n    rename(id, oldName, newName, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        if (typeof oldName !== 'string' || !oldName.length || oldName === '/' || oldName === '//' ||\n            typeof newName !== 'string' || !newName.length || newName === '/' || newName === '//') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n        if (oldName.startsWith('/')) {\n            oldName = oldName.substring(1);\n        }\n        if (newName.startsWith('/')) {\n            newName = newName.substring(1);\n        }\n        if (oldName.endsWith('/')) {\n            oldName = oldName.substring(0, oldName.length - 1);\n        }\n        if (newName.endsWith('/')) {\n            newName = newName.substring(0, newName.length - 1);\n        }\n\n        this.checkFileRights(id, oldName, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    this._rename(id, oldName, newName, options, callback, meta);\n                }\n            }\n        });\n    }\n\n    renameAsync(id, oldName, newName, options) {\n        return new Promise((resolve, reject) =>\n            this.rename(id, oldName, newName, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _touch(id, name, options, callback, meta) {\n        const metaID = this.getFileId(id, name, true);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (!meta || meta.notExists) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n        meta.modifiedAt = Date.now();\n        this.client.set(metaID, JSON.stringify(meta), callback);\n    }\n\n    touch(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                return this._touch(id, name, options, callback, meta);\n            }\n        });\n    }\n\n    touchAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.touch(id, name, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _rmHelper(keys, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id = keys.shift();\n            this._delBinaryState(id.replace(/\\$%\\$meta$/, '$%$data'), _err =>\n                this.client.del(id, _err =>\n                    setImmediate(() => this._rmHelper(keys, callback))));\n        }\n    }\n\n    _rm(id, name, options, callback, meta) {\n        if (meta && !meta.isDir) {\n            // it is file\n            const metaID = this.getFileId(id, name, true);\n            const dataID = this.getFileId(id, name, false);\n            this.delObject(dataID, _err => this.delObject(metaID, callback));\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            name = this.normalizeFilename(name);\n            // it could be dir\n            if (! name.endsWith('/*')) {\n                name += '/*';\n            } else if (name.endsWith('/')) {\n                name += '*';\n            }\n            const dirID = this.getFileId(id, name);\n            this.client.keys(dirID, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                if (err || !keys) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n\n                keys = keys\n                    .sort()\n                    .filter(key => key.match(/\\$%\\$meta$/));\n\n                if (!keys.length) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n                }\n                // Check permissions\n                this.client.mget(keys, (err, objs) => {\n                    let result;\n                    const dontCheck =\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                    objs = objs || [];\n                    if (!dontCheck) {\n                        result = [];\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                objs[i] = JSON.parse(objs[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                                continue;\n                            }\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                                result.push(keys[i]);\n                            }\n                        }\n                    } else {\n                        result = keys;\n                    }\n                    const files = result.map(key => {\n                        const name = key.substring(this.fileNamespaceL + id.length + 3, key.length - 7);\n                        const pos = name.lastIndexOf('/');\n                        if (pos !== -1) {\n                            return {file: name.substring(pos + 1), path: name.substring(0, pos)};\n                        } else {\n                            return {file: id, path: ''};\n                        }\n                    });\n                    this._rmHelper(result, () => callback(null, files));\n                });\n            });\n        }\n    }\n\n    rm(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof name !== 'string') {\n            name = '';\n        }\n\n        this.checkFileRights(id, null, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file['delete']) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._rm(id, name, options, callback, meta && meta.notExists ? null : meta);\n                }\n            }\n        });\n    }\n\n    rmAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.rm(id, name, options, (err, files) =>\n                err ? reject(err) : resolve(files)));\n    }\n\n    // simulate. redis has no dirs\n    mkdir(id, dirName, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (typeof dirName !== 'string') {\n            dirName = '';\n        }\n\n        dirName = this.normalizeFilename(dirName);\n        if (dirName.startsWith('/')) {\n            dirName = dirName.substring(1);\n        }\n        this.checkFileRights(id, dirName, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    // we create a dummy file (for file this file exists to store meta data)\n                    options = options || {};\n                    options.virtualFile = true; // this is a virtual File\n                    const realName = dirName + (dirName.endsWith('/') ? '' : '/');\n                    this.writeFile(id, realName + '_data.json', '', options, callback);\n                }\n            }\n        });\n    }\n\n    mkdirAsync(id, dirName, options) {\n        return new Promise((resolve, reject) =>\n            this.mkdir(id, dirName, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _chownFileHelper(keys, metas, options, callback) {\n        if (!keys || !keys.length) {\n            return typeof callback === 'function' && callback();\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        const id  = keys.shift();\n        const meta = metas.shift();\n        meta.acl.owner      = options.owner;\n        meta.acl.ownerGroup = options.ownerGroup;\n        this.client.set(id, JSON.stringify(meta), _err =>\n            setImmediate(() => this._chownFileHelper(keys, metas, options, callback)));\n    }\n\n    _chownFile(id, name, options, callback, meta) {\n        if (!meta) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n\n        name = this.normalizeFilename(name);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (!meta.isDir && !meta.notExists) {\n            // it is file\n            const metaID = this.getFileId(id, name, true);\n            meta.acl.owner = options.owner;\n            meta.acl.ownerGroup = options.ownerGroup;\n            this.client.set(metaID, JSON.stringify(meta), err => {\n                const nameArr = name.split('/');\n                const file = nameArr.pop();\n                const res = [{\n                    path:       nameArr.join('/'),\n                    file:       file,\n                    stats:      meta.stats,\n                    isDir:      false,\n                    acl:        meta.acl || {},\n                    modifiedAt: meta.modifiedAt,\n                    createdAt:  meta.createdAt\n                }];\n                return typeof callback === 'function' && callback(err, res);\n            });\n            return;\n        }\n        // it could be dir\n        if (! name.endsWith('/*')) {\n            name += '/*';\n        } else if (name.endsWith('/')) {\n            name += '*';\n        }\n        const dirID = this.getFileId(id, name);\n        this.client.keys(dirID, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            if (err || !keys) {\n                return typeof callback === 'function' &&  callback(utils.ERRORS.ERROR_NOT_FOUND);\n            }\n\n            keys = keys\n                .sort()\n                .filter(key => key.match(/\\$%\\$meta$/));\n\n            // Check permissions\n            this.client.mget(keys, (err, metas) => {\n                const dontCheck = options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n                const keysFiltered = [];\n                const objsFiltered = [];\n                const processed = [];\n                const start = dirID.indexOf('$%$') + 3;\n                const end = '$%$meta'.length;\n\n                metas = metas || [];\n                for (let i = 0; i < keys.length; i++) {\n                    try {\n                        metas[i] = JSON.parse(metas[i]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\n                        continue;\n                    }\n                    if (dontCheck || utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_WRITE)) {\n                        if (!metas[i] || metas[i].virtualFile) {\n                            continue;\n                        } // virtual file, ignore\n                        keysFiltered.push(keys[i]);\n                        objsFiltered.push(metas[i]);\n\n                        const name = keys[i].substring(start, keys[i].length - end);\n                        const nameArr = name.split('/');\n                        const file = nameArr.pop();\n                        processed.push({\n                            path:       nameArr.join('/'),\n                            file:       file,\n                            stats:      metas[i].stats || {},\n                            isDir:      false,\n                            acl:        metas[i].acl || {},\n                            modifiedAt: metas[i].modifiedAt,\n                            createdAt:  metas[i].createdAt\n                        });\n                    }\n                }\n                this._chownFileHelper(keysFiltered, objsFiltered, options, err => {\n                    return typeof callback === 'function' && callback(err, processed);\n                });\n            });\n        });\n    }\n\n    chownFile(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n        if (typeof options !== 'object') {\n            options = {owner: options};\n        }\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name.startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        if (!options.ownerGroup && options.group) {\n            options.ownerGroup = options.group;\n        }\n        if (!options.owner      && options.user)  {\n            options.owner      = options.user;\n        }\n\n        if (!options.owner) {\n            this.log.error(this.namespace + ' user is not defined');\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n            return;\n        }\n\n        if (!options.ownerGroup) {\n            // get user group\n            this.getUserGroup(options.owner, (user, groups /* , permissions */) => {\n                if (!groups || !groups[0]) {\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\n                    return;\n                } else {\n                    options.ownerGroup = groups[0];\n                }\n                this.chownFile(id, name, options, callback);\n            });\n            return;\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._chownFile(id, name, options, callback, meta);\n                }\n            }\n        });\n    }\n\n    chownFileAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.chownFile(id, name, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _chmodFileHelper(keys, metas, options, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id   = keys.shift();\n            const meta = metas.shift();\n            meta.acl.permissions = options.mode;\n            this.client.set(id, JSON.stringify(meta), _err =>\n                setImmediate(() => this._chmodFileHelper(keys, metas, options, callback)));\n        }\n    }\n\n    _chmodFile(id, name, options, callback, meta) {\n        if (!meta) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n        }\n        name = this.normalizeFilename(name);\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        if (!meta.isDir && !meta.notExists) {\n            // it is file\n            const metaID = this.getFileId(id, name, true);\n            meta.acl.permissions = options.mode;\n            this.client.set(metaID, JSON.stringify(meta), err => {\n                const nameArr = name.split('/');\n                const file = nameArr.pop();\n                const res = [{\n                    path:       nameArr.join('/'),\n                    file:       file,\n                    stats:      meta.stats,\n                    isDir:      false,\n                    acl:        meta.acl || {},\n                    modifiedAt: meta.modifiedAt,\n                    createdAt:  meta.createdAt\n                }];\n                return typeof callback === 'function' && callback(err, res);\n            });\n            return;\n        }\n        // it could be dir\n        if (! name.endsWith('/*')) {\n            name += '/*';\n        } else if (name.endsWith('/')) {\n            name += '*';\n        }\n        const dirID = this.getFileId(id, name);\n        this.client.keys(dirID, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            if (err || !keys) {\n                return typeof callback === 'function' &&  callback(utils.ERRORS.ERROR_NOT_FOUND);\n            }\n\n            keys = keys\n                .sort()\n                .filter(key => key.match(/\\$%\\$meta$/));\n\n            // Check permissions\n            this.client.mget(keys, (err, objs) => {\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                const keysFiltered = [];\n                const objsFiltered = [];\n                const processed = [];\n                const start = dirID.indexOf('$%$') + 3;\n                const end = '$%$meta'.length;\n\n                objs = objs || [];\n                for (let i = 0; i < keys.length; i++) {\n                    try {\n                        objs[i] = JSON.parse(objs[i]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                        continue;\n                    }\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_WRITE)) {\n                        if (!objs[i] || objs[i].virtualFile) {\n                            continue;\n                        } // virtual file, ignore\n                        keysFiltered.push(keys[i]);\n                        objsFiltered.push(objs[i]);\n\n                        const name = keys[i].substring(start, keys[i].length - end);\n                        const nameArr = name.split('/');\n                        const file = nameArr.pop();\n                        processed.push({\n                            path:       nameArr.join('/'),\n                            file:       file,\n                            stats:      objs[i].stats,\n                            isDir:      false,\n                            acl:        objs[i].acl || {},\n                            modifiedAt: objs[i].modifiedAt,\n                            createdAt:  objs[i].createdAt\n                        });\n                    }\n                }\n                this._chmodFileHelper(keysFiltered, objsFiltered, options, err =>\n                    typeof callback === 'function' && callback(err, processed));\n            });\n        });\n    }\n\n    chmodFile(id, name, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n\n        if (typeof name !== 'string' || !name.length || name === '/') {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\n        }\n\n        if (name[0].startsWith('/')) {\n            name = name.substring(1);\n        }\n\n        if (typeof options !== 'object') {\n            options = {mode: options};\n        }\n\n        if (options.mode === undefined) {\n            this.log.error(this.namespace + ' mode is not defined');\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n            return;\n        } else if (typeof options.mode === 'string') {\n            options.mode = parseInt(options.mode, 16);\n        }\n\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                } else {\n                    return this._chmodFile(id, name, options, callback, meta);\n                }\n            }\n        });\n    }\n\n    chmodFileAsync(id, name, options) {\n        return new Promise((resolve, reject) =>\n            this.chmodFile(id, name, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    enableFileCache(enabled, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, _options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else if (typeof callback === 'function') {\n                // cache cannot be enabled\n                setImmediate(() => typeof callback === 'function' && callback(null, false));\n            }\n        });\n    }\n\n    enableFileCacheAsync(enabled, options) {\n        return new Promise((resolve, reject) =>\n            this.enableFileCache(enabled, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    // -------------- OBJECT FUNCTIONS -------------------------------------------\n    _subscribe(pattern, options, subClient, callback) {\n        if (!subClient) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (Array.isArray(pattern)) {\n            let count = pattern.length;\n            pattern.forEach(pattern => {\n                this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\n                subClient.psubscribe(this.objNamespace + pattern, err => {\n                    if (!err) {\n                        subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\n                    }\n                    !--count && typeof callback === 'function' && callback(err);\n                });\n\n            });\n        } else {\n            this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\n            subClient.psubscribe(this.objNamespace + pattern, err => {\n                if (!err) {\n                    subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\n                }\n                typeof callback === 'function' && callback(err);\n            });\n        }\n    }\n\n    subscribeConfig(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._subscribe(pattern, options, this.subSystem, callback);\n            }\n        });\n    }\n\n    subscribe(pattern, options, callback) {\n        return this.subscribeConfig(pattern, options, callback);\n    }\n\n    subscribeAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.subscribe(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    subscribeUser(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._subscribe(pattern, options, this.sub, callback);\n            }\n        });\n    }\n\n    subscribeUserAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.subscribeUser(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _unsubscribe(pattern, options, subClient, callback) {\n        if (!subClient) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (Array.isArray(pattern)) {\n            let count = pattern.length;\n            pattern.forEach(pattern => {\n                this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\n                subClient.punsubscribe(this.objNamespace + pattern, err => {\n                    if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\n                        delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\n                    }\n                    !--count && typeof callback === 'function' && callback(err);\n                });\n            });\n        } else {\n            this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\n            subClient.punsubscribe(this.objNamespace + pattern, err => {\n                if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\n                    delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\n                }\n                typeof callback === 'function' && callback(err);\n            });\n        }\n    }\n\n    unsubscribeConfig(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._unsubscribe(pattern, options, this.subSystem, callback);\n            }\n        });\n    }\n\n    unsubscribe(pattern, options, callback) {\n        return this.unsubscribeConfig(pattern, options, callback);\n    }\n\n    unsubscribeAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.unsubscribe(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    unsubscribeUser(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._unsubscribe(pattern, options, this.sub, callback);\n            }\n        });\n    }\n\n    unsubscribeUserAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.unsubscribeUser(pattern, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    _objectHelper(keys, objs, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id  = keys.shift();\n            const obj = objs.shift();\n            const message = JSON.stringify(obj);\n            this.client.set(id, message, err => {\n                !err && this.client.publish(id, message).catch(_err => {});\n                setImmediate(() => this._objectHelper(keys, objs, callback));\n            });\n        }\n    }\n\n    _chownObject(pattern, options, callback) {\n        this.getConfigKeys(pattern, options, (err, keys) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n                return;\n            }\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            this.client.mget(keys, (err, objects) => {\n                const filteredKeys = [];\n                const filteredObjs = [];\n                objects = objects || [];\n                for (let k = 0; k < keys.length; k++) {\n                    try {\n                        objects[k] = JSON.parse(objects[k]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\n                        continue;\n                    }\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\n                        continue;\n                    }\n                    if (!objects[k].acl) {\n                        objects[k].acl = {\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\n                        };\n                        if (objects[k].type === 'state') {\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\n                        }\n                    }\n                    objects[k].acl.owner      = options.owner;\n                    objects[k].acl.ownerGroup = options.ownerGroup;\n                    filteredKeys.push(keys[k]);\n                    filteredObjs.push(objects[k]);\n                }\n                this._objectHelper(filteredKeys, filteredObjs, () =>\n                    typeof callback === 'function' && setImmediate(() => callback(null, filteredObjs)));\n            });\n        }, true);\n    }\n\n    chownObject(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n        options.acl = null;\n\n        if (typeof options !== 'object') {\n            options = {owner: options};\n        }\n\n        if (!options.ownerGroup && options.group) {\n            options.ownerGroup = options.group;\n        }\n        if (!options.owner && options.user)  {\n            options.owner = options.user;\n        }\n\n        if (!options.owner) {\n            this.log.error(this.namespace + ' user is not defined');\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n            return;\n        }\n\n        if (!options.ownerGroup) {\n            // get user group\n            this.getUserGroup(options.owner, (user, groups /* , permissions*/) => {\n                if (!groups || !groups[0]) {\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\n                    return;\n                } else {\n                    options.ownerGroup = groups[0];\n                }\n                this.chownObject(pattern, options, callback);\n            });\n            return;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n            } else {\n                if (!options.acl.object || !options.acl.object.write) {\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\n                } else {\n                    return this._chownObject(pattern, options, callback);\n                }\n            }\n        });\n    }\n\n    chownObjectAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.chownObject(pattern, options, (err, list) =>\n                err ? reject(err) : resolve(list)));\n    }\n\n    _chmodObject(pattern, options, callback) {\n        this.getConfigKeys(pattern, options, (err, keys) => {\n            if (err) {\n                typeof callback === 'function' && callback(err);\n                return;\n            }\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            this.client.mget(keys, (err, objects) => {\n                const filteredKeys = [];\n                const filteredObjs = [];\n                objects = objects || [];\n                for (let k = 0; k < keys.length; k++) {\n                    try {\n                        objects[k] = JSON.parse(objects[k]);\n                    } catch (e) {\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\n                        continue;\n                    }\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\n                        continue;\n                    }\n                    if (!objects[k].acl) {\n                        objects[k].acl = {\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\n                        };\n                        if (objects[k].type === 'state') {\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\n                        }\n                    }\n                    if (options.object !== undefined) {\n                        objects[k].acl.object = options.object;\n                    }\n                    if (options.state !== undefined) {\n                        objects[k].acl.state = options.state;\n                    }\n                    filteredKeys.push(keys[k]);\n                    filteredObjs.push(objects[k]);\n                }\n                this._objectHelper(filteredKeys, filteredObjs, () =>\n                    typeof callback === 'function' && callback(null, filteredObjs));\n            });\n        }, true);\n    }\n\n    chmodObject(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n        options.acl = null;\n\n        if (typeof options !== 'object') {\n            options = {object: options};\n        }\n\n        if (options.mode && !options.object) {\n            options.object = options.mode;\n        }\n\n        if (options.object === undefined) {\n            this.log.error(this.namespace + ' mode is not defined');\n            return typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\n        } else if (typeof options.mode === 'string') {\n            options.mode = parseInt(options.mode, 16);\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                if (!options.acl.file.write) {\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\n                } else {\n                    return this._chmodObject(pattern, options, callback);\n                }\n            }\n        });\n    }\n\n    chmodObjectAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.chmodObject(pattern, options, (err, list) =>\n                err ? reject(err) : resolve(list)));\n    }\n\n    _getObject(id, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (!id || typeof id !== 'string') {\n            return typeof callback === 'function' && setImmediate(() => callback('invalid id ' + JSON.stringify(id)));\n        }\n\n        this.client.get(this.objNamespace + id, (err, obj) => {\n            if (err) {\n                this.log.debug(this.namespace + ' redis get ' + id + ', error - ' + err);\n            } else {\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + obj);\n            }\n            try {\n                obj = obj ? JSON.parse(obj) : null;\n            } catch (e) {\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${obj}: ${e.message}`);\n            }\n            if (obj) {\n                // Check permissions\n                if (utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ)) {\n                    typeof callback === 'function' && callback(null, obj);\n                } else {\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n                }\n\n            } else {\n                typeof callback === 'function' && callback(err, obj);\n            }\n        });\n    }\n\n    getObject(id, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObject(id, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (typeof callback === 'function') {\n            if (options && options.acl) {\n                options.acl = null;\n            }\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObject(id, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.getObject(id, options, (err, obj) =>\n                err ? reject(err) : resolve(obj)));\n    }\n\n    _getKeys(pattern, options, callback, dontModify) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        if (!pattern || typeof pattern !== 'string') {\n            return typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\n        }\n\n        const r = new RegExp(tools.pattern2RegEx(pattern));\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n\n            const result = [];\n            if (keys) {\n                keys.sort();\n                const result = [];\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                if (dontCheck) {\n                    for (let i = 0; i < keys.length; i++) {\n                        const id = keys[i].substring(this.objNamespaceL);\n                        if (r.test(id)) {\n                            if (!dontModify) {\n                                result.push(id);\n                            } else {\n                                result.push(keys[i]);\n                            }\n                        }\n                    }\n                    typeof callback === 'function' && callback(err, result);\n                } else {\n                    // Check permissions\n                    this.client.mget(keys, (err, metas) => {\n                        metas = metas || [];\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                metas[i] = JSON.parse(metas[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\n                                continue;\n                            }\n\n                            if (r.test(keys[i]) && utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_READ)) {\n                                if (!dontModify) {\n                                    result.push(keys[i].substring(this.objNamespaceL));\n                                } else {\n                                    result.push(keys[i]);\n                                }\n                            }\n                        }\n                        typeof callback === 'function' && callback(err, result);\n                    });\n\n                }\n            } else {\n                typeof callback === 'function' && callback(err, result);\n            }\n        });\n    }\n\n    getKeys(pattern, options, callback, dontModify) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getKeys(pattern, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj), dontModify));\n        }\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getKeys(pattern, options, callback, dontModify);\n                }\n            });\n        }\n    }\n\n    getKeysAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.getKeys(id, options, (err, keys) =>\n                err ? reject(err) : resolve(keys)));\n    }\n\n    getConfigKeys(pattern, options, callback, dontModify) {\n        return this.getKeys(pattern, options, callback, dontModify);\n    }\n\n    _getObjects(keys, options, callback, dontModify) {\n        if (!keys) {\n            typeof callback === 'function' && setImmediate(() => callback('no keys', null));\n            return;\n        }\n        if (!keys.length) {\n            typeof callback === 'function' && setImmediate(() => callback(null, []));\n            return;\n        }\n\n        let _keys;\n        if (!dontModify) {\n            _keys = [];\n            for (let i = 0; i < keys.length; i++) {\n                _keys[i] = this.objNamespace + keys[i];\n            }\n        } else {\n            _keys = keys;\n        }\n\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n\n        this.client.mget(_keys, (err, objs) => {\n            let result = [];\n            if (err) {\n                this.log.warn(this.namespace + ' redis mget ' + (!objs ? 0 :  objs.length) + ' ' + _keys.length + ', err: ' + err);\n            } else {\n                this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis mget ' + (!objs ? 0 : objs.length) + ' ' + _keys.length);\n            }\n            if (objs) {\n                const dontCheck =\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\n\n                if (!dontCheck) {\n                    for (let i = 0; i < objs.length; i++) {\n                        try {\n                            objs[i] = JSON.parse(objs[i]);\n                        } catch (e) {\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${objs[i]}`);\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\n                            continue;\n                        }\n                        if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                            result.push(objs[i]);\n                        } else {\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\n                        }\n                    }\n                } else {\n                    result = objs.map((obj, i) => {\n                        try {\n                            return JSON.parse(obj);\n                        } catch (e) {\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${obj}`);\n                            return null;\n                        }\n                    });\n                }\n            }\n            typeof callback === 'function' && callback(null, result);\n        });\n    }\n\n    getObjects(keys, options, callback, dontModify) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjects(keys, options, (err, objs) =>\n                    err ? reject(err) : resolve(objs), dontModify));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjects(keys, options, callback, dontModify);\n                }\n            });\n        }\n    }\n\n    getObjectsAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjects(id, options, (err, objs) =>\n                err ? reject(err) : resolve(objs)));\n    }\n\n    _getObjectsByPattern(pattern, options, callback) {\n        if (!pattern || typeof pattern !== 'string') {\n            typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\n            return;\n        }\n\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis keys ' + keys.length + ' ' + pattern);\n            this._getObjects(keys, options, callback, true);\n        });\n    }\n\n    getObjectsByPattern(pattern, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjectsByPattern(pattern, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjectsByPattern(pattern, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectsByPatternAsync(pattern, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjectsByPattern(pattern, options, (err, objs) =>\n                err ? reject(err) : resolve(objs)));\n    }\n\n    _setObject(id, obj, options, callback) {\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\n        }\n\n        if (!obj) {\n            this.log.warn(this.namespace + ' setObject: Argument object is null');\n            return typeof callback === 'function' && setImmediate(() => callback('obj is null'));\n        }\n        if (typeof obj !== 'object') {\n            this.log.warn(this.namespace + ' setObject: Argument object is no object: ' + obj);\n            return typeof callback === 'function' && setImmediate(() => callback('obj is no object'));\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        // make a copy of object, because we will modify it\n        obj = deepClone(obj);\n\n        obj._id = id;\n\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\n            try {\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\n            } catch (e) {\n                this.log.error(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\n                typeof callback === 'function' && callback(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\n                return;\n            }\n\n            if (!tools.checkNonEditable(oldObj, obj)) {\n                typeof callback === 'function' && callback('Invalid password for update of vendor information');\n                return;\n            }\n\n            // do not delete common settings, like \"history\" or \"mobile\". It can be erased only with \"null\"\n            if (oldObj && oldObj.common) {\n                this.preserveSettings.forEach(commonSetting => {\n                    // special case if \"custom\"\n                    if (commonSetting === 'custom') {\n                        if (!oldObj.common.custom) {\n                            // do nothing\n                        } else if ((!obj.common || !obj.common.custom) && oldObj.common.custom) {\n                            obj.common = obj.common || {};\n                            obj.common.custom = oldObj.common.custom;\n                        } else if (obj.common && obj.common.custom && oldObj.common.custom) {\n                            // merge together\n                            Object.keys(oldObj.common.custom).forEach(attr => {\n                                if (obj.common.custom[attr] === null) {\n                                    delete obj.common.custom[attr];\n                                } else if (obj.common.custom[attr] === undefined) {\n                                    obj.common.custom[attr] = oldObj.common.custom[attr];\n                                }\n                            });\n                        }\n                        // remove custom if no one attribute inside\n                        if (obj.common && obj.common.custom) {\n                            Object.keys(obj.common.custom).forEach(attr => {\n                                if (obj.common.custom[attr] === null) {\n                                    delete obj.common.custom[attr];\n                                }\n                            });\n                            if (!Object.keys(obj.common.custom).length) {\n                                delete obj.common.custom;\n                            }\n                        }\n                    } else {\n                        // remove settings if desired\n                        if (obj.common && obj.common[commonSetting] === null) {\n                            delete obj.common[commonSetting];\n                        } else\n                        // if old setting present and new setting is absent\n                        if (oldObj.common[commonSetting] !== undefined && (!obj.common || obj.common[commonSetting] === undefined)) {\n                            obj.common = obj.common || {};\n                            obj.common[commonSetting] = oldObj.common[commonSetting];\n                        }\n                    }\n                });\n            }\n\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\n                if (typeof obj.common.alias.id === 'object') {\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                } else {\n                    if (typeof obj.common.alias.id !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                }\n            }\n\n            if (oldObj && oldObj.acl && !obj.acl) {\n                obj.acl = oldObj.acl;\n            }\n\n            // add user default rights\n            if (this.defaultNewAcl && !obj.acl) {\n                obj.acl = deepClone(this.defaultNewAcl);\n                delete obj.acl.file;\n                if (obj.type !== 'state') {\n                    delete obj.acl.state;\n                }\n                // take the owner as current user\n                if (options.user) {\n                    obj.acl.owner = options.user;\n                }\n                // take the group as current user's group\n                if (options.group) {\n                    obj.acl.ownerGroup = options.group;\n                } else  {\n                    obj.acl.ownerGroup = null;\n                    return this.getUserGroup(obj.acl.owner, (user, groups /* , permissions */) => {\n                        if (!groups || !groups[0]) {\n                            options.group = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\n                        } else {\n                            options.group = groups[0];\n                        }\n                        obj.acl.ownerGroup = options.group;\n                        const message = JSON.stringify(obj);\n                        this.client.set(this.objNamespace + id, message, err => {\n                            if (!err) {\n                                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\n                                this.client.publish(this.objNamespace + id, message).catch(_err => {});\n                                // object updated -> if type changed to meta -> cache\n                                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\n                                    this.existingMetaObjects[id] = true;\n                                }\n                            }\n                            typeof callback === 'function' && callback(err, {id});\n                        });\n                    });\n                }\n            }\n\n            if (this.defaultNewAcl && obj.acl && !obj.acl.ownerGroup && options.group) {\n                obj.acl.ownerGroup = options.group;\n            }\n\n            const message = JSON.stringify(obj);\n            this.client.set(this.objNamespace + id, message, err => {\n                if (!err) {\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\n                    this.client.publish(this.objNamespace + id, message).catch(_err => {});\n                }\n                // object updated -> if type changed to meta -> cache\n                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\n                    this.existingMetaObjects[id] = true;\n                }\n                typeof callback === 'function' && callback(err, {id});\n            });\n        });\n    }\n\n    /**\n     * set anew or update object\n     *\n     * This function writes the object into DB\n     *\n     * @alias setObject\n     * @memberof objectsInMemServer\n     * @param {string} id ID of the object\n     * @param {object} obj\n     * @param {object} options options for access control are optional\n     * @param {function} callback return function\n     */\n    setObject(id, obj, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.setObject(id, obj, options, (err, res) =>\n                    err ? reject(err) : resolve(res)));\n        }\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._setObject(id, obj, options, callback);\n            }\n        });\n    }\n\n    setObjectAsync(id, obj, options) {\n        return new Promise((resolve, reject) =>\n            this.setObject(id, obj, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    _delObject(id, options, callback) {\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n\n        // read object\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\n            if (err) {\n                this.log.warn(this.namespace + ' redis get ' + id + ', error - ' + err);\n            } else {\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + oldObj);\n            }\n            if (!oldObj) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\n            }\n\n            try {\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\n            } catch (e) {\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\n            }\n\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\n                typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n            } else {\n                this.client.del(this.objNamespace + id, err => {\n                    if (!err) {\n                        //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' null');\n                        this.client.publish(this.objNamespace + id, 'null').catch(_err => {});\n                        // object has been deleted -> remove from cached meta if there\n                        if (this.existingMetaObjects[id]) {\n                            this.existingMetaObjects[id] = false;\n                        }\n                    }\n                    typeof callback === 'function' && callback(err);\n                });\n            }\n        });\n    }\n\n    delObject(id, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.delObject(id, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_DELETE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._delObject(id, options, callback);\n            }\n        });\n    }\n\n    delObjectAsync(id, options) {\n        return new Promise((resolve, reject) =>\n            this.delObject(id, options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    // this function is very ineffective. Because reads all objects and then process them\n    async _applyViewFunc(func, params, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n        }\n        const result = {\n            rows: []\n        };\n\n        // filters objs which are already present in array by property 'id'\n        const filterDuplicates = arr => {\n            const included = {};\n            const filteredArr = arr.filter(obj => {\n                if (included[obj.id]) {\n                    return false;\n                } else {\n                    included[obj.id] = true;\n                    return true;\n                }\n            });\n\n            return filteredArr;\n        };\n\n        params = params || {};\n        params.startkey = params.startkey || '';\n        params.endkey   = params.endkey   || '\\u9999';\n        const wildcardPos = params.endkey.indexOf('\\u9999');\n        let wildCardLastPos = true;\n        if (wildcardPos !== -1 && wildcardPos !== params.endkey.length - 1) {\n            wildCardLastPos = false; // TODO do in LUA\n        }\n        let m;\n\n        // if start and and end keys are equal modify end key\n        if (params.startkey === params.endkey) {\n            params.endkey = params.endkey + '\\u0000';\n        }\n\n        // filter by type\n        if (wildCardLastPos && func && func.map && this.scripts.filter && (m = func.map.match(/if\\s\\(doc\\.type\\s?===?\\s?'(\\w+)'\\)\\semit\\(([^,]+),\\s?doc\\s?\\)/))) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.filter, 5, this.objNamespace, params.startkey, params.endkey, m[1], cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        objs = objs || [];\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            if (m[2] && m[2].trim() === 'doc._id') {\n                                return {id: obj._id, value: obj};\n                            } else if (m[2] && m[2].trim() === 'doc.common.name' && obj.common) {\n                                return {id: obj.common.name, value: obj};\n                            } else {\n                                this.log.error(`${this.namespace} Cannot filter \"${m[2]}\": ${JSON.stringify(obj)}`);\n                                return {id: 'parseError', value: null};\n                            }\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // Now we have all objects -> calculate max if desired\n            if (func.reduce === '_stats') {\n                let max = null;\n                for (let i = 0; i < result.rows.length; i++) {\n                    if (max === null || result.rows[i].value > max) {\n                        max = result.rows[i].value;\n                    }\n                }\n                if (max !== null) {\n                    result.rows = [{id: '_stats', value: {max: max}}];\n                } else {\n                    result.rows = [];\n                }\n            }\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by script\n        if (wildCardLastPos && func && func.map && this.scripts.script && func.map.indexOf('doc.common.engineType') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.script, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            return {id: obj._id, value: obj};\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by hm-rega programs\n        if (wildCardLastPos && func && func.map && this.scripts.programs && func.map.indexOf('doc.native.TypeName === \\'PROGRAM\\'') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.programs, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            return {id: obj._id, value: obj};\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while(cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by hm-rega variables\n        if (wildCardLastPos && func && func.map && this.scripts.variables && func.map.indexOf('doc.native.TypeName === \\'ALARMDP\\'') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.variables, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        const currRows = objs.map(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                                return {id: 'parseError', value: null};\n                            }\n                            return {id: obj._id, value: obj};\n                        });\n                        if (currRows.length) {\n                            result.rows = [...result.rows, ...currRows];\n                        } // endIf\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else\n        // filter by custom, redis also returns if common.custom is not present\n        if (wildCardLastPos && func && func.map && this.scripts.custom && func.map.indexOf('doc.common.custom') !== -1) {\n            let cursor = '0';\n            let filterRequired = true;\n            do {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                await new Promise(resolve => {\n                    this.client.evalsha([this.scripts.custom, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\n                        if (Array.isArray(objs[0])) {\n                            cursor = objs[1] || '0';\n                            objs = objs[0];\n                        } else {\n                            cursor = '0';\n                            filterRequired = false;\n                        }\n\n                        objs.forEach(obj => {\n                            try {\n                                obj = JSON.parse(obj);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                            }\n                            if (obj.common && obj.common.custom) {\n                                result.rows.push({id: obj._id, value: obj.common.custom});\n                            }\n                        });\n                        resolve();\n                    });\n                });\n            } while (cursor !== '0');\n\n            // apply filter if needed\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\n            typeof callback === 'function' && callback(null, result);\n        } else {\n            this.log.debug(`${this.namespace} No suitable Lua script, fallback to keys!: ${func.map}`);\n\n            let searchKeys = this.objNamespace + '*';\n            if (wildcardPos !== -1) { // Wildcard included\n                searchKeys = this.objNamespace + params.endkey.replace(/\\u9999/g, '*');\n            }\n            // todo: also use scan on fallback\n            this.client.keys(searchKeys, (err, keys) => {\n                if (!this.client) {\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n                }\n                const endAfterWildcard = params.endkey.substr(wildcardPos + 1);\n                params.startkey = this.objNamespace + params.startkey;\n                params.endkey   = this.objNamespace + params.endkey;\n\n                keys = keys.sort().filter(key => {\n                    if (key && !utils.regCheckId.test(key)) {\n                        if (params && wildcardPos > 0) {\n                            if (params.startkey && key < params.startkey) {\n                                return false;\n                            }\n                            if (params.endkey   && key > params.endkey)   {\n                                return false;\n                            }\n                        } else\n                        if (params && wildcardPos === 0) {\n                            if (!key.endsWith(endAfterWildcard)) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                this.client.mget(keys, (err, objs) => {\n                    // eslint-disable-next-line no-unused-vars\n                    function _emit_(id, obj) {\n                        result.rows.push({id: id, value: obj});\n                    }\n\n                    const f = eval('(' + func.map.replace(/^function\\(([a-z0-9A-Z_]+)\\)/g, 'function($1, emit)') + ')');\n\n                    objs = objs || [];\n                    for (let i = 0; i < keys.length; i++) {\n                        try {\n                            objs[i] = JSON.parse(objs[i]);\n                        } catch (e) {\n                            this.log.error(this.namespace + ' Cannot parse JSON ' + keys[i] + ':  ' + objs[i]);\n                            continue;\n                        }\n                        if (!utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\n                            continue;\n                        }\n\n                        if (objs[i]) {\n                            try {\n                                f(objs[i], _emit_);\n                            } catch (e) {\n                                this.log.error(this.namespace + ' Cannot execute map: ' + e.message);\n                            }\n                        }\n                    }\n                    // Calculate max\n                    if (func.reduce === '_stats') {\n                        let max = null;\n                        for (let i = 0; i < result.rows.length; i++) {\n                            if (max === null || result.rows[i].value > max) {\n                                max = result.rows[i].value;\n                            }\n                        }\n                        if (max !== null) {\n                            result.rows = [{id: '_stats', value: {max: max}}];\n                        } else {\n                            result.rows = [];\n                        }\n                    }\n                    typeof callback === 'function' && callback(null, result);\n                });\n            });\n        }\n    }\n\n    _applyView(func, params, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this._applyView(func, params, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && callback(err);\n                } else {\n                    return this._applyViewFunc(func, params, options, callback);\n                }\n            });\n        }\n    }\n\n    _getObjectView(design, search, params, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        this.client.get(this.objNamespace + '_design/' + design, (err, obj) => {\n            if (obj) {\n                try {\n                    obj = JSON.parse(obj);\n                } catch (e) {\n                    this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\n                    return typeof callback === 'function' && callback(new Error('Cannot parse JSON: \"' + '_design/' + design + '\" / \"' + obj + '\"'));\n                }\n\n                if (obj.views && obj.views[search]) {\n                    this._applyViewFunc(obj.views[search], params, options, callback);\n                } else {\n                    this.log.error(`${this.namespace} Cannot find search \"${search}\" in \"${design}\"`);\n                    typeof callback === 'function' && callback(new Error('Cannot find search \"' + search + '\" in \"' + design + '\"'));\n                }\n            } else {\n                this.log.error(`${this.namespace} Cannot find view \"${design}\" for search \"${search}\" : ${err}`);\n                typeof callback === 'function' && callback(new Error('Cannot find view \"' + design + '\"'));\n            }\n        });\n    }\n\n    getObjectView(design, search, params, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjectView(design, search, params, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjectView(design, search, params, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectViewAsync(design, search, params, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjectView(design, search, params, options, (err, arr) =>\n                err ? reject(err) : resolve(arr)));\n    }\n\n    _getObjectList(params, options, callback) {\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        //params = {startkey, endkey, include_docs}\n        params = params || {};\n        params.startkey = params.startkey || '';\n        params.endkey = params.endkey || '\\u9999';\n        const pattern = (params.endkey.substring(0, params.startkey.length) === params.startkey) ? this.objNamespace + params.startkey + '*' : this.objNamespace + '*';\n\n        // todo: use lua script for this\n        this.client.keys(pattern, (err, keys) => {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const _keys = [];\n            for (let i = 0; i < keys.length; i++) {\n                const id = keys[i].substring(this.objNamespaceL);\n                if (params.startkey && id < params.startkey) {\n                    continue;\n                }\n                if (params.endkey && id > params.endkey) {\n                    continue;\n                }\n                if (!id || utils.regCheckId.test(id) || id.match(/\\|file\\$%\\$/)) {\n                    continue;\n                }\n                if (!params.include_docs && id[0] === '_') {\n                    continue;\n                }\n                _keys.push(keys[i]);\n            }\n            _keys.sort();\n            this.client.mget(_keys, (err, objs) => {\n                // return rows with id and doc\n                const result = {\n                    rows: []\n                };\n                if (objs) {\n                    for (let r = 0; r < objs.length; r++) {\n                        try {\n                            objs[r] = JSON.parse(objs[r]);\n                        } catch (e) {\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[r]}: ${objs[r]}`);\n                            continue;\n                        }\n\n                        if (!objs[r] || !utils.checkObject(objs[r], options, utils.CONSTS.ACCESS_READ)) {\n                            continue;\n                        }\n                        result.rows.push({id: objs[r]._id, value: objs[r], doc: objs[r]});\n                    }\n                }\n                typeof callback === 'function' && callback(null, result);\n            });\n        });\n    }\n\n    getObjectList(params, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.getObjectList(params, options, (err, obj) =>\n                    err ? reject(err) : resolve(obj)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._getObjectList(params, options, callback);\n                }\n            });\n        }\n    }\n\n    getObjectListAsync(params, options) {\n        return new Promise((resolve, reject) =>\n            this.getObjectList(params, options, (err, arr) =>\n                err ? reject(err) : resolve(arr)));\n    }\n\n    // could be optimised, to read object only once. Now it will read 3 times\n    _extendObject(id, obj, options, callback, _iteration) {\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\n        }\n        if (!this.client) {\n            return typeof callback === 'function' && setImmediate (() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        }\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\n            try {\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\n            } catch (e) {\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${oldObj}`);\n                oldObj = null;\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n            }\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\n            }\n\n            let _oldObj;\n            if (oldObj && oldObj.nonEdit) {\n                // copy object\n                _oldObj = deepClone(oldObj);\n            }\n\n            oldObj = oldObj || {};\n            oldObj = extend(true, oldObj, deepClone(obj)); // copy here to prevent \"sandboxed\" objects from JavaScript adapter\n            oldObj._id = id;\n\n            // add user default rights\n            if (this.defaultNewAcl && !oldObj.acl) {\n                oldObj.acl = deepClone(this.defaultNewAcl);\n                delete oldObj.acl.file;\n                if (oldObj.type !== 'state') {\n                    delete oldObj.acl.state;\n                }\n\n                if (options.owner) {\n                    oldObj.acl.owner = options.owner;\n\n                    if (!options.ownerGroup) {\n                        oldObj.acl.ownerGroup = null;\n                        return this.getUserGroup(options.owner, (user, groups /*, permissions */) => {\n                            if (!groups || !groups[0]) {\n                                options.ownerGroup = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\n                            } else {\n                                options.ownerGroup = groups[0];\n                            }\n                            this._extendObject(id, obj, options, callback);\n                        });\n                    }\n                }\n            }\n\n            if (this.defaultNewAcl && options.ownerGroup && oldObj.acl && !oldObj.acl.ownerGroup) {\n                oldObj.acl.ownerGroup = options.ownerGroup;\n            }\n\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\n                if (typeof obj.common.alias.id === 'object') {\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                } else {\n                    if (typeof obj.common.alias.id !== 'string') {\n                        return typeof callback === 'function' && callback('Invalid alias ID');\n                    }\n\n                    if (obj.common.alias.id.startsWith('alias.')) {\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\n                    }\n                }\n            }\n\n            if (_oldObj && !tools.checkNonEditable(_oldObj, oldObj)) {\n                return typeof callback === 'function' && callback('Invalid password for update of vendor information');\n            }\n            const message = JSON.stringify(oldObj);\n            this.client.set(this.objNamespace + id, message, err => {\n                if (!err) {\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\n                    this.client.publish(this.objNamespace + id, message)\n                        .catch(_err => {});\n                    // extended -> if its now type meta and currently marked as not -> cache\n                    if (this.existingMetaObjects[id] === false && oldObj && oldObj.type === 'meta') {\n                        this.existingMetaObjects[id] = true;\n                    }\n                }\n                typeof callback === 'function' && callback(err, {id: id, value: oldObj}, id);\n            });\n        });\n    }\n\n    extendObject(id, obj, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.extendObject(id, obj, options, (err, res) =>\n                    err ? reject(err) : resolve(res)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                return this._extendObject(id, obj, options, callback);\n            }\n        });\n    }\n\n    extendObjectAsync(id, obj, options) {\n        return new Promise((resolve, reject) =>\n            this.extendObject(id, obj, options, (err, res) =>\n                err ? reject(err) : resolve(res)));\n    }\n\n    setConfig(id, obj, options, callback) {\n        return this.setObject(id, obj, options, callback);\n    }\n\n    delConfig(id, options, callback) {\n        return this.delObject(id, options, callback);\n    }\n\n    getConfig(id, options, callback) {\n        return this.getObject(id, options, callback);\n    }\n\n    getConfigs(keys, options, callback, dontModify) {\n        return this.getObjects(keys, options, callback, dontModify);\n    }\n\n    _findObject(idOrName, type, options, callback) {\n        this._getObject(idOrName, options, (err, obj) => {\n            // Assume it is ID\n            if (obj && utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ) && (!type || (obj.common && obj.common.type === type))) {\n                typeof callback === 'function' && callback(null, idOrName, obj.common.name);\n            } else {\n                this._getKeys('*', options, (err, keys) =>\n                    this.client.mget(keys, (err, objs) => {\n                        objs = objs || [];\n                        // Assume it is name\n                        for (let i = 0; i < keys.length; i++) {\n                            try {\n                                objs[i] = JSON.parse(objs[i]);\n                            } catch (e) {\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\n                                continue;\n                            }\n                            if (objs[i].common &&\n                                objs[i].common.name === idOrName &&\n                                (!type || (objs[i].common && objs[i].common.type === type))) {\n                                return typeof callback === 'function' && callback(null, objs[i]._id, idOrName);\n                            }\n                        }\n                        typeof callback === 'function' && callback(null, null, idOrName);\n                    }), true);\n            }\n        });\n    }\n\n    findObject(idOrName, type, options, callback) {\n        if (typeof type === 'function') {\n            callback = type;\n            options = null;\n            type = null;\n        }\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        if (!callback) {\n            return new Promise((resolve, reject) =>\n                this.findObject(idOrName, type, options, (err, id, _idOrName) =>\n                    err ? reject(err) : resolve(id)));\n        }\n\n        if (options && options.acl) {\n            options.acl = null;\n        }\n\n        if (typeof callback === 'function') {\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_LIST, (err, options) => {\n                if (err) {\n                    typeof callback === 'function' && setImmediate(() => callback(err));\n                } else {\n                    return this._findObject(idOrName, type, options, callback);\n                }\n            });\n        }\n    }\n\n    findObjectAsync(idOrName, type, options) {\n        return new Promise((resolve, reject) =>\n            this.findObject(idOrName, type, options, (err, id, _idOrName) =>\n                err ? reject(err) : resolve(id)));\n    }\n\n    // can be called only from js-controller\n    addPreserveSettings(settings) {\n        if (!Array.isArray(settings)) {\n            settings = [settings];\n        }\n\n        for (let s = 0; s < settings.length; s++) {\n            if (this.preserveSettings.indexOf(settings[s]) === -1) {\n                this.preserveSettings.push(settings[s]);\n            }\n        }\n    }\n\n    _destroyDBHelper(keys, callback) {\n        if (!keys || !keys.length) {\n            typeof callback === 'function' && callback();\n        } else {\n            if (!this.client) {\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\n            }\n            const id = keys.shift();\n            this.client.del(id, _err =>\n                setImmediate(() => this._destroyDBHelper(keys, callback)));\n        }\n    }\n\n    _destroyDB(options, callback) {\n        if (!this.client) {\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\n        } else {\n            this.client.keys(this.redisNamespace + '*', (err, keys) =>\n                this._destroyDBHelper(keys, callback));\n        }\n    }\n\n    destroyDB(options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = null;\n        }\n        options = options || {};\n\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\n            if (err) {\n                typeof callback === 'function' && setImmediate(() => callback(err));\n            } else {\n                if (!options.acl.file.write || options.user !== utils.CONSTS.SYSTEM_ADMIN_USER) {\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\n                } else {\n                    return this._destroyDB(options, callback);\n                }\n            }\n        });\n    }\n\n    destroyDBAsync(options) {\n        return new Promise((resolve, reject) =>\n            this.destroyDB(options, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    // Destructor of the class. Called by shutting down.\n    destroy() {\n        this.stop = true;\n        if (this.client) {\n            try {\n                this.client.quit(() =>\n                    this.client = null);\n            } catch (e) {\n                // ignore error\n            }\n\n        }\n        if (this.sub) {\n            try {\n                this.sub.quit(() =>\n                    this.sub = null);\n            } catch (e) {\n                // ignore error\n            }\n        }\n        if (this.subSystem) {\n            try {\n                this.subSystem.quit(() =>\n                    this.subSystem = null);\n            } catch (e) {\n                // ignore error\n            }\n        }\n    }\n\n    loadLuaScripts(callback, _scripts) {\n        if (!_scripts) {\n            if (scriptFiles && scriptFiles.filter) {\n                _scripts = [];\n                for (const name in scriptFiles) {\n                    if (!scriptFiles.hasOwnProperty(name)) {\n                        continue;\n                    }\n                    const shasum = crypto.createHash('sha1');\n                    const buf = Buffer.from(scriptFiles[name]);\n                    shasum.update(buf);\n                    _scripts.push({\n                        name,\n                        text: buf,\n                        hash: shasum.digest('hex')\n                    });\n                }\n            } else {\n                _scripts = fs.readdirSync(__dirname + '/lua/').map(name => {\n                    const shasum = crypto.createHash('sha1');\n                    const script = fs.readFileSync(__dirname + '/lua/' + name);\n                    shasum.update(script);\n                    const hash = shasum.digest('hex');\n                    return {name: name.replace(/\\.lua$/, ''), text: script, hash};\n                });\n            }\n            const hashes = _scripts.map(e => e.hash);\n            hashes.unshift('EXISTS');\n\n            if (!this.client) {\n                return;\n            }\n\n            return this.client.script(hashes, (err, arr) => {\n                arr && _scripts.forEach((e, i) => _scripts[i].loaded = !!arr[i]);\n                this.loadLuaScripts(callback, _scripts);\n            });\n        }\n\n        if (!this.client) {\n            return;\n        }\n\n        for (let i = 0; i < _scripts.length; i++) {\n            if (!_scripts[i].loaded) {\n                const script = _scripts[i];\n                return this.client.script(['LOAD', script.text], (err, hash) => {\n                    script.hash = hash;\n                    script.loaded = !err;\n                    err && this.log.error(this.namespace + ' Cannot load \"' + script.name + '\": ' + err);\n                    setImmediate(() => this.loadLuaScripts(callback, _scripts));\n                });\n            }\n        }\n        this.scripts = {};\n        _scripts.forEach(e => this.scripts[e.name] = e.hash);\n        typeof callback === 'function' && callback();\n    }\n}\n\nmodule.exports = ObjectsInRedis;"],"file":"../../dist/index.js"}