{"version":3,"sources":["index.js"],"names":["_0xcdc474","require","_0x460357","_0x35e5d5","_0x4f0b3e","_0x102b2b","isDeepStrictEqual","_0x317630","_0x5d4d17","_0x9d15ab","__dirname","_0x451e9a","_0x1c9ba8","_0x3d402f","_0x263f13","_0x2aebee","_0x724f98","_0x5094b3","_0x207270","Object","_0x1b633e","Array","undefined","JSON","console","_0x508732","_0x14a2ad","_0x27aa06","_0x4eedde","_0x3a2452","_0x42d2d7","_0xeeba5b","_0x2f03e8","_0x32b39f","_0x8e45d9","_0x9c547d","_0x47f864","_0x411ccb","constructor","_0x2d9607","_0x3a8987","_0x2cef00","RegExp","_0x313aef","_0x3dc34c","_0x2400cd","_0xaa4c31","_0x288f9c","_0x3d30c2","_0x1a2603","_0x566b81","Error","_0x48f97d","_0xf55998","_0x522d2f","_0x1548d7","_0x59f9cc","_0x356a16","_0x2a4967","_0x52b6c5","_0x295dd9","_0x1d407e","_0x35b727","setImmediate","_0x560249","_0x469262","_0x420600","_0x2b2edb","_0x266ed1","_0x387638","_0x4431a6","_0x569a3e","_0x33a307","_0x2d37c8","_0x33430e","_0x59e747","_0x39480f","_0x243632","_0x306e6f","_0x156d76","_0x59091d","_0x399ebf","_0x6d9754","_0x32219c","_0x277114","_0x1d0821","Promise","_0xb8c00","_0x1f9020","_0x307798","_0xc3f429","Buffer","_0x56ac23","_0x3c3b72","_0x1f2a2b","_0x9f108a","_0x4b244b","_0x33e93","_0x235697","_0x7a027e","_0x3d8405","_0x123856","_0xa2e2c","_0x8b129d","_0x18454d","_0x2598a4","_0x4912ff","_0x55ac86","_0x2a0e97","_0x147837","_0x34d136","_0x4800ff","_0x959959","_0x2d815d","_0x5cd0f6","_0x320802","_0x8b7312","_0x17d275","_0x2e2ad0","_0x3174cd","_0x5ae7e0","_0x205e76","_0x304174","_0x1d412c","_0x2fff8e","_0x30b00a","_0x39e0c9","_0x21b42f","_0x3cf573","_0x3b9c6a","_0x150a56","_0x240d3f","_0x6c3722","_0x31d0c8","_0x57fa46","_0x56655e","_0x28e9a8","_0xe3e1dd","_0x1f2f88","_0x1be201","_0x391dc1","_0x3f6090","_0x2a8dec","_0x1d14b7","_0x5319b5","_0x5d5995","_0x3cdcf9","_0x2cb7db","_0x29d101","Date","_0x19b760","_0x229f80","_0x407d2f","_0x4aa96a","_0x26df24","_0x2eb943","_0x40c160","_0x4fa333","_0x1edb97","_0x430650","_0x17902b","_0x444ecb","_0x2af2ab","_0x253afa","_0x2ecb4c","_0x15802c","_0x30e2dc","_0x2cc11d","_0x55947f","_0x494e2f","_0xf44175","_0x1c1b86","_0x38f607","_0x3205e9","_0x36549b","_0x22994c","_0x51b529","_0x57bf6e","_0x32706c","_0x391da2","_0x2aa03b","_0x2a1d4e","_0x2449f5","_0x4e0245","_0x184532","_0x242062","_0x6a0265","_0x187d2e","_0x5c0a55","_0x36ebd8","_0x2abf7d","_0x576b07","_0x4b3509","_0x45dd1e","_0x115f58","_0x3e1c84","_0x95cbbf","_0x50402b","_0x3edfe7","_0x4415df","_0x23dc5b","_0x1fb832","_0x40244d","_0x3add90","_0x2d9675","_0x21fb65","_0x2f9d22","_0x10321f","_0x14ecd2","_0xf4e90","_0x1262ba","_0xc6c67b","_0x1ed919","_0x1d8bab","_0x5a1fd2","_0x441374","_0x588916","_0x818c7c","_0x31badf","_0x4156ea","_0x43c68f","_0x519ca9","_0x3f9320","_0x25f49d","_0x23be64","_0x351077","_0x3e2dee","_0x2a50b3","_0x26597c","_0x2527aa","_0x25609b","_0xeab015","_0x1355d9","_0xda9481","_0x4bcd52","_0x5891d9","_0x50d4e5","_0x5d6d65","_0x34467a","_0xfdc56b","_0x578085","_0x4c38f8","_0x1d6240","_0x46d1b9","_0x225b14","_0x515e9a","_0x51e325","_0x544a56","_0x344138","_0x27c8aa","_0x1b37ad","_0x5678cb","_0x4893c6","_0x1432f4","_0x65503e","_0x506bfe","_0x69e005","_0x367915","_0x379307","_0x1bad84","_0x330f12","_0xddc777","_0xe91702","_0x37c57d","_0x28079e","_0xd69c7e","_0x53c087","_0x1afa55","_0x3e406f","_0x48ed7e","_0x5b0d93","_0x4aa4b7","_0x4a30bb","_0xe9420b","_0x4b8a26","_0x4457ad","_0x492473","_0x51c9f5","_0x2aa01d","_0x30a203","_0x4eab23","_0x4c670a","_0x1fe8ba","_0x3672de","_0x35ca94","_0x1b0b85","_0x5b8b1e","_0x55d44c","_0x281082","_0x222d2a","_0x19302e","_0x38a630","_0x4d3593","_0x19d354","_0x4f353f","_0x5bcf12","_0x55aea3","_0xc66b77","_0x1d2cd8","_0x91dd8e","_0x6d7832","_0x2b8df1","_0x31cf15","_0xec4b6e","_0x420ca9","_0x383889","_0x693424","_0x2499c0","_0x4a0823","_0x435cdf","_0x36ccb3","_0x5d5151","_0x3489e9","_0x455949","_0x39438a","_0x132d8b","_0x5acb1e","_0x486851","_0x108b62","_0x587906","_0x5ed7f1","_0x38f9c5","_0x293ab6","_0x21a9bb","_0x22f8e6","_0x63f2bb","_0x56e4bb","_0x3c3bcf","_0x2eef5c","_0x211bbe","_0x1a78fc","_0x1c1f70","_0x51ae07","_0x605dc6","_0x3417e2","_0x2b2e5a","_0x2c5238","_0x1c867b","_0x4df2ec","_0x1d7717","_0x58072d","_0x4eb5f4","_0x353b42","_0x239d84","_0x48fc22","_0x514f08","_0x34c09f","_0x611871","_0x1f2e63","_0x2c0a7b","_0x2204d4","_0x2f6194","_0x806e23","_0x196bd6","_0xa6acdc","_0x202222","_0xccb565","_0x3a91ba","_0x48ff0b","_0x12569e","_0x2c820b","_0x110dfb","_0x4b7c1d","_0x1ae366","_0x231d8e","_0xce073","_0x2d7700","_0x456088","_0x1c0a3c","_0x33e6df","_0x175d57","_0xd2033e","_0x3dee0d","_0xdc5c1d","_0x1c7fae","_0x3cbcc3","_0x4f5f8c","_0x1de7c9","_0x3f5c52","_0x6f64ae","_0x22bc37","_0x533686","_0x3c0b57","_0x3e4b30","_0x1f3f3a","_0x2d49ad","_0x1bed47","_0xf5711c","_0x4326a0","_0x128c86","_0x58efff","_0x236be9","_0xc23cda","_0x4ac963","_0x1f4985","_0x1f052f","_0x5d401a","_0x3b3777","_0x16cb8e","_0x177ddd","_0x3156f8","_0x6857bd","_0x3bef7","_0x39c406","_0x244754","_0x4f5c4e","_0x19d752","_0x30a869","_0x36420b","_0x309619","_0xba1e2e","_0x4c090c","_0x26ca7e","_0x447326","_0x297061","_0x59473d","_0x177928","_0x3700d0","_0xa46edf","_0x1d27fb","_0x441283","_0x1ac5b1","_0x6c300e","_0x5827be","_0x363e0b","_0x1b9cbb","_0xfa1022","_0x49a95c","_0x3a4c6f","_0x3526df","_0x28768d","_0x84da91","_0x4db059","_0x5a0f57","_0x5b04cb","_0x3e1ff7","_0x42361e","_0x56c2ba","_0x338836","_0x476f7a","_0x172192","_0x5e9874","_0x577d43","_0x48f8f1","_0x4c8e18","_0x1380a1","_0x1889a1","_0x28e8b5","_0x93bd21","_0x394375","_0x68e62","_0x58e99e","_0x47d973","_0x21fa13","_0x46ad39","_0x4dd2e5","_0x287ff0","_0xf8c0b3","_0x5e8f11","_0x48ddee","_0x10eda2","_0x2caab6","_0x2fc432","_0x44d577","_0x29ce4c","_0xd452e8","_0x14a842","_0x1b91ec","_0x36faae","_0x1d50f7","_0x412427","_0x22e314","_0x27ebdb","_0x65255e","_0x13e8bb","_0x1cb8cf","_0x4a6d54","_0x3e07c6","parseInt","_0x582f92","_0x57ec78","_0x2e7eb1","_0x4839ff","_0x4895f6","_0x1fe7be","_0x2fa606","_0x36dd3f","_0xda14a9","_0xc4f4f9","_0x3bc287","_0x772d15","_0x2dae73","_0x9f423f","_0x4f3236","_0x1ad674","_0x2ea543","_0x2918b5","_0x2a6695","_0x10e6e3","_0x421c6f","_0x3fbf0e","_0x4d8c83","_0x189c3d","_0x390f04","_0x19842e","_0x2fa259","_0xa4045","_0x59623f","_0xdc9c33","_0x48c0db","_0xfc0349","_0x29ac02","_0x5d7f39","_0x11625c","_0x9745ea","_0x345bfd","_0x51f9c3","_0x4236a7","_0x3abc14","_0x51476d","_0x70e4bd","_0x1d896c","_0xf3ed3f","_0x42f035","_0x31364d","_0x28e465","_0xdb0711","_0x46eff3","_0x3a3827","_0x253de1","_0x149325","_0x115620","_0x4cbc23","_0x4a07f1","_0x27da26","_0x110dac","_0x1f50b0","_0x17fdd8","_0x132313","_0x23a5e8","_0xd10b3e","_0x1d1204","_0x30b0dc","_0x538096","_0xbb1d75","_0xccc314","_0x25e30a","_0x532482","_0x348f58","_0x5900bd","_0x3e150d","_0x30d1ee","_0x436d2a","_0xd59b44","_0x1267b0","_0x5b7d61","_0x22af2f","_0x4654fe","_0x4d3e29","_0x306ad8","_0x5ef3b7","_0xdf3b23","_0x2df8dc","_0x48afa7","_0x5108e3","_0x5bd7f3","_0x8591","_0x2808aa","_0x5ab7f1","_0x58443a","_0x279ad2","_0x2a4b66","_0x189f3e","_0x2da1fb","_0x1a5bd2","_0x177363","_0x5c1a94","_0x32ea03","_0x1efb91","_0xe56abd","_0x41b708","_0x391dc4","_0x3fad51","_0x3fc22d","_0x554d82","_0x3add2b","_0x3695ef","_0x204f26","_0x39c246","_0x54f60c","_0x53ca47","_0x564c4a","_0x289658","_0x2c56fe","_0xfb65d5","_0x10aa41","_0x56f14d","_0x522839","_0x4fbe09","_0x4de4ea","_0x1e8a02","_0x2fe5f2","_0x87ab8d","_0x3ed987","_0x206142","_0x1ff4ca","_0x390925","_0x2c66a4","_0x28ec40","_0x373c0b","_0x35342c","_0x212854","_0x19fc7b","_0x510539","_0x3dcbe2","_0x59f8ef","_0x4b770e","_0x12428d","_0x211213","_0x156777","_0x39ac33","_0x4ec53e","_0x5b1a7b","_0x48a027","_0x1225fc","_0x23a69f","_0x56f86b","_0x531019","_0x1bd5d3","_0x5306f1","_0x178846","_0x2b233a","_0xad902f","_0xd823cf","_0x549412","_0x185eda","_0x87b0f9","_0x5dff67","_0x228b3a","_0x1fd621","_0x3bc3e8","_0xb06542","_0x30e65b","_0x2a4032","_0x21eb5b","_0x335cb1","_0x41aad6","_0x54d735","_0xf688be","_0x10a4b2","_0x40092e","_0x47783f","_0x2e166a","_0x2b31d7","_0x1d6a0a","_0xc445fb","_0xdfba8a","_0xbbc952","_0x27bfc3","_0x2757b4","_0x3919f5","_0x33d265","_0x193f5c","_0x5d1788","_0x18f651","_0x49ac56","_0x2dfc87","_0xe381c8","_0x2ed2d6","_0x30f7a3","_0x124528","_0x529443","_0x36463d","_0x35c2d0","_0x5b9404","_0x385552","_0x28c1eb","_0x3fba47","_0x30414c","_0x18ff37","_0x38073e","_0x161fce","_0x31955f","_0x1ebb73","_0x2933ed","_0x4008c3","_0x3a0b1c","_0x3a1ff4","_0x1f25fb","_0x3a64fc","_0x51ab76","_0x3881a8","_0x1a63e9","_0x335561","_0xdb17ab","_0x26310a","_0x4eaff7","_0x4af52b","_0x259655","_0x356732","_0x4be344","_0x55fe9a","_0x44b232","_0x2029f3","_0x33ac30","_0x10a343","_0x42ec6d","_0x224656","_0x113eb4","_0x53b372","_0x57924b","_0x570b8a","_0xabb469","_0x69804e","_0x24eec2","_0x40c43a","_0x160af7","_0x168c32","_0x57d090","_0xf5a25b","_0x121a36","_0x27324c","_0x2e459f","_0xc711a5","_0x1be0cc","_0x2f4c39","_0x2a55ab","_0x52d792","_0x3207c1","_0x5106c2","_0x50f923","_0x33dc8","_0x2be834","_0x3c972a","_0x5a078d","_0x17f2eb","_0x521577","_0x1df381","_0xef8330","_0x24cea0","_0x6d6c0c","_0x1c6dcc","_0xead109","_0x602642","_0x3e1819","_0x3c675f","_0x5b1544","_0x31846d","_0x1887ab","_0x3aac17","_0x296e7c","_0x599bfa","_0x20714a","_0x18db3b","_0x16c721","_0x5a04ed","_0x252734","_0x20732b","_0x1e05d4","_0x3fb605","_0x14dd7f","_0x51c68e","_0x39ea5e","_0x315319","_0x285cb6","_0x221063","_0x5b7e75","_0x4c8697","_0x4fc8d1","_0x4f0882","_0x41212f","_0x134329","_0x446a57","_0x4e607d","_0x357ca4","_0x3f1da7","_0x12d488","_0x5a9e0f","_0x1b4d1a","_0x4c8796","_0x2314be","_0x33c0ab","_0x2337b8","_0x3c2c8c","_0x163173","_0x49add5","_0x2ee953","_0x6a4f91","_0x1e9d5b","_0x46001a","_0x1adf7b","_0x2ce353","_0x2726f2","_0x3c95e7","_0x5b6e4c","_0x450daf","_0x57609a","_0x410e45","_0x16406c","_0x37a513","_0x50ce9e","_0x542700","_0x2ce83a","allback","_0x44f287","_0x3efb88","_0x45fd2","_0x9fc569","_0x5735bd","_0xb1038c","_0x2fff0c","_0x21a404","_0x32100a","_0x921f7b","_0x396f4f","_0x32c052","_0xfb43f5","_0x44069d","_0x136e45","_0x31536d","_0x2e855b","_0x3a2855","_0x2e1355","_0x57f8ca","_0x5a9a1e","_0x37f509","_0x9762e0","_0x304458","_0x550cb0","_0x310acc","_0x5d5bea","_0xe17f02","_0x44302b","_0x51ea25","_0x1dfc6d","_0x1b77ea","_0x1e73af","_0x5284c0","_0x557f73","_0x4755aa","_0x57652c","_0x223e0b","_0x1bc5d4","_0x599f15","_0x2c0028","_0x2a8b95","eval","_0x136410","_0x295090","_0x6d7785","_0x336685","_0xa89a0","_0x5a4ec5","_0x3a28f6","_0x20d38d","_0x45a1f","_0xd306d1","_0x325820","_0x38fd85","_0x411541","_0x4f1b2b","_0x443320","_0x3c47b7","_0x2fd970","_0x35050a","_0x54ad4e","_0x320afc","_0x2d61df","_0x5f57fb","_0x5339a1","_0x576b9a","_0x535953","_0x19ee93","_0x4a0ef0","_0x2272d9","_0x457ebd","_0x1c46bf","_0x37c878","_0x4c5b35","_0x593e23","_0x3dac14","_0x4f365d","_0x40b638","_0x492591","_0x29f55c","_0x224b14","_0x5ecc25","_0x56b403","_0x3b05dc","_0x14543a","_0x13e132","_0x45d6bf","_0x80ad65","_0x1e66f6","_0x4d29d3","_0x21a8d9","_0x449434","_0x2fc5be","_0xde84d0","_0x9b9abf","_0x230e72","_0x1c17d3","_0x23c503","_0xcc854","_0x2b0c48","_0x515525","_0x2ade2a","_0x336c9c","_0x5655fe","_0x587f79","_0x1e6b83","_0x2439ec","_0x58df9d","_0x415343","_0x17224d","_0x3d5f1f","_0x5a907d","_0x1b2ecf","_0x2b51e0","_0x577daa","_0x8bd186","_0x57e8b7","_0x2a13dc","_0x268b3c","_0x33e97b","_0xaa14c0","_0x37626d","_0x47c320","_0x2bfe80","_0x3ec168","_0x4902a1","_0x2c33cb","_0x43130f","_0x1a2a20","_0x49268f","_0x416460","_0x5157ab","_0x7a4d62","_0x18ff88","_0x1c3e0b","_0x4ebc3d","_0x476893","_0x426b5c","_0x432993","_0x210ac1","_0x35e39a","_0x522a62","_0x2e7fc6","_0x57ab60","_0x841720","_0x2416ab","_0x4383a6","_0x1aa28c","_0x339d5f","_0x1168b8","_0x3fa1db","_0x22a71d","_0x274e89","_0x16ad38","_0x219ca4","_0x317441","_0x9d5aa4","_0x52bb13","_0x50abd8","_0x373432","_0x5a42e5","_0x460e2c","_0x35081c","_0x2338c4","_0x455a32","_0xabb794","_0x3914d0","_0x28629f","_0x97cb09","_0x5bc5a4","_0x2a733b","_0x496a47","_0x396ab0","_0x1e1a54","_0x5c30d3","_0x176ef3","_0x4b4b42","_0x694aed","_0x4d1d04","_0x5f2542","_0x236896","_0x53b526","_0x29e0d0","_0x5d0f6f","_0xa4f4fc","_0x562379","_0x381b10","_0xa7163d","_0x36677b","_0x32a94e","_0x587db4","_0x4e1cd6","_0xd0941a","_0x589c07","_0x28ef43","_0x555279","_0x44d151","_0x383239","_0x34385e","_0x57788a","_0x18ccf9","_0x3a0be5","_0xa6a814","_0x35e501","_0x2b7919","_0x16a2e1","_0x3dc44b","_0x47d62d","_0x256528","_0x1de8f7","_0x587de0","_0xf11b7","_0x3bacee","_0x1d17f3","_0x3ff619","_0xe5f8f8","_0x5b7a87","_0xa2ef2c","_0x49d765","_0x306ef2","_0x37147b","_0xe16f28","_0x34e6fa","_0x2c7d1e","_0xa9985","_0x368ebe","_0x121357","_0x4b3199","_0xb87fe7","_0x474f3a","module"],"mappings":"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","sourcesContent":["/**\r\n * Object DB in REDIS - Client\r\n *\r\n * Copyright (c) 2018-2020 ioBroker GmbH - All rights reserved.\r\n *\r\n * You may not to use, modify or distribute this package in any form without explicit agreement from ioBroker GmbH.\r\n *\r\n * Unauthorized using, modifying or copying of this file, via any medium is strictly prohibited.\r\n * Proprietary and confidential\r\n * Written by bluefox <dogafox@gmail.com>, 2014-2019\r\n *\r\n */\r\n/* jshint -W097 */\r\n/* jshint strict: false */\r\n/* jslint node: true */\r\n/* jshint -W061 */\r\n'use strict';\r\n\r\nconst extend                = require('node.extend');\r\nconst Redis                 = require('ioredis');\r\n\nconst fs                    = require('fs');\r\nconst path                  = require('path');\r\nconst crypto                = require('crypto');\r\nconst { isDeepStrictEqual } = require('util');\r\nconst deepClone             = require('deep-clone');\r\n\r\nconst utils                 = require(path.join(getControllerDir() || __dirname, 'objectsUtils.js'));\r\n\r\n// copied from tools.js\r\n/**\r\n * Converts ioB pattern into regex.\r\n * @param {string} pattern - Regex string to us it in new RegExp(pattern)\r\n * @returns {string}\r\n */\r\nfunction pattern2RegEx(pattern) {\r\n    pattern = (pattern || '').toString()\r\n        .replace(/\\$/g, '\\\\$')\r\n        .replace(/\\^/g, '\\\\^');\r\n\r\n    if (pattern !== '*') {\r\n        if (pattern[0] === '*' && pattern[pattern.length - 1] !== '*') pattern += '$';\r\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] === '*') pattern = '^' + pattern;\r\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] !== '*') pattern = '^' + pattern + '$';\r\n    }\r\n\r\n    pattern = pattern\r\n        .replace(/\\?/g, '\\\\?')\r\n        .replace(/\\./g, '\\\\.')\r\n        .replace(/\\(/g, '\\\\(')\r\n        .replace(/\\)/g, '\\\\)')\r\n        .replace(/\\[/g, '\\\\[')\r\n        .replace(/]/g, '\\\\]')\r\n        .replace(/\\*/g, '.*');\r\n\r\n    return pattern;\r\n}\r\n\r\nlet crypto_;\r\n\r\n/**\r\n * recursively copy values from old object to new one\r\n *\r\n * @alias copyAttributes\r\n * @memberof tools\r\n * @param {object} oldObj source object\r\n * @param {object} newObj destination object\r\n * @param {object} [originalObj] optional object for read __no_change__ values\r\n * @param {boolean} [isNonEdit] optional indicator if copy is in nonEdit part\r\n *\r\n */\r\nfunction copyAttributes(oldObj, newObj, originalObj, isNonEdit) {\r\n    Object.keys(oldObj).forEach(attr => {\r\n        if (typeof oldObj[attr] !== 'object' || oldObj[attr] instanceof Array) {\r\n            if (oldObj[attr] === '__no_change__' && originalObj && !isNonEdit) {\r\n                if (originalObj[attr] !== undefined) {\r\n                    newObj[attr] = JSON.parse(JSON.stringify(originalObj[attr]));\r\n                } else {\r\n                    console.log(`Attribute ${attr} ignored by copying`);\r\n                }\r\n            } else\r\n            if (oldObj[attr] === '__delete__' && !isNonEdit) {\r\n                if (newObj[attr] !== undefined) {\r\n                    delete newObj[attr];\r\n                }\r\n            } else {\r\n                newObj[attr] = oldObj[attr];\r\n            }\r\n        } else {\r\n            newObj[attr] = newObj[attr] || {};\r\n            copyAttributes(oldObj[attr], newObj[attr], originalObj && originalObj[attr], isNonEdit || attr === 'nonEdit');\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Checks the flag nonEdit and restores non-changeable values if required\r\n *\r\n * @alias checkNonEditable\r\n * @memberof tools\r\n * @param {object} oldObject source object\r\n * @param {object} newObject destination object\r\n *\r\n */\r\nfunction checkNonEditable(oldObject, newObject) {\r\n    if (!oldObject) {\r\n        return true;\r\n    } else\r\n    if (!oldObject.nonEdit && !newObject.nonEdit) {\r\n        return true;\r\n    }\r\n\r\n    // if nonEdit is protected with password\r\n    if (oldObject.nonEdit && oldObject.nonEdit.passHash) {\r\n        // If new Object wants to update the nonEdit information\r\n        if (newObject.nonEdit && newObject.nonEdit.password) {\r\n            crypto_ = crypto_ || require('crypto');\r\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\r\n            if (oldObject.nonEdit.passHash !== hash) {\r\n                delete newObject.nonEdit;\r\n                return false;\r\n            } else {\r\n                oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\r\n                delete oldObject.nonEdit.password;\r\n                delete newObject.nonEdit.password;\r\n                oldObject.nonEdit.passHash = hash;\r\n                newObject.nonEdit.passHash = hash;\r\n            }\r\n            copyAttributes(newObject.nonEdit, newObject, newObject);\r\n\r\n            if (newObject.passHash) {\r\n                delete newObject.passHash;\r\n            }\r\n            if (newObject.nonEdit && newObject.nonEdit.password) {\r\n                delete newObject.nonEdit.password;\r\n            }\r\n\r\n            return true;\r\n        } else {\r\n            newObject.nonEdit = oldObject.nonEdit;\r\n        }\r\n\r\n    } else if (newObject.nonEdit) {\r\n        oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\r\n        if (newObject.nonEdit.password) {\r\n            crypto_ = crypto_ || require('crypto');\r\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\r\n            delete oldObject.nonEdit.password;\r\n            delete newObject.nonEdit.password;\r\n            oldObject.nonEdit.passHash = hash;\r\n            newObject.nonEdit.passHash = hash;\r\n        }\r\n    }\r\n\r\n    // restore settings\r\n    copyAttributes(oldObject.nonEdit, newObject, oldObject);\r\n\r\n    if (newObject.passHash) {\r\n        delete newObject.passHash;\r\n    }\r\n    if (newObject.nonEdit && newObject.nonEdit.password) {\r\n        delete newObject.nonEdit.password;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst tools       = {\r\n    checkNonEditable,\r\n    pattern2RegEx\r\n};\n\nconst scriptFiles = {};\r\nscriptFiles.custom = '-- design: custom\\n-- search: state\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc.type===\"state\" && (doc.common.custom || doc.common.history))\\n--          emit(doc._id, doc.common.custom || doc.common.history)\\n--   }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.type == \"state\" and decoded.common ~= nil and decoded.common.custom ~= nil) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.filter = '-- func: function(doc) { if (doc.type === \"%1\") emit(doc._id, doc); }\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[5];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal type=KEYS[4]\\nlocal obj\\nlocal decoded\\n-- function(doc) { if (doc.type === \"chart\") emit(doc._id, doc); }\\nfor _,key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        obj = redis.call(\"get\", key)\\n        if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded and decoded.type == type) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n    end\\nend\\nreturn {rep, cursor}';\nscriptFiles.programs = '-- design: hm-rega\\n-- search: programs\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"PROGRAM\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and decoded.native.TypeName == \"PROGRAM\") then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.script = '-- design: script\\n-- search: javascript\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\n--  function(doc) {\\n--      if (doc.type === \"script\" && doc.common.engineType.match(/^[jJ]ava[sS]cript|^[cC]offee[sS]cript|^[tT]ype[sS]cript|^Blockly/)) emit(doc.common.name, doc); }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t\tif (obj ~= nil and obj ~= \"\" and cjson.decode(obj).type == \"script\") then\\n            rep[#rep+1] = obj\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.variables = '-- design: hm-rega\\n-- search: variables\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"ALARMDP\" || doc.native.TypeName === \"VARDP\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and (decoded.native.TypeName == \"ALARMDP\" or decoded.native.TypeName == \"VARDP\")) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\n\r\nfunction getControllerDir() {\r\n    const possibilities = ['iobroker.js-controller', 'ioBroker.js-controller'];\r\n    let controllerPath = null;\r\n    for (const pkg of possibilities) {\r\n        try {\r\n            const possiblePath = require.resolve(pkg);\r\n            if (fs.existsSync(possiblePath)) {\r\n                controllerPath = possiblePath;\r\n                break;\r\n            }\r\n        } catch (_a) {\r\n            /* not found */\r\n        }\r\n    }\r\n    // Apparently, checking vs null/undefined may miss the odd case of controllerPath being \"\"\r\n    // Thus we check for falsyness, which includes failing on an empty path\r\n    if (!controllerPath) {\r\n        controllerPath = path.join(__dirname, '..', '..', 'lib', 'objects');\r\n        if (!fs.existsSync(controllerPath)) {\r\n            controllerPath = null;\r\n        }\r\n    } else {\r\n        controllerPath = path.join(path.dirname(controllerPath), 'lib', 'objects');\r\n    }\r\n    return controllerPath;\r\n}\r\n\r\nclass ObjectsInRedis {\r\n\r\n    constructor(settings) {\r\n        const originalSettings = settings;\r\n        this.settings = settings || {};\r\n        this.redisNamespace = (this.settings.redisNamespace || (this.settings.connection && this.settings.connection.redisNamespace) || 'cfg') + '.';\r\n        this.fileNamespace = this.redisNamespace + 'f.';\r\n        this.fileNamespaceL = this.fileNamespace.length;\r\n        this.objNamespace = this.redisNamespace + 'o.';\r\n        this.objNamespaceL = this.objNamespace.length;\r\n        const ioRegExp = new RegExp('^' + this.objNamespace.replace(/\\./g, '\\\\.') + '[_A-Za-z0-9ÄÖÜäöüа-яА-Я]+'); // cfg.o.[_A-Za-z0-9]+\r\n\r\n        const onChange = this.settings.change; // on change handler\r\n        const onChangeUser = this.settings.changeUser; // on change handler for User events\r\n\r\n        this.stop = false;\r\n        this.client = null;\r\n        this.sub = null;\r\n        this.subSystem = null;\r\n        this.preserveSettings = ['custom', 'smartName', 'material', 'habpanel', 'mobile'];\r\n        this.defaultNewAcl = this.settings.defaultNewAcl || null;\r\n        this.namespace = this.settings.namespace || this.settings.hostname || '';\r\n        this.scripts = {};\r\n\r\n        // cached meta objects for file operations\r\n        this.existingMetaObjects = {};\r\n\r\n        this.log = utils.getLogger(this.settings.logger);\r\n\r\n        this.settings.connection = this.settings.connection || {};\r\n\r\n        // limit max number of log entries in the list\r\n        this.settings.connection.maxQueue = this.settings.connection.maxQueue || 1000;\r\n\r\n        this.settings.connection.options = this.settings.connection.options || {};\r\n        const retry_max_delay = this.settings.connection.options.retry_max_delay || 2000;\r\n        const retry_max_count = this.settings.connection.options.retry_max_count || 19;\r\n\r\n        this.settings.connection.options.retryStrategy = reconnectCount => {\r\n            if (!ready && initError && ignoreErrors) {\r\n                return new Error('No more tries');\r\n            }\r\n            if (this.stop) {\r\n                return new Error('Client has stopped ... no retries anymore');\r\n            }\r\n            if (ready && reconnectCount >= retry_max_count) {\r\n                return new Error('Stop trying to reconnect');\r\n            }\r\n            // A function that receives an options object as parameter including the retry attempt,\r\n            // the total_retry_time indicating how much time passed since the last time connected,\r\n            // the error why the connection was lost and the number of times_connected in total.\r\n            // If you return a number from this function, the retry will happen exactly after that\r\n            // time in milliseconds. If you return a non-number, no further retry will happen and\r\n            // all offline commands are flushed with errors. Return an error to return that\r\n            // specific error to all offline commands.\r\n\r\n            if (!ready) {\r\n                return 300;\r\n            } else {\r\n                return retry_max_delay;\r\n            }\r\n            /*if (options.error.code === 'ECONNREFUSED') {\r\n                // End reconnecting on a specific error and flush all commands with a individual error\r\n                return new Error('The server refused the connection');\r\n            }\r\n            if (options.total_retry_time > 1000 * 60 * 60) {\r\n                // End reconnecting after a specific timeout and flush all commands with a individual error\r\n                return new Error('Retry time exhausted');\r\n            }\r\n            if (options.times_connected > 10) {\r\n                // End reconnecting with built in error\r\n                return undefined;\r\n            }\r\n            // reconnect after\r\n            return Math.max(options.attempt * 100, 3000);*/\r\n        };\r\n\r\n        delete this.settings.connection.options.retry_max_delay;\r\n        this.settings.connection.options.enableReadyCheck = true;\r\n\r\n        let ready = false;\r\n        let initError = false;\r\n        let ignoreErrors = false;\r\n        let connected = false;\r\n        let reconnectCounter = 0;\r\n\r\n        if (this.settings.connection.port === 0) { // Port = 0 means unix socket\r\n            // initiate a unix socket connection\r\n            this.settings.connection.options.path = this.settings.connection.host;\r\n            this.log.debug(this.namespace + ' Redis Objects: Use File Socket for connection: ' + this.settings.connection.options.path);\r\n        } else if (Array.isArray(this.settings.connection.host)) { // Host is an array means we use a sentinel\r\n            const defaultPort = Array.isArray(this.settings.connection.port) ? null : this.settings.connection.port;\r\n\r\n            this.settings.connection.options.sentinels = this.settings.connection.host.map((redisNode, idx) => ({\r\n                host: redisNode,\r\n                port: defaultPort || this.settings.connection.port[idx]\r\n            }));\r\n\r\n            this.settings.connection.options.name = this.settings.connection.sentinelName ? this.settings.connection.sentinelName : 'mymaster';\r\n            this.log.debug(this.namespace + ' Redis Objects: Use Sentinel for connection: ' + this.settings.connection.options.name + ', ' + JSON.stringify(this.settings.connection.options.sentinels));\r\n        } else {\r\n            this.settings.connection.options.host = this.settings.connection.host;\r\n            this.settings.connection.options.port = this.settings.connection.port;\r\n            this.log.debug(this.namespace + ' Redis Objects: Use Redis connection: ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port);\r\n        }\r\n        this.settings.connection.options.db = this.settings.connection.options.db || 0;\r\n        this.settings.connection.options.family = this.settings.connection.options.family || 0;\r\n        this.settings.connection.options.password = this.settings.connection.pass || null;\r\n\r\n        this.settings.connection.options.autoResubscribe = false; // We do our own resubscribe because other sometimes not work\r\n\r\n        this.client = new Redis(this.settings.connection.options);\r\n\r\n        this.client.on('error', error => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Redis ERROR Objects: (' + ignoreErrors + '/' + this.stop + ') ' + error.message + ' / ' + error.stack);\r\n            if (this.stop) {\r\n                return;\r\n            }\r\n            if (!ready) {\r\n                initError = true;\r\n                // Seems we have a socket.io server\r\n                if (!ignoreErrors && error.message.startsWith('Protocol error, got \"H\" as reply type byte.')) {\r\n                    this.log.error('Socket.io Server detected. Please update to js-controller 2.0 or higher!');\r\n                }\r\n                return;\r\n            }\r\n            this.log.error(this.settings.namespace + ' ' + error.message);\r\n        });\r\n\r\n        this.client.on('end', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end (stop=' + this.stop + ')');\r\n            ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n        });\r\n\r\n        this.client.on('connect', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event connect (stop=' + this.stop + ')');\r\n            connected = true;\r\n        });\r\n\r\n        this.client.on('close', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event close (stop=' + this.stop + ')');\r\n            //if (ready && typeof this.settings.disconnected === 'function') this.settings.disconnected();\r\n        });\r\n\r\n        this.client.on('reconnecting', () => {\r\n            if (connected && !ready && !initError && !ignoreErrors) {\r\n                reconnectCounter++;\r\n            }\r\n\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')');\r\n\r\n            if (reconnectCounter > 2) { // fallback logic for nodejs <10\r\n                this.log.error('Could not connect database at ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port + ' (invalid protocol). Please make sure the configured IP and port points to a host running JS-Controller >= 2.0.');\r\n                return;\r\n            }\r\n            connected = false;\r\n            initError = false;\r\n        });\r\n\r\n        this.client.on('ready', () => {\r\n            if (this.stop) {\r\n                return;\r\n            }\r\n            initError = false;\r\n            ignoreErrors = false;\r\n\r\n            this.log.debug(this.namespace + ' Objects client ready ... initialize now');\r\n            this.client.config('set', ['lua-time-limit', 10000], err => { // increase LUA timeout TODO needs better fix\r\n                if (err) {\r\n                    this.log.warn('Unable to increase LUA script timeout: ' + err);\r\n                }\r\n                let initCounter = 0;\r\n                if (!this.subSystem && typeof onChange === 'function') {\r\n                    initCounter++;\r\n                    this.log.debug(this.namespace + ' Objects create System PubSub Client');\r\n                    this.subSystem = new Redis(this.settings.connection.options);\r\n                    this.subSystem.ioBrokerSubscriptions = {};\r\n\r\n                    if (typeof onChange === 'function') {\r\n                        this.subSystem.on('pmessage', (pattern, channel, message) =>\r\n                            setImmediate(() => {\r\n                                this.log.silly(this.namespace + ' Objects system redis pmessage ' + pattern + '/' + channel + ':' + message);\r\n                                try {\r\n                                    if (ioRegExp.test(channel)) {\r\n                                        const id = channel.substring(this.objNamespaceL);\r\n                                        try {\r\n                                            const obj = message ? JSON.parse(message) : null;\r\n\r\n                                            if (this.settings.controller &&\r\n                                                id === 'system.config' &&\r\n                                                obj &&\r\n                                                obj.common &&\r\n                                                obj.common.defaultNewAcl &&\r\n                                                !isDeepStrictEqual(obj.common.defaultNewAcl, this.defaultNewAcl)) {\r\n                                                this.defaultNewAcl = JSON.parse(JSON.stringify(obj.common.defaultNewAcl));\r\n                                                this.setDefaultAcl(this.defaultNewAcl);\r\n                                            }\r\n\r\n                                            onChange(id, obj);\r\n                                        } catch (e) {\r\n                                            this.log.warn(`${this.namespace} Objects Cannot process system pmessage ${id} - ${message}: ${e.message}`);\r\n                                            this.log.warn(`${this.namespace} ${e.stack}`);\r\n                                        }\r\n                                    } else {\r\n                                        this.log.warn(`${this.namespace} Objects Received unexpected system pmessage: ${channel}`);\r\n                                    }\r\n                                } catch (e) {\r\n                                    this.log.warn(this.namespace + ' Objects system pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\r\n                                    this.log.warn(this.namespace + ' ' + e.stack);\r\n                                }\r\n                            }));\r\n                    }\r\n\r\n                    this.subSystem.on('end', () => {\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis System Event end sub (stop=' + this.stop + ')');\r\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n                    });\r\n\r\n                    this.subSystem.on('error', error => {\r\n                        if (this.stop) {\r\n                            return;\r\n                        }\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub System client Objects No redis connection: ' + JSON.stringify(error));\r\n                    });\r\n\r\n                    if (this.settings.connection.enhancedLogging) {\r\n                        this.subSystem.on('connect', () =>\r\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event connect (stop=' + this.stop + ')'));\r\n\r\n                        this.subSystem.on('close', () =>\r\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event close (stop=' + this.stop + ')'));\r\n\r\n                        this.subSystem.on('reconnecting', reconnectCounter =>\r\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\r\n                    }\r\n\r\n                    this.subSystem.on('ready', () => {\r\n                        if (--initCounter < 1) {\r\n                            if (this.settings.connection.port === 0) {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                            } else {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                            }\r\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                            ready = true;\r\n                        }\r\n                        // subscribe on system.config only if js-controller\r\n                        if (this.settings.controller) {\r\n                            this.subSystem.psubscribe(this.objNamespace + 'system.config');\r\n                        }\r\n                        Object.keys(this.subSystem.ioBrokerSubscriptions).forEach(sub => this.subSystem.psubscribe(sub));\r\n                    });\r\n                }\r\n\r\n                if (!this.sub && typeof onChangeUser === 'function') {\r\n                    initCounter++;\r\n                    this.log.debug(this.namespace + ' Objects create User PubSub Client');\r\n                    this.sub = new Redis(this.settings.connection.options);\r\n                    this.sub.ioBrokerSubscriptions = {};\r\n\r\n                    this.sub.on('pmessage', (pattern, channel, message) => {\r\n                        setImmediate(() => {\r\n                            this.log.silly(this.namespace + ' Objects user redis pmessage ' + pattern + '/' + channel + ':' + message);\r\n                            try {\r\n                                if (ioRegExp.test(channel)) {\r\n                                    const id = channel.substring(this.objNamespaceL);\r\n                                    try {\r\n                                        const obj = message ? JSON.parse(message) : null;\r\n\r\n                                        onChangeUser(id, obj);\r\n                                    } catch (e) {\r\n                                        this.log.warn(`${this.namespace} Objects user cannot process pmessage ${id} - ${message}: ${e.message}`);\r\n                                        this.log.warn(`${this.namespace} ${e.stack}`);\r\n                                    }\r\n                                } else {\r\n                                    this.log.warn(`${this.namespace} Objects user received unexpected pmessage: ${channel}`);\r\n                                }\r\n                            } catch (e) {\r\n                                this.log.warn(this.namespace + ' Objects user pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\r\n                                this.log.warn(this.namespace + ' ' + e.stack);\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    this.sub.on('end', () => {\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end user sub (stop=' + this.stop + ')');\r\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n                    });\r\n\r\n                    this.sub.on('error', error => {\r\n                        if (this.stop) {\r\n                            return;\r\n                        }\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub user client Objects No redis connection: ' + JSON.stringify(error));\r\n                    });\r\n\r\n                    if (this.settings.connection.enhancedLogging) {\r\n                        this.sub.on('connect', () =>\r\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event connect (stop=' + this.stop + ')'));\r\n\r\n                        this.sub.on('close', () =>\r\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event close (stop=' + this.stop + ')'));\r\n\r\n                        this.sub.on('reconnecting', reconnectCounter =>\r\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\r\n                    }\r\n\r\n                    this.sub.on('ready', () => {\r\n                        if (--initCounter < 1) {\r\n                            if (this.settings.connection.port === 0) {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                            } else {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                            }\r\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                            ready = true;\r\n                        }\r\n                        Object.keys(this.sub.ioBrokerSubscriptions).forEach(sub => this.sub.psubscribe(sub));\r\n                    });\r\n                }\r\n\r\n                this.log.debug(this.namespace + ' Objects client initialize lua scripts');\r\n                initCounter++;\r\n                this.loadLuaScripts(() => {\r\n                    if (!this.client) {\r\n                        return;\r\n                    }\r\n                    // init default new acl\r\n                    this.client.get(this.objNamespace + 'system.config', (err, obj) => {\r\n                        if (obj) {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON system.config: ${obj}`);\r\n                                obj = null;\r\n                            }\r\n                            if (obj && obj.common && obj.common.defaultNewAcl) {\r\n                                this.defaultNewAcl = obj.common.defaultNewAcl;\r\n                            }\r\n                        } else {\r\n                            this.log.error(`${this.namespace} Cannot read system.config: ${obj} (OK when migrating or restoring)`);\r\n                        }\r\n\r\n                        if (--initCounter < 1) {\r\n                            if (this.settings.connection.port === 0) {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                            } else {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                            }\r\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                            ready = true;\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getStatus() {\r\n        return {type: 'redis', server: false};\r\n    }\r\n\r\n    /**\r\n     * Checks if given Id is a meta object, else throws error\r\n     *\r\n     * @param {string} id to check\r\n     * @throws Error if id is invalid\r\n     */\r\n    async validateMetaObject(id) {\r\n        if (this.existingMetaObjects[id] === undefined) {\r\n            // if not cached -> getObject\r\n            const obj = await this.getObjectAsync(id);\r\n            if (obj && obj.type === 'meta') {\r\n                this.existingMetaObjects[id] = true;\r\n            } else {\r\n                this.existingMetaObjects[id] = false;\r\n                return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\r\n            }\r\n        } else if (this.existingMetaObjects[id] === false) {\r\n            return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\r\n        }\r\n    }\r\n\r\n    normalizeFilename(name) {\r\n        return name ? name.replace(/[/\\\\]+/g, '/') : name;\r\n    }\r\n\r\n    // -------------- FILE FUNCTIONS -------------------------------------------\r\n    _setBinaryState(id, data, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!Buffer.isBuffer(data)) {\r\n            data = Buffer.from(data);\r\n        }\r\n        this.client.set(id, data, callback);\r\n    }\r\n\r\n    _getBinaryState(id, callback) {\r\n        if (typeof callback !== 'function') {\r\n            return this.log.error(this.namespace + ' no callback found in _getBinaryState');\r\n        }\r\n        if (!this.client) {\r\n            return setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        this.client.getBuffer(id, (err, data) => {\r\n            if (!err && data) {\r\n                callback(err, data);\r\n            } else {\r\n                callback(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    _delBinaryState(id, callback) {\r\n        if (!this.client) {\r\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        } else {\r\n            this.client.del(id, () => typeof callback === 'function' && callback());\r\n        }\r\n    }\r\n\r\n    getFileId(id, name, isMeta) {\r\n        name = this.normalizeFilename(name);\r\n        // e.g. ekey.admin and admin/ekey.png\r\n        if (id.match(/\\.admin$/)) {\r\n            if (name.match(/^admin\\//)) {\r\n                name = name.replace(/^admin\\//, '');\r\n            } else\r\n            // e.g. ekey.admin and iobroker.ekey/admin/ekey.png\r\n            if (name.match(/^iobroker.[-\\d\\w]\\/admin\\//i)) {\r\n                name = name.replace(/^iobroker.[-\\d\\w]\\/admin\\//i, '');\r\n            }\r\n        }\r\n        const normalized = utils.sanitizePath(id, name);\r\n        if (!normalized) {\r\n            this.log.debug(this.namespace + ' Invalid file path ' + id + '/' + name);\r\n            return '';\r\n        }\r\n        id = normalized.id;\r\n        name = normalized.name;\r\n\r\n        return this.fileNamespace + id + '$%$' + name + (isMeta !== undefined ? (isMeta ? '$%$meta' : '$%$data') : '');\r\n    }\r\n\r\n    checkFile(id, name, options, flag, callback) {\r\n        // read file settings from redis\r\n        const fileId = this.getFileId(id, name, true);\r\n        if (!fileId) {\r\n            const fileOptions = {'notExists': true};\r\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\r\n                return typeof callback === 'function' && setImmediate(() => callback(false, options, fileOptions)); // NO error\r\n            } else {\r\n                return typeof callback === 'function' && setImmediate(() => callback(true, options)); // error\r\n            }\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED, options));\r\n        }\r\n        this.client.get(fileId, (err, fileOptions) => {\r\n            fileOptions = fileOptions || '{\"notExists\": true}';\r\n            try {\r\n                fileOptions = JSON.parse(fileOptions);\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${fileOptions}`);\r\n                fileOptions = {notExists: true};\r\n            }\r\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\r\n                return typeof callback === 'function' && callback(false, options, fileOptions); // NO error\r\n            } else {\r\n                return typeof callback === 'function' && callback(true, options); // error\r\n            }\r\n        });\r\n    }\r\n\r\n    checkFileRights(id, name, options, flag, callback) {\r\n        return utils.checkFileRights(this, id, name, options, flag, callback);\r\n    }\r\n\r\n    _setDefaultAcl(ids, defaultAcl) {\r\n        if (ids && ids.length) {\r\n            const id = ids.shift();\r\n            this.getObject(id, (err, obj) => {\r\n                if (obj && !obj.acl) {\r\n                    obj.acl = defaultAcl;\r\n                    this.setObject(id, obj, null, () =>\r\n                        setImmediate(() =>\r\n                            this._setDefaultAcl(ids, defaultAcl)));\r\n                } else {\r\n                    setImmediate(() =>\r\n                        this._setDefaultAcl(ids, defaultAcl));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setDefaultAcl(defaultNewAcl) {\r\n        this.defaultNewAcl = defaultNewAcl || {\r\n            owner: utils.CONSTS.SYSTEM_ADMIN_USER,\r\n            ownerGroup: utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n            object: 0x664,\r\n            state: 0x664,\r\n            file: 0x664\r\n        };\r\n        // Get ALL Objects\r\n        this.getKeys('*', (err, ids) => this._setDefaultAcl(ids, this.defaultNewAcl));\r\n    }\r\n\r\n    getUserGroup(user, callback) {\r\n        return utils.getUserGroup(this, user, (error, user, userGroups, userAcl) => {\r\n            if (error) {\r\n                this.log.error(this.namespace + ' ' + error);\r\n            }\r\n            callback.call(this, user, userGroups, userAcl);\r\n        });\r\n    }\r\n\r\n    insert(id, attName, ignore, options, obj, callback) {\r\n        return utils.insert(this, id, attName, ignore, options, obj, callback);\r\n    }\r\n\r\n    _writeFile(id, name, data, options, callback, meta) {\r\n        const ext         = name.match(/\\.[^.]+$/);\r\n        const mime        = utils.getMimeType(ext);\r\n        const _mimeType   = mime.mimeType;\r\n        const isBinary    = mime.isBinary;\r\n\r\n        const metaID = this.getFileId(id, name, true);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        // virtual files only get Meta objects\r\n        if (options.virtualFile) {\r\n            meta = {\r\n                notExists: true,\r\n                virtualFile: true\r\n            }; // Store file with flags as it would not exist\r\n            this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(_err));\r\n        } else {\r\n            if (!meta) {\r\n                meta = {createdAt: Date.now()};\r\n            }\r\n            if (!meta.acl) {\r\n                meta.acl = {\r\n                    owner: options.user || (this.defaultNewAcl && this.defaultNewAcl.owner) || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                    ownerGroup: options.group || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                    permissions: options.mode || (this.defaultNewAcl && this.defaultNewAcl.file) || 0x644\r\n                };\r\n            }\r\n            meta.stats = {\r\n                size: data.length\r\n            };\r\n            if (meta.hasOwnProperty('notExists')) {\r\n                delete meta.notExists;\r\n            }\r\n\r\n            meta.mimeType = options.mimeType || _mimeType;\r\n            meta.binary = isBinary;\r\n            meta.acl.ownerGroup = meta.acl.ownerGroup || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n            meta.modifiedAt = Date.now();\r\n\r\n            this._setBinaryState(this.getFileId(id, name, false), data, err => this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(err || _err)));\r\n        }\r\n    }\r\n    async writeFile(id, name, data, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (typeof options === 'string') {\r\n            options = {mimeType: options};\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.writeFile(id, name, data, options, err =>\r\n                    err ? reject(err) : resolve()));\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.warn(`writeFile will not write this file (${name}) in future versions: ${e.message}`);\r\n            // todo: replace by below code in 3.1 + add test\r\n            // this.log.error(`Cannot write file ${name}: ${e.message}`);\r\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        // If file yet exists => check the permissions\r\n        return this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                return this._writeFile(id, name, data, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    writeFileAsync(id, name, data, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.writeFile(id, name, data, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _readFile(id, name, options, callback, meta) {\r\n        if (meta.notExists) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        this._getBinaryState(this.getFileId(id, name, false), (err, buffer) => {\r\n            const mimeType = meta && meta.mimeType;\r\n            if (meta && !meta.binary && buffer) {\r\n                buffer = buffer.toString();\r\n            }\r\n            typeof callback === 'function' && callback(err, buffer, mimeType);\r\n        });\r\n    }\r\n    async readFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options  = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.readFile(id, name, options, (err, res, mimeType) =>\r\n                    err ? reject(err) : resolve({data: res, mimeType: mimeType})));\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.warn(`readFile will not read this file (${name}) in future versions: ${e.message}`);\r\n            // todo: replace by below code in 3.1 + add test\r\n            // this.log.error(`Cannot read file ${name}: ${e.message}`);\r\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        options = options || {};\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                return this._readFile(id, name, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    readFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.readFile(id, name, options, (err, res, mimeType) =>\r\n                err ? reject(err) : resolve({data: res, mimeType: mimeType})));\r\n    }\r\n\r\n    _unlink(id, name, options, callback, meta) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (meta && meta.notExists) {\r\n            this._rm(id, name, options, callback);\r\n            //typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        } else {\r\n            const metaID = this.getFileId(id, name, true);\r\n            const dataID = this.getFileId(id, name, false);\r\n            this._delBinaryState(dataID, _err => this.client.del(metaID, callback));\r\n        }\r\n    }\r\n    unlink(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options  = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file['delete']) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._unlink(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    unlinkAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unlink(id, name, options, (err) =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    delFile(id, name, options, callback) {\r\n        return this.unlink(id, name, options, callback);\r\n    }\r\n    delFileAsync(id, name, options) {\r\n        return this.unlinkAsync(id, name, options);\r\n    }\r\n\r\n    _readDir(id, name, options, callback) {\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (id === '') { // special case for \"root\"\r\n            const dirID = this.getFileId('*', '*');\r\n            this.client.keys(dirID, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n\r\n                const result = [];\r\n                if (!keys || !keys.length) {\r\n                    return typeof callback === 'function' && callback(null, result);\r\n                }\r\n                let lastDir;\r\n                keys.sort().forEach(dir => {\r\n                    dir = dir.substring(this.fileNamespaceL, dir.indexOf('$%$'));\r\n                    if (dir !== lastDir) {\r\n                        result.push({\r\n                            file: dir,\r\n                            stats: {},\r\n                            isDir: true\r\n                        });\r\n                    }\r\n                    lastDir = dir;\r\n                });\r\n                typeof callback === 'function' && callback(err, result);\r\n            });\r\n            return;\r\n        }\r\n        const dirID = this.getFileId(id, name + (name.length ? '/' : '') + '*');\r\n        this.client.keys(dirID, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            const start = dirID.indexOf('$%$') + 3;\r\n            const end = '$%$meta'.length;\r\n\r\n            const baseName = name + (name.length ? '/' : '');\r\n            const dirs = [];\r\n            const deepLevel = baseName.split('/').length;\r\n            if (!keys || !keys.length) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND, []);\r\n            }\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => {\r\n                    if (key.match(/\\$%\\$meta$/)) {\r\n                        const parts = key.substr(start, key.length - end).split('/');\r\n                        if (parts.length === deepLevel) {\r\n                            return !key.includes('/_data.json$%$') && key !== '_data.json'; // sort out \"virtual\" files that are used to mark directories\r\n                        } else {\r\n                            const dir = parts[deepLevel - 1];\r\n                            if (dirs.indexOf(dir) === -1) {\r\n                                dirs.push(dir);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            if (!keys.length) {\r\n                const result = [];\r\n                while (dirs.length) {\r\n                    result.push({\r\n                        file: dirs.shift(),\r\n                        stats: {},\r\n                        isDir: true\r\n                    });\r\n                }\r\n                return typeof callback === 'function' && callback(err, result);\r\n            }\r\n\r\n            // Check permissions\r\n            this.client.mget(keys, (err, objs) => {\r\n                if (err) {\r\n                    return typeof callback === 'function' && callback(err, objs);\r\n                }\r\n                const result = [];\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                objs = objs || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    const file = keys[i].substring(start + baseName.length, keys[i].length - end);\r\n                    while (dirs.length && dirs[0] < file) {\r\n                        result.push({\r\n                            file: dirs.shift(),\r\n                            stats: {},\r\n                            isDir: true\r\n                        });\r\n                    }\r\n\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                        if (!objs[i] || objs[i].virtualFile) {\r\n                            continue;\r\n                        } // virtual file, ignore\r\n                        objs[i].acl = objs[i].acl || {};\r\n                        if (options.user !== utils.CONSTS.SYSTEM_ADMIN_USER && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) === -1) {\r\n                            objs[i].acl.read  = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_READ);\r\n                            objs[i].acl.write = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_WRITE);\r\n                        } else {\r\n                            objs[i].acl.read  = true;\r\n                            objs[i].acl.write = true;\r\n                        }\r\n                        result.push({\r\n                            file: file,\r\n                            stats: objs[i].stats,\r\n                            isDir: false,\r\n                            acl: objs[i].acl,\r\n                            modifiedAt: objs[i].modifiedAt,\r\n                            createdAt:  objs[i].createdAt\r\n                        });\r\n                    }\r\n                }\r\n                while (dirs.length) {\r\n                    result.push({\r\n                        file: dirs.shift(),\r\n                        stats: {},\r\n                        isDir: true\r\n                    });\r\n                }\r\n                typeof callback === 'function' && callback(null, result);\r\n            });\r\n        });\r\n    }\r\n    async readDir(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        // remove first and last\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n        if (name.endsWith('/')) {\r\n            name = name.substring(0, name.length - 1);\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.warn(`readDir will not read this directory (${name}) in future versions: ${e.message}`);\r\n            // todo: replace by below code in 3.1 + add test\r\n            // this.log.error(`Cannot read directory ${name}: ${e.message}`);\r\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.list) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    this._readDir(id, name, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    readDirAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.readDir(id, name, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    _renameHelper(keys, oldBase, newBase, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            this.client.rename(id.replace(/\\$%\\$meta$/, '$%$data'), id.replace(oldBase, newBase).replace(/\\$%\\$meta$/, '$%$data'), _err =>\r\n                this.client.rename(id, id.replace(oldBase, newBase), _err =>\r\n                    setImmediate(() => this._renameHelper(keys, oldBase, newBase, callback))));\r\n        }\r\n    }\r\n    _rename(id, oldName, newName, options, callback, meta) {\r\n        const oldMetaID = this.getFileId(id, oldName, true);\r\n        const oldDataID = this.getFileId(id, oldName, false);\r\n        const newMetaID = this.getFileId(id, newName, true);\r\n        const newDataID = this.getFileId(id, newName, false);\r\n        if (!meta || !this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        } else if (meta.notExists) {\r\n            oldName = this.normalizeFilename(oldName);\r\n            newName = this.normalizeFilename(newName);\r\n\r\n            // it could be dir\r\n            if (!oldName.endsWith('/*')) {\r\n                oldName += '/*';\r\n            } else if (oldName.endsWith('/')) {\r\n                oldName += '*';\r\n            }\r\n\r\n            if (!newName.endsWith('/*')) {\r\n                newName += '/*';\r\n            } else if (newName.endsWith('/')) {\r\n                newName += '*';\r\n            }\r\n\r\n            const oldBase = oldName.substring(0, oldName.length - 1);\r\n            const newBase = newName.substring(0, newName.length - 1);\r\n            const dirID = this.getFileId(id, oldName);\r\n            this.client.keys(dirID, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                if (err || !keys) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n\r\n                keys = keys\r\n                    .sort()\r\n                    .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n                if (!keys.length) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n                // Check permissions\r\n                this.client.mget(keys, (err, objs) => {\r\n                    let result;\r\n                    const dontCheck =\r\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                    objs = objs || [];\r\n                    if (!dontCheck) {\r\n                        result = [];\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                objs[i] = JSON.parse(objs[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                                continue;\r\n                            }\r\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                                result.push(keys[i]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = keys;\r\n                    }\r\n                    this._renameHelper(result, oldBase, newBase, callback);\r\n                });\r\n            });\r\n        } else {\r\n            this.client.rename(oldDataID, newDataID, _err =>\r\n                this.client.rename(oldMetaID, newMetaID, callback));\r\n        }\r\n    }\r\n    rename(id, oldName, newName, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof oldName !== 'string' || !oldName.length || oldName === '/' || oldName === '//' ||\r\n            typeof newName !== 'string' || !newName.length || newName === '/' || newName === '//') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n        if (oldName.startsWith('/')) {\r\n            oldName = oldName.substring(1);\r\n        }\r\n        if (newName.startsWith('/')) {\r\n            newName = newName.substring(1);\r\n        }\r\n        if (oldName.endsWith('/')) {\r\n            oldName = oldName.substring(0, oldName.length - 1);\r\n        }\r\n        if (newName.endsWith('/')) {\r\n            newName = newName.substring(0, newName.length - 1);\r\n        }\r\n\r\n        this.checkFileRights(id, oldName, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    this._rename(id, oldName, newName, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    renameAsync(id, oldName, newName, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.rename(id, oldName, newName, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _touch(id, name, options, callback, meta) {\r\n        const metaID = this.getFileId(id, name, true);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta || meta.notExists) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        meta.modifiedAt = Date.now();\r\n        this.client.set(metaID, JSON.stringify(meta), callback);\r\n    }\r\n    touch(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                return this._touch(id, name, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n    touchAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.touch(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _rmHelper(keys, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            this._delBinaryState(id.replace(/\\$%\\$meta$/, '$%$data'), _err =>\r\n                this.client.del(id, _err =>\r\n                    setImmediate(() => this._rmHelper(keys, callback))));\r\n        }\r\n    }\r\n    _rm(id, name, options, callback, meta) {\r\n        if (meta && !meta.isDir) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            const dataID = this.getFileId(id, name, false);\r\n            this.delObject(dataID, _err => this.delObject(metaID, callback));\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            name = this.normalizeFilename(name);\r\n            // it could be dir\r\n            if (! name.endsWith('/*')) {\r\n                name += '/*';\r\n            } else if (name.endsWith('/')) {\r\n                name += '*';\r\n            }\r\n            const dirID = this.getFileId(id, name);\r\n            this.client.keys(dirID, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                if (err || !keys) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n\r\n                keys = keys\r\n                    .sort()\r\n                    .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n                if (!keys.length) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n                // Check permissions\r\n                this.client.mget(keys, (err, objs) => {\r\n                    let result;\r\n                    const dontCheck =\r\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                    objs = objs || [];\r\n                    if (!dontCheck) {\r\n                        result = [];\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                objs[i] = JSON.parse(objs[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                                continue;\r\n                            }\r\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                                result.push(keys[i]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = keys;\r\n                    }\r\n                    const files = result.map(key => {\r\n                        const name = key.substring(this.fileNamespaceL + id.length + 3, key.length - 7);\r\n                        const pos = name.lastIndexOf('/');\r\n                        if (pos !== -1) {\r\n                            return {file: name.substring(pos + 1), path: name.substring(0, pos)};\r\n                        } else {\r\n                            return {file: id, path: ''};\r\n                        }\r\n                    });\r\n                    this._rmHelper(result, () => callback(null, files));\r\n                });\r\n            });\r\n        }\r\n    }\r\n    rm(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        this.checkFileRights(id, null, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file['delete']) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._rm(id, name, options, callback, meta && meta.notExists ? null : meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    rmAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.rm(id, name, options, (err, files) =>\r\n                err ? reject(err) : resolve(files)));\r\n    }\r\n\r\n    // simulate. redis has no dirs\r\n    mkdir(id, dirName, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (typeof dirName !== 'string') {\r\n            dirName = '';\r\n        }\r\n\r\n        dirName = this.normalizeFilename(dirName);\r\n        if (dirName.startsWith('/')) {\r\n            dirName = dirName.substring(1);\r\n        }\r\n        this.checkFileRights(id, dirName, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    // we create a dummy file (for file this file exists to store meta data)\r\n                    options = options || {};\r\n                    options.virtualFile = true; // this is a virtual File\r\n                    const realName = dirName + (dirName.endsWith('/') ? '' : '/');\r\n                    this.writeFile(id, realName + '_data.json', '', options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    mkdirAsync(id, dirName, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.mkdir(id, dirName, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _chownFileHelper(keys, metas, options, callback) {\r\n        if (!keys || !keys.length) {\r\n            return typeof callback === 'function' && callback();\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        const id  = keys.shift();\r\n        const meta = metas.shift();\r\n        meta.acl.owner      = options.owner;\r\n        meta.acl.ownerGroup = options.ownerGroup;\r\n        this.client.set(id, JSON.stringify(meta), _err =>\r\n            setImmediate(() => this._chownFileHelper(keys, metas, options, callback)));\r\n    }\r\n    _chownFile(id, name, options, callback, meta) {\r\n        if (!meta) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta.isDir && !meta.notExists) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            meta.acl.owner = options.owner;\r\n            meta.acl.ownerGroup = options.ownerGroup;\r\n            this.client.set(metaID, JSON.stringify(meta), err => {\r\n                const nameArr = name.split('/');\r\n                const file = nameArr.pop();\r\n                const res = [{\r\n                    path:       nameArr.join('/'),\r\n                    file:       file,\r\n                    stats:      meta.stats,\r\n                    isDir:      false,\r\n                    acl:        meta.acl || {},\r\n                    modifiedAt: meta.modifiedAt,\r\n                    createdAt:  meta.createdAt\r\n                }];\r\n                return typeof callback === 'function' && callback(err, res);\r\n            });\r\n            return;\r\n        }\r\n        // it could be dir\r\n        if (! name.endsWith('/*')) {\r\n            name += '/*';\r\n        } else if (name.endsWith('/')) {\r\n            name += '*';\r\n        }\r\n        const dirID = this.getFileId(id, name);\r\n        this.client.keys(dirID, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            if (err || !keys) {\r\n                return typeof callback === 'function' &&  callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n            // Check permissions\r\n            this.client.mget(keys, (err, metas) => {\r\n                const dontCheck = options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n                const keysFiltered = [];\r\n                const objsFiltered = [];\r\n                const processed = [];\r\n                const start = dirID.indexOf('$%$') + 3;\r\n                const end = '$%$meta'.length;\r\n\r\n                metas = metas || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        metas[i] = JSON.parse(metas[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (dontCheck || utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        if (!metas[i] || metas[i].virtualFile) {\r\n                            continue;\r\n                        } // virtual file, ignore\r\n                        keysFiltered.push(keys[i]);\r\n                        objsFiltered.push(metas[i]);\r\n\r\n                        const name = keys[i].substring(start, keys[i].length - end);\r\n                        const nameArr = name.split('/');\r\n                        const file = nameArr.pop();\r\n                        processed.push({\r\n                            path:       nameArr.join('/'),\r\n                            file:       file,\r\n                            stats:      metas[i].stats || {},\r\n                            isDir:      false,\r\n                            acl:        metas[i].acl || {},\r\n                            modifiedAt: metas[i].modifiedAt,\r\n                            createdAt:  metas[i].createdAt\r\n                        });\r\n                    }\r\n                }\r\n                this._chownFileHelper(keysFiltered, objsFiltered, options, err => {\r\n                    return typeof callback === 'function' && callback(err, processed);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    chownFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        if (typeof options !== 'object') {\r\n            options = {owner: options};\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (!options.ownerGroup && options.group) {\r\n            options.ownerGroup = options.group;\r\n        }\r\n        if (!options.owner      && options.user)  {\r\n            options.owner      = options.user;\r\n        }\r\n\r\n        if (!options.owner) {\r\n            this.log.error(this.namespace + ' user is not defined');\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n            return;\r\n        }\r\n\r\n        if (!options.ownerGroup) {\r\n            // get user group\r\n            this.getUserGroup(options.owner, (user, groups /* , permissions */) => {\r\n                if (!groups || !groups[0]) {\r\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\r\n                    return;\r\n                } else {\r\n                    options.ownerGroup = groups[0];\r\n                }\r\n                this.chownFile(id, name, options, callback);\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chownFile(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    chownFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chownFile(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _chmodFileHelper(keys, metas, options, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id   = keys.shift();\r\n            const meta = metas.shift();\r\n            meta.acl.permissions = options.mode;\r\n            this.client.set(id, JSON.stringify(meta), _err =>\r\n                setImmediate(() => this._chmodFileHelper(keys, metas, options, callback)));\r\n        }\r\n    }\r\n    _chmodFile(id, name, options, callback, meta) {\r\n        if (!meta) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta.isDir && !meta.notExists) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            meta.acl.permissions = options.mode;\r\n            this.client.set(metaID, JSON.stringify(meta), err => {\r\n                const nameArr = name.split('/');\r\n                const file = nameArr.pop();\r\n                const res = [{\r\n                    path:       nameArr.join('/'),\r\n                    file:       file,\r\n                    stats:      meta.stats,\r\n                    isDir:      false,\r\n                    acl:        meta.acl || {},\r\n                    modifiedAt: meta.modifiedAt,\r\n                    createdAt:  meta.createdAt\r\n                }];\r\n                return typeof callback === 'function' && callback(err, res);\r\n            });\r\n            return;\r\n        }\r\n        // it could be dir\r\n        if (! name.endsWith('/*')) {\r\n            name += '/*';\r\n        } else if (name.endsWith('/')) {\r\n            name += '*';\r\n        }\r\n        const dirID = this.getFileId(id, name);\r\n        this.client.keys(dirID, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            if (err || !keys) {\r\n                return typeof callback === 'function' &&  callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n            // Check permissions\r\n            this.client.mget(keys, (err, objs) => {\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                const keysFiltered = [];\r\n                const objsFiltered = [];\r\n                const processed = [];\r\n                const start = dirID.indexOf('$%$') + 3;\r\n                const end = '$%$meta'.length;\r\n\r\n                objs = objs || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        if (!objs[i] || objs[i].virtualFile) {\r\n                            continue;\r\n                        } // virtual file, ignore\r\n                        keysFiltered.push(keys[i]);\r\n                        objsFiltered.push(objs[i]);\r\n\r\n                        const name = keys[i].substring(start, keys[i].length - end);\r\n                        const nameArr = name.split('/');\r\n                        const file = nameArr.pop();\r\n                        processed.push({\r\n                            path:       nameArr.join('/'),\r\n                            file:       file,\r\n                            stats:      objs[i].stats,\r\n                            isDir:      false,\r\n                            acl:        objs[i].acl || {},\r\n                            modifiedAt: objs[i].modifiedAt,\r\n                            createdAt:  objs[i].createdAt\r\n                        });\r\n                    }\r\n                }\r\n                this._chmodFileHelper(keysFiltered, objsFiltered, options, err =>\r\n                    typeof callback === 'function' && callback(err, processed));\r\n            });\r\n        });\r\n    }\r\n    chmodFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name[0].startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {mode: options};\r\n        }\r\n\r\n        if (options.mode === undefined) {\r\n            this.log.error(this.namespace + ' mode is not defined');\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n            return;\r\n        } else if (typeof options.mode === 'string') {\r\n            options.mode = parseInt(options.mode, 16);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chmodFile(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    chmodFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chmodFile(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    enableFileCache(enabled, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, _options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else if (typeof callback === 'function') {\r\n                // cache cannot be enabled\r\n                setImmediate(() => typeof callback === 'function' && callback(null, false));\r\n            }\r\n        });\r\n    }\r\n    enableFileCacheAsync(enabled, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.enableFileCache(enabled, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    // -------------- OBJECT FUNCTIONS -------------------------------------------\r\n    _subscribe(pattern, options, subClient, callback) {\r\n        if (!subClient) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (Array.isArray(pattern)) {\r\n            let count = pattern.length;\r\n            pattern.forEach(pattern => {\r\n                this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\r\n                subClient.psubscribe(this.objNamespace + pattern, err => {\r\n                    if (!err) {\r\n                        subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\r\n                    }\r\n                    !--count && typeof callback === 'function' && callback(err);\r\n                });\r\n\r\n            });\r\n        } else {\r\n            this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\r\n            subClient.psubscribe(this.objNamespace + pattern, err => {\r\n                if (!err) {\r\n                    subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\r\n                }\r\n                typeof callback === 'function' && callback(err);\r\n            });\r\n        }\r\n    }\r\n    subscribeConfig(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._subscribe(pattern, options, this.subSystem, callback);\r\n            }\r\n        });\r\n    }\r\n    subscribe(pattern, options, callback) {\r\n        return this.subscribeConfig(pattern, options, callback);\r\n    }\r\n    subscribeAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.subscribe(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    subscribeUser(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._subscribe(pattern, options, this.sub, callback);\r\n            }\r\n        });\r\n    }\r\n    subscribeUserAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.subscribeUser(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _unsubscribe(pattern, options, subClient, callback) {\r\n        if (!subClient) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (Array.isArray(pattern)) {\r\n            let count = pattern.length;\r\n            pattern.forEach(pattern => {\r\n                this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\r\n                subClient.punsubscribe(this.objNamespace + pattern, err => {\r\n                    if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\r\n                        delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\r\n                    }\r\n                    !--count && typeof callback === 'function' && callback(err);\r\n                });\r\n            });\r\n        } else {\r\n            this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\r\n            subClient.punsubscribe(this.objNamespace + pattern, err => {\r\n                if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\r\n                    delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\r\n                }\r\n                typeof callback === 'function' && callback(err);\r\n            });\r\n        }\r\n    }\r\n    unsubscribeConfig(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._unsubscribe(pattern, options, this.subSystem, callback);\r\n            }\r\n        });\r\n    }\r\n    unsubscribe(pattern, options, callback) {\r\n        return this.unsubscribeConfig(pattern, options, callback);\r\n    }\r\n    unsubscribeAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unsubscribe(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    unsubscribeUser(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._unsubscribe(pattern, options, this.sub, callback);\r\n            }\r\n        });\r\n    }\r\n    unsubscribeUserAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unsubscribeUser(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _objectHelper(keys, objs, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id  = keys.shift();\r\n            const obj = objs.shift();\r\n            const message = JSON.stringify(obj);\r\n            this.client.set(id, message, err => {\r\n                !err && this.client.publish(id, message).catch(_err => {});\r\n                setImmediate(() => this._objectHelper(keys, objs, callback));\r\n            });\r\n        }\r\n    }\r\n    _chownObject(pattern, options, callback) {\r\n        this.getConfigKeys(pattern, options, (err, keys) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n                return;\r\n            }\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            this.client.mget(keys, (err, objects) => {\r\n                const filteredKeys = [];\r\n                const filteredObjs = [];\r\n                objects = objects || [];\r\n                for (let k = 0; k < keys.length; k++) {\r\n                    try {\r\n                        objects[k] = JSON.parse(objects[k]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\r\n                        continue;\r\n                    }\r\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        continue;\r\n                    }\r\n                    if (!objects[k].acl) {\r\n                        objects[k].acl = {\r\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\r\n                        };\r\n                        if (objects[k].type === 'state') {\r\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\r\n                        }\r\n                    }\r\n                    objects[k].acl.owner      = options.owner;\r\n                    objects[k].acl.ownerGroup = options.ownerGroup;\r\n                    filteredKeys.push(keys[k]);\r\n                    filteredObjs.push(objects[k]);\r\n                }\r\n                this._objectHelper(filteredKeys, filteredObjs, () =>\r\n                    typeof callback === 'function' && setImmediate(() => callback(null, filteredObjs)));\r\n            });\r\n        }, true);\r\n    }\r\n    chownObject(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        options.acl = null;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {owner: options};\r\n        }\r\n\r\n        if (!options.ownerGroup && options.group) {\r\n            options.ownerGroup = options.group;\r\n        }\r\n        if (!options.owner && options.user)  {\r\n            options.owner = options.user;\r\n        }\r\n\r\n        if (!options.owner) {\r\n            this.log.error(this.namespace + ' user is not defined');\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n            return;\r\n        }\r\n\r\n        if (!options.ownerGroup) {\r\n            // get user group\r\n            this.getUserGroup(options.owner, (user, groups /* , permissions*/) => {\r\n                if (!groups || !groups[0]) {\r\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\r\n                    return;\r\n                } else {\r\n                    options.ownerGroup = groups[0];\r\n                }\r\n                this.chownObject(pattern, options, callback);\r\n            });\r\n            return;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.object || !options.acl.object.write) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._chownObject(pattern, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    chownObjectAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chownObject(pattern, options, (err, list) =>\r\n                err ? reject(err) : resolve(list)));\r\n    }\r\n\r\n    _chmodObject(pattern, options, callback) {\r\n        this.getConfigKeys(pattern, options, (err, keys) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n                return;\r\n            }\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            this.client.mget(keys, (err, objects) => {\r\n                const filteredKeys = [];\r\n                const filteredObjs = [];\r\n                objects = objects || [];\r\n                for (let k = 0; k < keys.length; k++) {\r\n                    try {\r\n                        objects[k] = JSON.parse(objects[k]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\r\n                        continue;\r\n                    }\r\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        continue;\r\n                    }\r\n                    if (!objects[k].acl) {\r\n                        objects[k].acl = {\r\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\r\n                        };\r\n                        if (objects[k].type === 'state') {\r\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\r\n                        }\r\n                    }\r\n                    if (options.object !== undefined) {\r\n                        objects[k].acl.object = options.object;\r\n                    }\r\n                    if (options.state !== undefined) {\r\n                        objects[k].acl.state = options.state;\r\n                    }\r\n                    filteredKeys.push(keys[k]);\r\n                    filteredObjs.push(objects[k]);\r\n                }\r\n                this._objectHelper(filteredKeys, filteredObjs, () =>\r\n                    typeof callback === 'function' && callback(null, filteredObjs));\r\n            });\r\n        }, true);\r\n    }\r\n    chmodObject(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        options.acl = null;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {object: options};\r\n        }\r\n\r\n        if (options.mode && !options.object) {\r\n            options.object = options.mode;\r\n        }\r\n\r\n        if (options.object === undefined) {\r\n            this.log.error(this.namespace + ' mode is not defined');\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n        } else if (typeof options.mode === 'string') {\r\n            options.mode = parseInt(options.mode, 16);\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._chmodObject(pattern, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    chmodObjectAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chmodObject(pattern, options, (err, list) =>\r\n                err ? reject(err) : resolve(list)));\r\n    }\r\n\r\n    _getObject(id, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!id || typeof id !== 'string') {\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid id ' + JSON.stringify(id)));\r\n        }\r\n\r\n        this.client.get(this.objNamespace + id, (err, obj) => {\r\n            if (err) {\r\n                this.log.debug(this.namespace + ' redis get ' + id + ', error - ' + err);\r\n            } else {\r\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + obj);\r\n            }\r\n            try {\r\n                obj = obj ? JSON.parse(obj) : null;\r\n            } catch (e) {\r\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${obj}: ${e.message}`);\r\n            }\r\n            if (obj) {\r\n                // Check permissions\r\n                if (utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ)) {\r\n                    typeof callback === 'function' && callback(null, obj);\r\n                } else {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                }\r\n\r\n            } else {\r\n                typeof callback === 'function' && callback(err, obj);\r\n            }\r\n        });\r\n    }\r\n    getObject(id, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObject(id, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            if (options && options.acl) {\r\n                options.acl = null;\r\n            }\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObject(id, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObject(id, options, (err, obj) =>\r\n                err ? reject(err) : resolve(obj)));\r\n    }\r\n\r\n    _getKeys(pattern, options, callback, dontModify) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!pattern || typeof pattern !== 'string') {\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\r\n        }\r\n\r\n        const r = new RegExp(tools.pattern2RegEx(pattern));\r\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            const result = [];\r\n            if (keys) {\r\n                keys.sort();\r\n                const result = [];\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                if (dontCheck) {\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        const id = keys[i].substring(this.objNamespaceL);\r\n                        if (r.test(id)) {\r\n                            if (!dontModify) {\r\n                                result.push(id);\r\n                            } else {\r\n                                result.push(keys[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                    typeof callback === 'function' && callback(err, result);\r\n                } else {\r\n                    // Check permissions\r\n                    this.client.mget(keys, (err, metas) => {\r\n                        metas = metas || [];\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                metas[i] = JSON.parse(metas[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\r\n                                continue;\r\n                            }\r\n\r\n                            if (r.test(keys[i]) && utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                                if (!dontModify) {\r\n                                    result.push(keys[i].substring(this.objNamespaceL));\r\n                                } else {\r\n                                    result.push(keys[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                        typeof callback === 'function' && callback(err, result);\r\n                    });\r\n\r\n                }\r\n            } else {\r\n                typeof callback === 'function' && callback(err, result);\r\n            }\r\n        });\r\n    }\r\n    getKeys(pattern, options, callback, dontModify) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getKeys(pattern, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj), dontModify));\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getKeys(pattern, options, callback, dontModify);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getKeysAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getKeys(id, options, (err, keys) =>\r\n                err ? reject(err) : resolve(keys)));\r\n    }\r\n\r\n    getConfigKeys(pattern, options, callback, dontModify) {\r\n        return this.getKeys(pattern, options, callback, dontModify);\r\n    }\r\n\r\n    _getObjects(keys, options, callback, dontModify) {\r\n        if (!keys) {\r\n            typeof callback === 'function' && setImmediate(() => callback('no keys', null));\r\n            return;\r\n        }\r\n        if (!keys.length) {\r\n            typeof callback === 'function' && setImmediate(() => callback(null, []));\r\n            return;\r\n        }\r\n\r\n        let _keys;\r\n        if (!dontModify) {\r\n            _keys = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                _keys[i] = this.objNamespace + keys[i];\r\n            }\r\n        } else {\r\n            _keys = keys;\r\n        }\r\n\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        this.client.mget(_keys, (err, objs) => {\r\n            let result = [];\r\n            if (err) {\r\n                this.log.warn(this.namespace + ' redis mget ' + (!objs ? 0 :  objs.length) + ' ' + _keys.length + ', err: ' + err);\r\n            } else {\r\n                this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis mget ' + (!objs ? 0 : objs.length) + ' ' + _keys.length);\r\n            }\r\n            if (objs) {\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                if (!dontCheck) {\r\n                    for (let i = 0; i < objs.length; i++) {\r\n                        try {\r\n                            objs[i] = JSON.parse(objs[i]);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${objs[i]}`);\r\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\r\n                            continue;\r\n                        }\r\n                        if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                            result.push(objs[i]);\r\n                        } else {\r\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\r\n                        }\r\n                    }\r\n                } else {\r\n                    result = objs.map((obj, i) => {\r\n                        try {\r\n                            return JSON.parse(obj);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${obj}`);\r\n                            return null;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            typeof callback === 'function' && callback(null, result);\r\n        });\r\n    }\r\n    getObjects(keys, options, callback, dontModify) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjects(keys, options, (err, objs) =>\r\n                    err ? reject(err) : resolve(objs), dontModify));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjects(keys, options, callback, dontModify);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getObjectsAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjects(id, options, (err, objs) =>\r\n                err ? reject(err) : resolve(objs)));\r\n    }\r\n\r\n    _getObjectsByPattern(pattern, options, callback) {\r\n        if (!pattern || typeof pattern !== 'string') {\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\r\n            return;\r\n        }\r\n\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis keys ' + keys.length + ' ' + pattern);\r\n            this._getObjects(keys, options, callback, true);\r\n        });\r\n    }\r\n    getObjectsByPattern(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectsByPattern(pattern, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectsByPattern(pattern, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getObjectsByPatternAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectsByPattern(pattern, options, (err, objs) =>\r\n                err ? reject(err) : resolve(objs)));\r\n    }\r\n\r\n    _setObject(id, obj, options, callback) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n\r\n        if (!obj) {\r\n            this.log.warn(this.namespace + ' setObject: Argument object is null');\r\n            return typeof callback === 'function' && setImmediate(() => callback('obj is null'));\r\n        }\r\n        if (typeof obj !== 'object') {\r\n            this.log.warn(this.namespace + ' setObject: Argument object is no object: ' + obj);\r\n            return typeof callback === 'function' && setImmediate(() => callback('obj is no object'));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        // make a copy of object, because we will modify it\r\n        obj = deepClone(obj);\r\n\r\n        obj._id = id;\r\n\r\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\r\n            try {\r\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n                typeof callback === 'function' && callback(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n                return;\r\n            }\r\n\r\n            if (!tools.checkNonEditable(oldObj, obj)) {\r\n                typeof callback === 'function' && callback('Invalid password for update of vendor information');\r\n                return;\r\n            }\r\n\r\n            // do not delete common settings, like \"history\" or \"mobile\". It can be erased only with \"null\"\r\n            if (oldObj && oldObj.common) {\r\n                this.preserveSettings.forEach(commonSetting => {\r\n                    // special case if \"custom\"\r\n                    if (commonSetting === 'custom') {\r\n                        if (!oldObj.common.custom) {\r\n                            // do nothing\r\n                        } else if ((!obj.common || !obj.common.custom) && oldObj.common.custom) {\r\n                            obj.common = obj.common || {};\r\n                            obj.common.custom = oldObj.common.custom;\r\n                        } else if (obj.common && obj.common.custom && oldObj.common.custom) {\r\n                            // merge together\r\n                            Object.keys(oldObj.common.custom).forEach(attr => {\r\n                                if (obj.common.custom[attr] === null) {\r\n                                    delete obj.common.custom[attr];\r\n                                } else if (obj.common.custom[attr] === undefined) {\r\n                                    obj.common.custom[attr] = oldObj.common.custom[attr];\r\n                                }\r\n                            });\r\n                        }\r\n                        // remove custom if no one attribute inside\r\n                        if (obj.common && obj.common.custom) {\r\n                            Object.keys(obj.common.custom).forEach(attr => {\r\n                                if (obj.common.custom[attr] === null) {\r\n                                    delete obj.common.custom[attr];\r\n                                }\r\n                            });\r\n                            if (!Object.keys(obj.common.custom).length) {\r\n                                delete obj.common.custom;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // remove settings if desired\r\n                        if (obj.common && obj.common[commonSetting] === null) {\r\n                            delete obj.common[commonSetting];\r\n                        } else\r\n                        // if old setting present and new setting is absent\r\n                        if (oldObj.common[commonSetting] !== undefined && (!obj.common || obj.common[commonSetting] === undefined)) {\r\n                            obj.common = obj.common || {};\r\n                            obj.common[commonSetting] = oldObj.common[commonSetting];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\r\n                if (typeof obj.common.alias.id === 'object') {\r\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                } else {\r\n                    if (typeof obj.common.alias.id !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (oldObj && oldObj.acl && !obj.acl) {\r\n                obj.acl = oldObj.acl;\r\n            }\r\n\r\n            // add user default rights\r\n            if (this.defaultNewAcl && !obj.acl) {\r\n                obj.acl = deepClone(this.defaultNewAcl);\r\n                delete obj.acl.file;\r\n                if (obj.type !== 'state') {\r\n                    delete obj.acl.state;\r\n                }\r\n                // take the owner as current user\r\n                if (options.user) {\r\n                    obj.acl.owner = options.user;\r\n                }\r\n                // take the group as current user's group\r\n                if (options.group) {\r\n                    obj.acl.ownerGroup = options.group;\r\n                } else  {\r\n                    obj.acl.ownerGroup = null;\r\n                    return this.getUserGroup(obj.acl.owner, (user, groups /* , permissions */) => {\r\n                        if (!groups || !groups[0]) {\r\n                            options.group = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n                        } else {\r\n                            options.group = groups[0];\r\n                        }\r\n                        obj.acl.ownerGroup = options.group;\r\n                        const message = JSON.stringify(obj);\r\n                        this.client.set(this.objNamespace + id, message, err => {\r\n                            if (!err) {\r\n                                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                                this.client.publish(this.objNamespace + id, message).catch(_err => {});\r\n                                // object updated -> if type changed to meta -> cache\r\n                                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\r\n                                    this.existingMetaObjects[id] = true;\r\n                                }\r\n                            }\r\n                            typeof callback === 'function' && callback(err, {id});\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.defaultNewAcl && obj.acl && !obj.acl.ownerGroup && options.group) {\r\n                obj.acl.ownerGroup = options.group;\r\n            }\r\n\r\n            const message = JSON.stringify(obj);\r\n            this.client.set(this.objNamespace + id, message, err => {\r\n                if (!err) {\r\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                    this.client.publish(this.objNamespace + id, message).catch(_err => {});\r\n                }\r\n                // object updated -> if type changed to meta -> cache\r\n                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\r\n                    this.existingMetaObjects[id] = true;\r\n                }\r\n                typeof callback === 'function' && callback(err, {id});\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * set anew or update object\r\n     *\r\n     * This function writes the object into DB\r\n     *\r\n     * @alias setObject\r\n     * @memberof objectsInMemServer\r\n     * @param {string} id ID of the object\r\n     * @param {object} obj\r\n     * @param {object} options options for access control are optional\r\n     * @param {function} callback return function\r\n     */\r\n    setObject(id, obj, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.setObject(id, obj, options, (err, res) =>\r\n                    err ? reject(err) : resolve(res)));\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._setObject(id, obj, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    setObjectAsync(id, obj, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.setObject(id, obj, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    _delObject(id, options, callback) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        // read object\r\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\r\n            if (err) {\r\n                this.log.warn(this.namespace + ' redis get ' + id + ', error - ' + err);\r\n            } else {\r\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + oldObj);\r\n            }\r\n            if (!oldObj) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            try {\r\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n            } catch (e) {\r\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n            }\r\n\r\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\r\n                typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n            } else {\r\n                this.client.del(this.objNamespace + id, err => {\r\n                    if (!err) {\r\n                        //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' null');\r\n                        this.client.publish(this.objNamespace + id, 'null').catch(_err => {});\r\n                        // object has been deleted -> remove from cached meta if there\r\n                        if (this.existingMetaObjects[id]) {\r\n                            this.existingMetaObjects[id] = false;\r\n                        }\r\n                    }\r\n                    typeof callback === 'function' && callback(err);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    delObject(id, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.delObject(id, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_DELETE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._delObject(id, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    delObjectAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.delObject(id, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    // this function is very ineffective. Because reads all objects and then process them\r\n    async _applyViewFunc(func, params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        const result = {\r\n            rows: []\r\n        };\r\n\r\n        // filters objs which are already present in array by property 'id'\r\n        const filterDuplicates = arr => {\r\n            const included = {};\r\n            const filteredArr = arr.filter(obj => {\r\n                if (included[obj.id]) {\r\n                    return false;\r\n                } else {\r\n                    included[obj.id] = true;\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            return filteredArr;\r\n        };\r\n\r\n        params = params || {};\r\n        params.startkey = params.startkey || '';\r\n        params.endkey   = params.endkey   || '\\u9999';\r\n        const wildcardPos = params.endkey.indexOf('\\u9999');\r\n        let wildCardLastPos = true;\r\n        if (wildcardPos !== -1 && wildcardPos !== params.endkey.length - 1) {\r\n            wildCardLastPos = false; // TODO do in LUA\r\n        }\r\n        let m;\r\n\r\n        // if start and and end keys are equal modify end key\r\n        if (params.startkey === params.endkey) {\r\n            params.endkey = params.endkey + '\\u0000';\r\n        }\r\n\r\n        // filter by type\r\n        if (wildCardLastPos && func && func.map && this.scripts.filter && (m = func.map.match(/if\\s\\(doc\\.type\\s?===?\\s?'(\\w+)'\\)\\semit\\(([^,]+),\\s?doc\\s?\\)/))) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.filter, 5, this.objNamespace, params.startkey, params.endkey, m[1], cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        objs = objs || [];\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            if (m[2] && m[2].trim() === 'doc._id') {\r\n                                return {id: obj._id, value: obj};\r\n                            } else if (m[2] && m[2].trim() === 'doc.common.name' && obj.common) {\r\n                                return {id: obj.common.name, value: obj};\r\n                            } else {\r\n                                this.log.error(`${this.namespace} Cannot filter \"${m[2]}\": ${JSON.stringify(obj)}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // Now we have all objects -> calculate max if desired\r\n            if (func.reduce === '_stats') {\r\n                let max = null;\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    if (max === null || result.rows[i].value > max) {\r\n                        max = result.rows[i].value;\r\n                    }\r\n                }\r\n                if (max !== null) {\r\n                    result.rows = [{id: '_stats', value: {max: max}}];\r\n                } else {\r\n                    result.rows = [];\r\n                }\r\n            }\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && allback(null, result);\r\n        } else\r\n        // filter by script\r\n        if (wildCardLastPos && func && func.map && this.scripts.script && func.map.indexOf('doc.common.engineType') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.script, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            return {id: obj._id, value: obj};\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by hm-rega programs\r\n        if (wildCardLastPos && func && func.map && this.scripts.programs && func.map.indexOf('doc.native.TypeName === \\'PROGRAM\\'') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.programs, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            return {id: obj._id, value: obj};\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while(cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by hm-rega variables\r\n        if (wildCardLastPos && func && func.map && this.scripts.variables && func.map.indexOf('doc.native.TypeName === \\'ALARMDP\\'') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.variables, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            return {id: obj._id, value: obj};\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by custom, redis also returns if common.custom is not present\r\n        if (wildCardLastPos && func && func.map && this.scripts.custom && func.map.indexOf('doc.common.custom') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.custom, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        objs.forEach(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                            }\r\n                            if (obj.common && obj.common.custom) {\r\n                                result.rows.push({id: obj._id, value: obj.common.custom});\r\n                            }\r\n                        });\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else {\r\n            this.log.debug(`${this.namespace} No suitable Lua script, fallback to keys!: ${func.map}`);\r\n\r\n            let searchKeys = this.objNamespace + '*';\r\n            if (wildcardPos !== -1) { // Wildcard included\r\n                searchKeys = this.objNamespace + params.endkey.replace(/\\u9999/g, '*');\r\n            }\r\n            // todo: also use scan on fallback\r\n            this.client.keys(searchKeys, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                const endAfterWildcard = params.endkey.substr(wildcardPos + 1);\r\n                params.startkey = this.objNamespace + params.startkey;\r\n                params.endkey   = this.objNamespace + params.endkey;\r\n\r\n                keys = keys.sort().filter(key => {\r\n                    if (key && !utils.regCheckId.test(key)) {\r\n                        if (params && wildcardPos > 0) {\r\n                            if (params.startkey && key < params.startkey) {\r\n                                return false;\r\n                            }\r\n                            if (params.endkey   && key > params.endkey)   {\r\n                                return false;\r\n                            }\r\n                        } else\r\n                        if (params && wildcardPos === 0) {\r\n                            if (!key.endsWith(endAfterWildcard)) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n                this.client.mget(keys, (err, objs) => {\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    function _emit_(id, obj) {\r\n                        result.rows.push({id: id, value: obj});\r\n                    }\r\n\r\n                    const f = eval('(' + func.map.replace(/^function\\(([a-z0-9A-Z_]+)\\)/g, 'function($1, emit)') + ')');\r\n\r\n                    objs = objs || [];\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        try {\r\n                            objs[i] = JSON.parse(objs[i]);\r\n                        } catch (e) {\r\n                            this.log.error(this.namespace + ' Cannot parse JSON ' + keys[i] + ':  ' + objs[i]);\r\n                            continue;\r\n                        }\r\n                        if (!utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (objs[i]) {\r\n                            try {\r\n                                f(objs[i], _emit_);\r\n                            } catch (e) {\r\n                                this.log.error(this.namespace + ' Cannot execute map: ' + e.message);\r\n                            }\r\n                        }\r\n                    }\r\n                    // Calculate max\r\n                    if (func.reduce === '_stats') {\r\n                        let max = null;\r\n                        for (let i = 0; i < result.rows.length; i++) {\r\n                            if (max === null || result.rows[i].value > max) {\r\n                                max = result.rows[i].value;\r\n                            }\r\n                        }\r\n                        if (max !== null) {\r\n                            result.rows = [{id: '_stats', value: {max: max}}];\r\n                        } else {\r\n                            result.rows = [];\r\n                        }\r\n                    }\r\n                    typeof callback === 'function' && callback(null, result);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _applyView(func, params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this._applyView(func, params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && callback(err);\r\n                } else {\r\n                    return this._applyViewFunc(func, params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _getObjectView(design, search, params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        this.client.get(this.objNamespace + '_design/' + design, (err, obj) => {\r\n            if (obj) {\r\n                try {\r\n                    obj = JSON.parse(obj);\r\n                } catch (e) {\r\n                    this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                    return typeof callback === 'function' && callback(new Error('Cannot parse JSON: \"' + '_design/' + design + '\" / \"' + obj + '\"'));\r\n                }\r\n\r\n                if (obj.views && obj.views[search]) {\r\n                    this._applyViewFunc(obj.views[search], params, options, callback);\r\n                } else {\r\n                    this.log.error(`${this.namespace} Cannot find search \"${search}\" in \"${design}\"`);\r\n                    typeof callback === 'function' && callback(new Error('Cannot find search \"' + search + '\" in \"' + design + '\"'));\r\n                }\r\n            } else {\r\n                this.log.error(`${this.namespace} Cannot find view \"${design}\" for search \"${search}\" : ${err}`);\r\n                typeof callback === 'function' && callback(new Error('Cannot find view \"' + design + '\"'));\r\n            }\r\n        });\r\n    }\r\n    getObjectView(design, search, params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectView(design, search, params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectView(design, search, params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectViewAsync(design, search, params, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectView(design, search, params, options, (err, arr) =>\r\n                err ? reject(err) : resolve(arr)));\r\n    }\r\n\r\n    _getObjectList(params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        //params = {startkey, endkey, include_docs}\r\n        params = params || {};\r\n        params.startkey = params.startkey || '';\r\n        params.endkey = params.endkey || '\\u9999';\r\n        const pattern = (params.endkey.substring(0, params.startkey.length) === params.startkey) ? this.objNamespace + params.startkey + '*' : this.objNamespace + '*';\r\n\r\n        // todo: use lua script for this\r\n        this.client.keys(pattern, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const _keys = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const id = keys[i].substring(this.objNamespaceL);\r\n                if (params.startkey && id < params.startkey) {\r\n                    continue;\r\n                }\r\n                if (params.endkey && id > params.endkey) {\r\n                    continue;\r\n                }\r\n                if (!id || utils.regCheckId.test(id) || id.match(/\\|file\\$%\\$/)) {\r\n                    continue;\r\n                }\r\n                if (!params.include_docs && id[0] === '_') {\r\n                    continue;\r\n                }\r\n                _keys.push(keys[i]);\r\n            }\r\n            _keys.sort();\r\n            this.client.mget(_keys, (err, objs) => {\r\n                // return rows with id and doc\r\n                const result = {\r\n                    rows: []\r\n                };\r\n                if (objs) {\r\n                    for (let r = 0; r < objs.length; r++) {\r\n                        try {\r\n                            objs[r] = JSON.parse(objs[r]);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[r]}: ${objs[r]}`);\r\n                            continue;\r\n                        }\r\n\r\n                        if (!objs[r] || !utils.checkObject(objs[r], options, utils.CONSTS.ACCESS_READ)) {\r\n                            continue;\r\n                        }\r\n                        result.rows.push({id: objs[r]._id, value: objs[r], doc: objs[r]});\r\n                    }\r\n                }\r\n                typeof callback === 'function' && callback(null, result);\r\n            });\r\n        });\r\n    }\r\n    getObjectList(params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectList(params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectList(params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectListAsync(params, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectList(params, options, (err, arr) =>\r\n                err ? reject(err) : resolve(arr)));\r\n    }\r\n\r\n    // could be optimised, to read object only once. Now it will read 3 times\r\n    _extendObject(id, obj, options, callback, _iteration) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate (() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\r\n            try {\r\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${oldObj}`);\r\n                oldObj = null;\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n            }\r\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n            }\r\n\r\n            let _oldObj;\r\n            if (oldObj && oldObj.nonEdit) {\r\n                // copy object\r\n                _oldObj = deepClone(oldObj);\r\n            }\r\n\r\n            oldObj = oldObj || {};\r\n            oldObj = extend(true, oldObj, deepClone(obj)); // copy here to prevent \"sandboxed\" objects from JavaScript adapter\r\n            oldObj._id = id;\r\n\r\n            // add user default rights\r\n            if (this.defaultNewAcl && !oldObj.acl) {\r\n                oldObj.acl = deepClone(this.defaultNewAcl);\r\n                delete oldObj.acl.file;\r\n                if (oldObj.type !== 'state') {\r\n                    delete oldObj.acl.state;\r\n                }\r\n\r\n                if (options.owner) {\r\n                    oldObj.acl.owner = options.owner;\r\n\r\n                    if (!options.ownerGroup) {\r\n                        oldObj.acl.ownerGroup = null;\r\n                        return this.getUserGroup(options.owner, (user, groups /*, permissions */) => {\r\n                            if (!groups || !groups[0]) {\r\n                                options.ownerGroup = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n                            } else {\r\n                                options.ownerGroup = groups[0];\r\n                            }\r\n                            this._extendObject(id, obj, options, callback);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.defaultNewAcl && options.ownerGroup && oldObj.acl && !oldObj.acl.ownerGroup) {\r\n                oldObj.acl.ownerGroup = options.ownerGroup;\r\n            }\r\n\r\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\r\n                if (typeof obj.common.alias.id === 'object') {\r\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                } else {\r\n                    if (typeof obj.common.alias.id !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (_oldObj && !tools.checkNonEditable(_oldObj, oldObj)) {\r\n                return typeof callback === 'function' && callback('Invalid password for update of vendor information');\r\n            }\r\n            const message = JSON.stringify(oldObj);\r\n            this.client.set(this.objNamespace + id, message, err => {\r\n                if (!err) {\r\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                    this.client.publish(this.objNamespace + id, message)\r\n                        .catch(_err => {});\r\n                    // extended -> if its now type meta and currently marked as not -> cache\r\n                    if (this.existingMetaObjects[id] === false && oldObj && oldObj.type === 'meta') {\r\n                        this.existingMetaObjects[id] = true;\r\n                    }\r\n                }\r\n                typeof callback === 'function' && callback(err, {id: id, value: oldObj}, id);\r\n            });\r\n        });\r\n    }\r\n    extendObject(id, obj, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.extendObject(id, obj, options, (err, res) =>\r\n                    err ? reject(err) : resolve(res)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._extendObject(id, obj, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    extendObjectAsync(id, obj, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.extendObject(id, obj, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    setConfig(id, obj, options, callback) {\r\n        return this.setObject(id, obj, options, callback);\r\n    }\r\n\r\n    delConfig(id, options, callback) {\r\n        return this.delObject(id, options, callback);\r\n    }\r\n\r\n    getConfig(id, options, callback) {\r\n        return this.getObject(id, options, callback);\r\n    }\r\n\r\n    getConfigs(keys, options, callback, dontModify) {\r\n        return this.getObjects(keys, options, callback, dontModify);\r\n    }\r\n\r\n    _findObject(idOrName, type, options, callback) {\r\n        this._getObject(idOrName, options, (err, obj) => {\r\n            // Assume it is ID\r\n            if (obj && utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ) && (!type || (obj.common && obj.common.type === type))) {\r\n                typeof callback === 'function' && callback(null, idOrName, obj.common.name);\r\n            } else {\r\n                this._getKeys('*', options, (err, keys) =>\r\n                    this.client.mget(keys, (err, objs) => {\r\n                        objs = objs || [];\r\n                        // Assume it is name\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                objs[i] = JSON.parse(objs[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                                continue;\r\n                            }\r\n                            if (objs[i].common &&\r\n                                objs[i].common.name === idOrName &&\r\n                                (!type || (objs[i].common && objs[i].common.type === type))) {\r\n                                return typeof callback === 'function' && callback(null, objs[i]._id, idOrName);\r\n                            }\r\n                        }\r\n                        typeof callback === 'function' && callback(null, null, idOrName);\r\n                    }), true);\r\n            }\r\n        });\r\n    }\r\n    findObject(idOrName, type, options, callback) {\r\n        if (typeof type === 'function') {\r\n            callback = type;\r\n            options = null;\r\n            type = null;\r\n        }\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.findObject(idOrName, type, options, (err, id, _idOrName) =>\r\n                    err ? reject(err) : resolve(id)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_LIST, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._findObject(idOrName, type, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    findObjectAsync(idOrName, type, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.findObject(idOrName, type, options, (err, id, _idOrName) =>\r\n                err ? reject(err) : resolve(id)));\r\n    }\r\n\r\n    // can be called only from js-controller\r\n    addPreserveSettings(settings) {\r\n        if (!Array.isArray(settings)) {\r\n            settings = [settings];\r\n        }\r\n\r\n        for (let s = 0; s < settings.length; s++) {\r\n            if (this.preserveSettings.indexOf(settings[s]) === -1) {\r\n                this.preserveSettings.push(settings[s]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _destroyDBHelper(keys, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            this.client.del(id, _err =>\r\n                setImmediate(() => this._destroyDBHelper(keys, callback)));\r\n        }\r\n    }\r\n    _destroyDB(options, callback) {\r\n        if (!this.client) {\r\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        } else {\r\n            this.client.keys(this.redisNamespace + '*', (err, keys) =>\r\n                this._destroyDBHelper(keys, callback));\r\n        }\r\n    }\r\n    destroyDB(options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                if (!options.acl.file.write || options.user !== utils.CONSTS.SYSTEM_ADMIN_USER) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._destroyDB(options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    destroyDBAsync(options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.destroyDB(options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    // Destructor of the class. Called by shutting down.\r\n    destroy() {\r\n        this.stop = true;\r\n        if (this.client) {\r\n            try {\r\n                this.client.quit(() =>\r\n                    this.client = null);\r\n            } catch (e) {\r\n                // ignore error\r\n            }\r\n\r\n        }\r\n        if (this.sub) {\r\n            try {\r\n                this.sub.quit(() =>\r\n                    this.sub = null);\r\n            } catch (e) {\r\n                // ignore error\r\n            }\r\n        }\r\n        if (this.subSystem) {\r\n            try {\r\n                this.subSystem.quit(() =>\r\n                    this.subSystem = null);\r\n            } catch (e) {\r\n                // ignore error\r\n            }\r\n        }\r\n    }\r\n\r\n    loadLuaScripts(callback, _scripts) {\r\n        if (!_scripts) {\r\n            if (scriptFiles && scriptFiles.filter) {\r\n                _scripts = [];\r\n                for (const name in scriptFiles) {\r\n                    if (!scriptFiles.hasOwnProperty(name)) {\r\n                        continue;\r\n                    }\r\n                    const shasum = crypto.createHash('sha1');\r\n                    const buf = Buffer.from(scriptFiles[name]);\r\n                    shasum.update(buf);\r\n                    _scripts.push({\r\n                        name,\r\n                        text: buf,\r\n                        hash: shasum.digest('hex')\r\n                    });\r\n                }\r\n            } else {\r\n                _scripts = fs.readdirSync(__dirname + '/lua/').map(name => {\r\n                    const shasum = crypto.createHash('sha1');\r\n                    const script = fs.readFileSync(__dirname + '/lua/' + name);\r\n                    shasum.update(script);\r\n                    const hash = shasum.digest('hex');\r\n                    return {name: name.replace(/\\.lua$/, ''), text: script, hash};\r\n                });\r\n            }\r\n            const hashes = _scripts.map(e => e.hash);\r\n            hashes.unshift('EXISTS');\r\n\r\n            if (!this.client) {\r\n                return;\r\n            }\r\n\r\n            return this.client.script(hashes, (err, arr) => {\r\n                arr && _scripts.forEach((e, i) => _scripts[i].loaded = !!arr[i]);\r\n                this.loadLuaScripts(callback, _scripts);\r\n            });\r\n        }\r\n\r\n        if (!this.client) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < _scripts.length; i++) {\r\n            if (!_scripts[i].loaded) {\r\n                const script = _scripts[i];\r\n                return this.client.script(['LOAD', script.text], (err, hash) => {\r\n                    script.hash = hash;\r\n                    script.loaded = !err;\r\n                    err && this.log.error(this.namespace + ' Cannot load \"' + script.name + '\": ' + err);\r\n                    setImmediate(() => this.loadLuaScripts(callback, _scripts));\r\n                });\r\n            }\r\n        }\r\n        this.scripts = {};\r\n        _scripts.forEach(e => this.scripts[e.name] = e.hash);\r\n        typeof callback === 'function' && callback();\r\n    }\r\n}\r\n\r\nmodule.exports = ObjectsInRedis;"],"file":"../../dist/index.js"}