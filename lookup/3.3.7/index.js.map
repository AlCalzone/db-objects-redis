{"version":3,"sources":["index.js"],"names":["_0x563c4e","require","_0x10ce34","_0x3fdb6a","_0x2eb7ff","_0x59cd8c","isDeepStrictEqual","_0x4fddc8","_0x5a8206","_0xaf977a","__dirname","_0x3e1020","_0x226bf4","_0x5ac944","_0x5f167e","_0x26dafe","_0x37a145","_0x5af64a","_0x314bc4","Object","_0x25d63c","Array","undefined","JSON","console","_0x14716b","_0x28d3c7","_0x6f1447","_0x285e4e","_0x2fda04","_0x39ad35","_0x5685d6","_0x477e3d","_0x2574e7","_0x4bffea","_0x43d4f2","_0x4c0c47","_0x67dd5d","constructor","_0x232c40","_0x50b4c2","_0x123474","RegExp","_0x5ec7eb","_0x4f2f6b","_0x14db94","_0x236918","_0x2a35aa","_0x59078a","_0x3118e9","_0x412eeb","Error","_0x1b0fc1","_0x40c2ef","_0x5c505f","_0x187897","_0x342ef1","_0x277a0d","_0x129e89","_0x1d75c0","_0x26a7f7","_0x31e574","_0x4a358c","setImmediate","_0x4349a1","_0x40addd","_0x338fad","_0x3aecc2","_0xa374e7","_0x4bd53e","_0x1fcc25","_0x2eb694","_0x2c962a","_0x1c9615","_0x4e95c0","_0x3d5291","_0x3ca889","_0x9694ad","_0x39258b","_0x128c82","_0x421524","_0x444672","_0x91da52","_0x1f5e0a","_0x4def4e","_0x121001","Promise","_0x4d6c6a","_0x2de1af","_0x45561a","_0x446cc8","Buffer","_0x1d0e2f","_0x287d8e","_0x1eb0b8","_0x13376f","_0x39cc95","_0x412d26","_0x442cb9","_0x105294","_0x46e2e3","_0x26c8ea","_0x56c803","_0x5a1786","_0x28ecad","_0x340aa8","_0x146900","_0x30eb66","_0x562ce2","_0x4ea43f","_0x17894a","_0x736d0b","_0x5e5479","_0x2c1003","_0x2324e8","_0x26ba6c","_0x386ff7","_0x2622d2","_0xa239fa","_0x49bbb6","_0x34136e","_0x37f580","_0x26adbc","_0x3f0be3","_0x218286","_0x7f0620","_0xcbb3c1","_0x4b6e02","_0x1ec1ca","_0x67411e","_0x2616b6","_0x12122a","_0x1360ec","_0x298311","_0x5c2d00","_0x41e6b1","_0x593624","_0x55317f","_0x45fda6","_0x2d82bf","_0x2d6939","_0x5a884c","_0x380213","_0x2a9b5e","_0x8686d3","_0x3d8ad3","_0x441086","_0x1cfc6e","_0x35cf49","Date","_0x213e16","_0x3db8f3","_0x3e24cc","_0x312d30","_0x5b9621","_0x1dba20","_0x533f30","_0x5a204e","_0x3fea81","_0x53c9fb","_0x3531da","_0x4cb4d6","_0x57beaf","_0x26709b","_0x5e03c6","_0x1aecc8","_0x30fda3","_0x1937e5","_0x7f72f3","_0x54590c","_0x142f5d","_0x55ac93","_0x15a5da","_0x3be98d","_0x18e6db","_0x5a6dc7","_0x1d4bfd","_0x311f66","_0x5f5d52","_0x3fb462","_0xc9becf","_0xca0593","_0xf1805d","_0x27f4ad","_0x1bbd36","_0x401af8","_0x4daed2","_0x411cb8","_0x3d8f32","_0x3cda07","_0x55cca4","_0x144f25","_0x39cfa8","_0x3763ea","_0x34d283","_0x17e49c","_0x2066b7","_0x21fa0a","_0x53e128","_0x36692e","_0x262aa1","_0x1e4335","_0xcbbb34","_0x596a15","_0x2b71b4","_0x51a08d","_0x5f3d29","_0x58d1dc","_0x587757","_0x4da126","_0x120543","_0x4fe56c","_0x38ba0c","_0xcab73f","_0x381d86","_0x3666de","_0x3c5672","_0x1c6d64","_0x52959f","_0xc4b7a1","_0x408076","_0x315dfa","_0x30886f","_0x5bd96e","_0x323dad","_0x2a3a7d","_0x5d724a","_0xcd230c","_0x27c828","_0x6e7779","_0x506d39","_0x5ddbd6","_0x20de72","_0x3fb43d","_0x1902f5","_0x187ae7","_0x5cdc2e","_0x2e56fc","_0x5d9a23","_0x50a09d","_0x54eb93","_0x53f16a","_0x241553","_0x1ce550","_0x49dffd","_0xbda6cc","_0x33c32f","_0x358872","_0x3e3253","_0x1671d0","_0x38cf0c","_0x2393be","_0x5101ea","_0x12a865","_0x46c2bf","_0x2bc9a3","_0x5ef2b6","_0x1b346c","_0x20997c","_0x54531f","_0x580880","_0x595f35","_0x3cf382","_0x273884","_0x40a669","_0x3bc50a","_0x25168c","_0x50e811","_0x3e54e6","_0x10073a","_0x7ddc99","_0x5db63e","_0x47ee6e","_0x424e73","_0x53a310","_0x4398f0","_0x3c362b","_0x240745","_0x49e7f3","_0x2a3e42","_0x14a842","_0x20dae1","_0x594347","_0x2a89b6","_0x105fab","_0x2a79b6","_0x425814","_0x3b704f","_0x125487","_0x220d63","_0x64efb6","_0x2b6d6b","_0x18c664","_0x337f2a","_0x3ca445","_0x439ce0","_0x3e764b","_0x3d9eb9","_0x38c520","_0x4b9e23","_0x536121","_0x48fd34","_0x37557a","_0x170e41","_0x55984b","_0xf6ba7","_0x463b79","_0x286f72","_0x36d8cc","_0x14c8d7","_0xb52984","_0x57a9b4","_0x4c8f02","_0x12ee67","_0x55d952","_0x4c30ed","_0x401398","_0x5dc878","_0x122690","_0xdb777a","_0x5bd812","_0x10d385","_0x113dba","_0x3b58af","_0x44dc3f","_0x4672b8","_0x5d30be","_0x2103a7","_0x26ab06","_0x5c0e3b","_0x5e6569","_0x4a5f4f","_0x3beddd","_0x54f146","_0x30a9f8","_0x8f1e6a","_0x93663a","_0x128888","_0x26184e","_0x262926","_0x476c9b","_0x3b4b7f","_0x1e0e4a","_0x44fbbc","_0x2a3d33","_0x4797e7","_0x43a597","_0x137af4","_0x6ba0c2","_0x498ebd","_0x233b60","_0x3dbcd6","_0x589c15","_0x3c431c","_0x2f1697","_0x28d9fe","_0x175cef","_0x1136c3","_0x19bb40","_0x14fefc","_0x181a26","_0x2a678b","_0x3ad72a","_0x2f2bdd","_0x1185da","_0x27cae7","_0x35e62f","_0x1bba97","_0x34fc6f","_0x515cae","_0x140baf","_0x162a00","_0x15e7e6","_0x43c8b9","_0x46eac9","_0x3c4416","_0x31339d","_0x42f0e8","_0x3d6345","_0x3a8aa5","_0x3b51bc","_0xeed3e6","_0x159ec9","_0x2a3795","_0x1e6e8c","_0xdcbdce","_0x3ffa58","_0x375876","_0x221d1a","_0x543454","_0x56fabc","_0x1d8c6e","_0x333a47","_0x53e651","_0x44b7e3","_0x3b97d3","_0x445dae","_0x44156f","_0x35297c","_0x5d9017","_0x230277","_0x2a523e","_0x209db1","_0x35c76d","_0x5bb756","_0x444f69","_0x294be0","_0x542a6e","_0x585e96","_0x357794","_0x1bf9d4","_0x9563af","_0x2e75ae","_0x4ac524","_0x4a3b2d","_0x1ae5ab","_0x6cb6a5","_0x275c26","_0x326ea7","_0x2eaf61","_0x23cd01","_0x55daf9","_0x59743b","_0x566633","_0x5c2c14","_0x507316","_0x148eb8","_0x46ad49","_0x1b93aa","_0x406202","_0x1181c7","_0x72551d","_0x23e54b","_0x42eec9","_0x31d696","_0x21ef4f","_0x334035","_0x5057ac","_0x40faf2","_0x281571","_0x13075f","_0x31e22f","_0x3538fa","_0x27a45e","_0x39c88e","_0x57a0a9","_0x586a95","_0x1872d0","_0x283bfc","_0x45022f","_0x595bab","_0x453bf0","_0x16b3af","_0x576204","_0x4b5ed6","_0xf6a498","_0x1fc259","_0x28b27e","_0x19d3e3","_0x58efb2","_0x5a51f6","_0x5e28b3","_0x5d6499","_0x58ed52","_0x4f02e9","_0x3fc2f4","_0x57cf92","_0x40ab7f","_0x2f016a","_0x409a28","_0x5ea6e0","_0x55a11c","_0x4c2db4","_0x43505e","_0x7d3760","_0x435129","_0x44959d","_0x371969","_0x1461b2","_0x5c6ba5","_0x84366d","_0x2712c6","_0x27a464","_0x227f10","_0x5a0be2","_0x21a38d","parseInt","_0x361bd7","_0x2a9401","_0x5ac48f","_0x3f6e5d","_0x368ef9","_0x15c5a4","_0x5f34cc","_0x517fe0","_0x18308d","_0x4f2537","_0x36f7ba","_0x3a3c9d","_0x346c7a","_0x170f17","_0x315c22","_0x3142c7","_0x24c8b6","_0x4b59c1","_0x55f074","_0x605fe3","_0x500a09","_0x2f8f66","_0x1c7a9a","_0x55f009","_0x3e7143","_0x109794","_0x7d370e","_0x57ed8f","_0x38fddb","_0x10d296","_0x17ca1e","_0x4360a8","_0x418920","_0x36967f","_0x24bc0b","_0xc4752a","_0x4e2e30","_0xedd4fd","_0x4b039a","_0x12402b","_0x2497c9","_0x2c035e","_0x29e295","_0xd23644","_0x50354a","_0x5b3d84","_0x871519","_0x5e20bb","_0x2b76a5","_0x22c70a","_0x35f9aa","_0x35c28f","_0x14176e","_0x1651b9","_0x1698ad","_0x14072a","_0x55d829","_0x343811","_0x44f35e","_0x2eb6a2","_0x26cfc8","_0x352bcf","_0x7e5cbc","_0x17aa72","_0x59f433","_0x2a9a8a","_0x21d7cc","_0x2266e7","_0x830c5d","_0x1bf849","_0x2b84db","_0x360ce9","_0x101d4a","_0x175c42","_0x4d19cf","_0x147212","_0xcfed77","_0x206fc2","_0x25f334","_0xeb6ee9","_0x48f5a0","_0x3f6dd5","_0x51144d","_0x41da57","_0x21fcf7","_0x190e76","_0x22c150","_0x3e74d0","_0x34cc56","_0x489f43","_0x1aeb53","_0x473fd1","_0x12ad3b","_0x28f33a","_0x371998","_0x2fe392","_0x1a6bc0","_0x2efd0a","_0x1f8d7e","_0x190209","_0xf46784","_0x5df5d9","_0x57acb0","_0x41e83e","_0x72be12","_0x57498c","_0xbb0811","_0x367f4","_0x2121f4","_0xbe5fa9","_0xd75ff","_0x34eda3","_0x5b0e9f","_0x42420f","_0x4a61fb","_0x18e4ca","_0x14c13a","_0x35ca57","_0x50f863","_0xee4fb5","_0x5c3120","_0x58cf80","_0x40f6e2","_0x28419a","_0x151c03","_0x2c8efb","_0x2197f6","_0x77292a","_0x4302ef","_0x312a33","_0x2ea639","_0x407306","_0x1d1435","_0x333da5","_0x170b81","_0x34c93a","_0x5c201c","_0x16314e","_0x2d1268","_0x19a378","_0x1b44ba","_0x34b529","_0x1e949b","_0x25ac19","_0x285f0c","_0x968e84","_0x8aa643","_0x37e0a4","_0x16e8d2","_0xa9f40f","_0x1b8d11","_0x3354cb","_0x4a765e","_0x222866","_0x67e256","_0x91e061","_0x2d767b","_0x5a130a","_0x27e7f6","_0x3f732c","_0x1cb2fb","_0x11e7a6","_0x21aa62","_0x187e7e","_0x24578b","_0x46af0b","_0x2d20c3","_0x41c11b","_0x2cabf","_0x2e57f3","_0x2ecf9c","_0x142b8d","_0x4cc44e","_0x324890","_0x3a1f13","_0x2068b4","_0x43c555","_0x29983a","_0x4378d9","_0xac9ea2","_0x43ade6","_0x103c30","_0xc0faa1","_0x55b37b","_0xee19b9","_0x43d22d","_0x67874f","_0x452077","_0x398ec2","_0x48d9d4","_0x4a5a9f","_0x361818","_0x571a91","_0x291efc","_0x142621","_0x58b9f6","_0x1600bb","_0x2a2ba9","_0x43f915","_0x37b1f0","_0x43852f","_0x10d739","_0x3be30e","_0x24d11b","_0x5d15f0","_0x3d1b0a","_0x1af60a","_0x28457d","_0x342a6c","_0x24bc35","_0x3690f6","_0x36334b","_0x47d439","_0x3940e0","_0x27382a","_0x23fd6e","_0xda1c11","_0x205542","_0xffa20b","_0x47e065","_0x5a3c75","_0x13a28b","_0x434db6","_0xe28df1","_0x3aa7b1","_0x5e96dd","_0x24aea5","_0xf57dd6","_0x4a2bb6","_0x35eaef","_0x45dfe4","_0x21c95f","_0x1e4373","_0x19489a","_0x25ffab","_0x412c0c","_0x4000fe","_0x4b3603","_0x3dc996","_0x33372b","_0x28ad5f","_0x498cda","_0x53bb23","_0x5df328","_0x38efc7","_0x5cb3d6","_0x2b8af3","_0x137a74","_0x3bcfd7","_0x4a5f67","_0x41300e","_0x355bd8","_0x18aa14","_0x49ec26","_0x344ec2","_0x10f924","_0xa64d94","_0x1034d8","_0xae1dc1","_0x17336b","_0x400c5a","_0x5864bf","_0x4f39a0","_0x31845d","_0x4dfaae","_0x3c6663","_0x309832","_0x3763a1","_0x12e051","_0x8889a5","_0x4ef03b","_0x468eca","_0x190c63","_0xcecac6","_0x33b695","_0x3f1826","_0x4a5bd7","_0x15af79","_0x5042c0","_0x5ea861","_0x1e4543","_0x1edb71","_0x22b736","_0xd1a872","_0x80871e","_0x4476c2","_0x29dd3e","_0xd93eb4","_0x4959f4","_0x456434","_0x2c99f4","_0x470796","_0x1d62b8","_0x391c13","_0x305eaa","_0x1c3472","_0x48f0e9","_0x6cf495","_0x3665f1","_0x194d0d","_0x599dd4","_0x40e675","_0x255a65","_0x2b57f0","_0x3a101e","_0x207098","_0x4bf586","_0x41ce24","_0x45d3ca","_0x1996d1","_0x49b712","_0x2ccaf9","_0x51a03e","_0x45439b","_0x37a778","_0x4fb30a","_0x5e9ab2","_0x223758","_0x4ea904","_0x3f8004","_0x5f8353","_0x516afe","_0x5c55e8","_0x35ab30","_0x54a9aa","_0x51fa3","_0x5dcc06","_0x4cf226","_0x4cdac1","_0x5dde99","_0x4dd57e","_0x5b53fb","_0x4db494","_0x2723bd","_0x1877cf","_0x1c197c","_0x2c17dd","_0x3cf04f","_0x3a8cb9","_0x2772f5","_0x3770a6","_0x244b9e","_0x163717","_0x58932d","_0x303478","_0x1c1003","_0x40c49a","_0x272af7","_0x2444ec","_0x1fad5c","_0x221013","_0x2a18e9","_0x55a3aa","_0x547dfc","_0x2a348f","_0x2e161c","_0x173aae","_0x4549dd","_0x2fdb85","_0x450c12","_0x2c002a","_0x2f54c0","_0x2dffde","_0x41f50c","_0x25576e","_0x530abf","eval","_0x5c6481","_0x217c6b","_0x267bf2","_0x5049d1","_0x2e040b","_0x5cd592","_0x578ae6","_0x4ed1a6","_0x48572c","_0x514eb2","_0x41f5cd","_0x49755c","_0x3c6ebe","_0x23e66b","_0x3138ef","_0xb69f9a","_0x183bdf","_0x3d926a","_0x4150ee","_0xa836dd","_0x22720c","_0x55abac","_0x34a9b9","_0x132abb","_0x2f0769","_0x4d3916","_0x5c16b3","_0x289e7b","_0x20c6bc","_0x447afa","_0x37debf","_0x4a66c2","_0xc0b2fa","_0xf58a5d","_0x5d273a","_0x585b27","_0x1aac6d","_0x2c457b","_0xc68f00","_0x141e34","_0x458836","_0x148f61","_0x1c57e5","_0x4126b1","_0x379db5","_0x33f5cd","_0x133ea9","_0x30a4d8","_0x2d338c","_0xf9f7fc","_0x5726bd","_0x13dc58","_0x3c8a40","_0x4ece84","_0x250dc1","_0x14e193","_0x4ab79f","_0x5151b8","_0x52ac6e","_0x1d9921","_0x9e069f","_0x52a797","_0x2b652e","_0x559bb4","_0x2e0c74","_0x2b5132","_0x1e6c35","_0x353594","_0x3c3b9a","_0x19a1b9","_0x3f91e3","_0x41cdef","_0x56a2e2","_0x113348","_0x1c5709","_0x4df10b","_0xf27d2b","_0x2cbf37","_0x520978","_0x383a44","_0x4c496f","_0x4d8488","_0x5ef0a7","_0x54e5e3","_0x462b5d","_0x404f23","_0x3885c9","_0x2d453d","_0x451e66","_0x547a1b","_0x2f0fa4","_0x57bfe1","_0x478408","_0x4bca76","_0x251ee5","_0x1e15e8","_0x5f1347","_0x38a859","_0x2a5c23","_0x4a2470","_0x44072c","_0x6ca8ef","_0x42c71c","_0x4c3020","_0x2bb509","_0x59b105","_0x4e1888","_0x43e39d","_0x141e32","_0x3b9d25","_0x1cd442","_0x2bd487","_0x32b4ad","_0x56ccec","_0x52e64c","_0x384a2b","_0x19db99","_0x56cfa6","_0xfba02f","_0x1895ff","_0x2c0720","_0x5716fb","_0x217636","_0x54a3ef","_0x43ab41","_0x1122a5","_0x5e7c85","_0x1699b6","_0x3888a4","_0xa1b037","_0x30f029","_0x517cab","_0x1b03ed","_0x34db16","_0xcb5b27","_0x2c8071","_0x48599d","_0x1b075f","_0x44ddf9","_0x2a8681","_0x4f3a65","_0x7961b0","_0x36c7c2","_0x2ebf0a","_0xea341f","_0xfd0649","_0x1e6700","_0x7e914a","_0x38f557","_0x28ddd0","_0x561179","_0x41e912","_0x489c33","_0x20af83","_0x28c991","_0x503eed","_0x4182b1","_0x158613","_0x5172e6","_0x253e08","_0x6be69b","_0x309767","_0x54154c","_0x511178","_0x27f1ce","_0x4fbd96","_0x3d8bdf","_0x4b0c73","_0xec3253","_0x268639","_0x188d41","_0x244545","_0x1e3944","_0x592de8","_0x42121d","_0x35a256","_0x1abc8d","_0x3432b9","_0x307d09","_0x5dce87","_0x57d2c3","_0x3e9600","_0x320f8e","_0x264d08","_0x1bd18f","_0x64696b","_0xc8cb71","_0x4369c3","module"],"mappings":"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","sourcesContent":["/**\r\n * Object DB in REDIS - Client\r\n *\r\n * Copyright (c) 2018-2020 ioBroker GmbH - All rights reserved.\r\n *\r\n * You may not to use, modify or distribute this package in any form without explicit agreement from ioBroker GmbH.\r\n *\r\n * Unauthorized using, modifying or copying of this file, via any medium is strictly prohibited.\r\n * Proprietary and confidential\r\n * Written by bluefox <dogafox@gmail.com>, 2014-2019\r\n *\r\n */\r\n/* jshint -W097 */\r\n/* jshint strict: false */\r\n/* jslint node: true */\r\n/* jshint -W061 */\r\n'use strict';\r\n\r\nconst extend                = require('node.extend');\r\nconst Redis                 = require('ioredis');\r\n\nconst fs                    = require('fs');\r\nconst path                  = require('path');\r\nconst crypto                = require('crypto');\r\nconst { isDeepStrictEqual } = require('util');\r\nconst deepClone             = require('deep-clone');\r\n\r\nconst utils                 = require(path.join(getControllerDir() || __dirname, 'objectsUtils.js'));\r\n\r\n// copied from tools.js\r\n/**\r\n * Converts ioB pattern into regex.\r\n * @param {string} pattern - Regex string to us it in new RegExp(pattern)\r\n * @returns {string}\r\n */\r\nfunction pattern2RegEx(pattern) {\r\n    pattern = (pattern || '').toString()\r\n        .replace(/\\$/g, '\\\\$')\r\n        .replace(/\\^/g, '\\\\^');\r\n\r\n    if (pattern !== '*') {\r\n        if (pattern[0] === '*' && pattern[pattern.length - 1] !== '*') pattern += '$';\r\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] === '*') pattern = '^' + pattern;\r\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] !== '*') pattern = '^' + pattern + '$';\r\n    }\r\n\r\n    pattern = pattern\r\n        .replace(/\\?/g, '\\\\?')\r\n        .replace(/\\./g, '\\\\.')\r\n        .replace(/\\(/g, '\\\\(')\r\n        .replace(/\\)/g, '\\\\)')\r\n        .replace(/\\[/g, '\\\\[')\r\n        .replace(/]/g, '\\\\]')\r\n        .replace(/\\*/g, '.*');\r\n\r\n    return pattern;\r\n}\r\n\r\nlet crypto_;\r\n\r\n/**\r\n * recursively copy values from old object to new one\r\n *\r\n * @alias copyAttributes\r\n * @memberof tools\r\n * @param {object} oldObj source object\r\n * @param {object} newObj destination object\r\n * @param {object} [originalObj] optional object for read __no_change__ values\r\n * @param {boolean} [isNonEdit] optional indicator if copy is in nonEdit part\r\n *\r\n */\r\nfunction copyAttributes(oldObj, newObj, originalObj, isNonEdit) {\r\n    Object.keys(oldObj).forEach(attr => {\r\n        if (typeof oldObj[attr] !== 'object' || oldObj[attr] instanceof Array) {\r\n            if (oldObj[attr] === '__no_change__' && originalObj && !isNonEdit) {\r\n                if (originalObj[attr] !== undefined) {\r\n                    newObj[attr] = JSON.parse(JSON.stringify(originalObj[attr]));\r\n                } else {\r\n                    console.log(`Attribute ${attr} ignored by copying`);\r\n                }\r\n            } else\r\n            if (oldObj[attr] === '__delete__' && !isNonEdit) {\r\n                if (newObj[attr] !== undefined) {\r\n                    delete newObj[attr];\r\n                }\r\n            } else {\r\n                newObj[attr] = oldObj[attr];\r\n            }\r\n        } else {\r\n            newObj[attr] = newObj[attr] || {};\r\n            copyAttributes(oldObj[attr], newObj[attr], originalObj && originalObj[attr], isNonEdit || attr === 'nonEdit');\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Checks the flag nonEdit and restores non-changeable values if required\r\n *\r\n * @alias checkNonEditable\r\n * @memberof tools\r\n * @param {object} oldObject source object\r\n * @param {object} newObject destination object\r\n *\r\n */\r\nfunction checkNonEditable(oldObject, newObject) {\r\n    if (!oldObject) {\r\n        return true;\r\n    } else\r\n    if (!oldObject.nonEdit && !newObject.nonEdit) {\r\n        return true;\r\n    }\r\n\r\n    // if nonEdit is protected with password\r\n    if (oldObject.nonEdit && oldObject.nonEdit.passHash) {\r\n        // If new Object wants to update the nonEdit information\r\n        if (newObject.nonEdit && newObject.nonEdit.password) {\r\n            crypto_ = crypto_ || require('crypto');\r\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\r\n            if (oldObject.nonEdit.passHash !== hash) {\r\n                delete newObject.nonEdit;\r\n                return false;\r\n            } else {\r\n                oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\r\n                delete oldObject.nonEdit.password;\r\n                delete newObject.nonEdit.password;\r\n                oldObject.nonEdit.passHash = hash;\r\n                newObject.nonEdit.passHash = hash;\r\n            }\r\n            copyAttributes(newObject.nonEdit, newObject, newObject);\r\n\r\n            if (newObject.passHash) {\r\n                delete newObject.passHash;\r\n            }\r\n            if (newObject.nonEdit && newObject.nonEdit.password) {\r\n                delete newObject.nonEdit.password;\r\n            }\r\n\r\n            return true;\r\n        } else {\r\n            newObject.nonEdit = oldObject.nonEdit;\r\n        }\r\n\r\n    } else if (newObject.nonEdit) {\r\n        oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));\r\n        if (newObject.nonEdit.password) {\r\n            crypto_ = crypto_ || require('crypto');\r\n            const hash = crypto_.createHash('sha256').update(newObject.nonEdit.password.toString()).digest('base64');\r\n            delete oldObject.nonEdit.password;\r\n            delete newObject.nonEdit.password;\r\n            oldObject.nonEdit.passHash = hash;\r\n            newObject.nonEdit.passHash = hash;\r\n        }\r\n    }\r\n\r\n    // restore settings\r\n    copyAttributes(oldObject.nonEdit, newObject, oldObject);\r\n\r\n    if (newObject.passHash) {\r\n        delete newObject.passHash;\r\n    }\r\n    if (newObject.nonEdit && newObject.nonEdit.password) {\r\n        delete newObject.nonEdit.password;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst tools       = {\r\n    checkNonEditable,\r\n    pattern2RegEx\r\n};\n\nconst scriptFiles = {};\r\nscriptFiles.custom = '-- design: custom\\n-- search: state\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc.type===\"state\" && (doc.common.custom || doc.common.history))\\n--          emit(doc._id, doc.common.custom || doc.common.history)\\n--   }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.type == \"state\" and decoded.common ~= nil and decoded.common.custom ~= nil) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.filter = '-- func: function(doc) { if (doc.type === \"%1\") emit(doc._id, doc); }\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[5];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal type=KEYS[4]\\nlocal obj\\nlocal decoded\\n-- function(doc) { if (doc.type === \"chart\") emit(doc._id, doc); }\\nfor _,key in ipairs(keys) do\\n    if (key >= argStart and key < argEnd) then\\n        obj = redis.call(\"get\", key)\\n        if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded and decoded.type == type) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n    end\\nend\\nreturn {rep, cursor}';\nscriptFiles.programs = '-- design: hm-rega\\n-- search: programs\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"PROGRAM\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and decoded.native.TypeName == \"PROGRAM\") then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.script = '-- design: script\\n-- search: javascript\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\n--  function(doc) {\\n--      if (doc.type === \"script\" && doc.common.engineType.match(/^[jJ]ava[sS]cript|^[cC]offee[sS]cript|^[tT]ype[sS]cript|^Blockly/)) emit(doc.common.name, doc); }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd) then\\n\t    obj = redis.call(\"get\", key)\\n\t\tif (obj ~= nil and obj ~= \"\" and cjson.decode(obj).type == \"script\") then\\n            rep[#rep+1] = obj\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\nscriptFiles.variables = '-- design: hm-rega\\n-- search: variables\\nlocal rep = {}\\n-- local keys=redis.call(\"keys\", KEYS[1]..\"*\")\\nlocal cursor = KEYS[4];\\nlocal result=redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1]..\"*\", \"COUNT\", 500)\\ncursor = result[1]\\nlocal keys = result[2]\\nlocal argStart=KEYS[1]..KEYS[2]\\nlocal argEnd=KEYS[1]..KEYS[3]\\nlocal obj\\nlocal decoded\\n--  function(doc) {\\n--      if (doc._id.match(/^hm-rega\\\\.[0-9]+\\\\.[0-9,A-Z,a-z]+/) && (doc.native.TypeName === \"ALARMDP\" || doc.native.TypeName === \"VARDP\")) {\\n--          emit(doc._id, doc);\\n--      }\\n--  }\\nfor _, key in ipairs(keys) do\\n\tif (key >= argStart and key < argEnd and key:sub(7, 13) == \"hm-rega\") then\\n\t    obj = redis.call(\"get\", key)\\n\t    if (obj ~= nil and obj ~= \"\") then\\n            decoded = cjson.decode(obj)\\n            if (decoded.native ~= nil and (decoded.native.TypeName == \"ALARMDP\" or decoded.native.TypeName == \"VARDP\")) then\\n                rep[#rep+1] = obj\\n            end\\n        end\\n\tend\\nend\\nreturn {rep, cursor}';\n\r\nfunction getControllerDir() {\r\n    const possibilities = ['iobroker.js-controller', 'ioBroker.js-controller'];\r\n    let controllerPath = null;\r\n    for (const pkg of possibilities) {\r\n        try {\r\n            const possiblePath = require.resolve(pkg);\r\n            if (fs.existsSync(possiblePath)) {\r\n                controllerPath = possiblePath;\r\n                break;\r\n            }\r\n        } catch (_a) {\r\n            /* not found */\r\n        }\r\n    }\r\n    // Apparently, checking vs null/undefined may miss the odd case of controllerPath being \"\"\r\n    // Thus we check for falsyness, which includes failing on an empty path\r\n    if (!controllerPath) {\r\n        controllerPath = path.join(__dirname, '..', '..', 'lib', 'objects');\r\n        if (!fs.existsSync(controllerPath)) {\r\n            controllerPath = null;\r\n        }\r\n    } else {\r\n        controllerPath = path.join(path.dirname(controllerPath), 'lib', 'objects');\r\n    }\r\n    return controllerPath;\r\n}\r\n\r\nclass ObjectsInRedis {\r\n\r\n    constructor(settings) {\r\n        const originalSettings = settings;\r\n        this.settings = settings || {};\r\n        this.redisNamespace = (this.settings.redisNamespace || (this.settings.connection && this.settings.connection.redisNamespace) || 'cfg') + '.';\r\n        this.fileNamespace = this.redisNamespace + 'f.';\r\n        this.fileNamespaceL = this.fileNamespace.length;\r\n        this.objNamespace = this.redisNamespace + 'o.';\r\n        this.objNamespaceL = this.objNamespace.length;\r\n        const ioRegExp = new RegExp('^' + this.objNamespace.replace(/\\./g, '\\\\.') + '[_A-Za-z0-9ÄÖÜäöüа-яА-Я]+'); // cfg.o.[_A-Za-z0-9]+\r\n\r\n        const onChange = this.settings.change; // on change handler\r\n        const onChangeUser = this.settings.changeUser; // on change handler for User events\r\n\r\n        this.stop = false;\r\n        this.client = null;\r\n        this.sub = null;\r\n        this.subSystem = null;\r\n        this.preserveSettings = ['custom', 'smartName', 'material', 'habpanel', 'mobile'];\r\n        this.defaultNewAcl = this.settings.defaultNewAcl || null;\r\n        this.namespace = this.settings.namespace || this.settings.hostname || '';\r\n        this.scripts = {};\r\n\r\n        // cached meta objects for file operations\r\n        this.existingMetaObjects = {};\r\n\r\n        this.log = utils.getLogger(this.settings.logger);\r\n\r\n        this.settings.connection = this.settings.connection || {};\r\n\r\n        // limit max number of log entries in the list\r\n        this.settings.connection.maxQueue = this.settings.connection.maxQueue || 1000;\r\n\r\n        this.settings.connection.options = this.settings.connection.options || {};\r\n        const retry_max_delay = this.settings.connection.options.retry_max_delay || 2000;\r\n        const retry_max_count = this.settings.connection.options.retry_max_count || 19;\r\n\r\n        this.settings.connection.options.retryStrategy = reconnectCount => {\r\n            if (!ready && initError && ignoreErrors) {\r\n                return new Error('No more tries');\r\n            }\r\n            if (this.stop) {\r\n                return new Error('Client has stopped ... no retries anymore');\r\n            }\r\n            if (ready && reconnectCount >= retry_max_count) {\r\n                return new Error('Stop trying to reconnect');\r\n            }\r\n            // A function that receives an options object as parameter including the retry attempt,\r\n            // the total_retry_time indicating how much time passed since the last time connected,\r\n            // the error why the connection was lost and the number of times_connected in total.\r\n            // If you return a number from this function, the retry will happen exactly after that\r\n            // time in milliseconds. If you return a non-number, no further retry will happen and\r\n            // all offline commands are flushed with errors. Return an error to return that\r\n            // specific error to all offline commands.\r\n\r\n            if (!ready) {\r\n                return 300;\r\n            } else {\r\n                return retry_max_delay;\r\n            }\r\n            /*if (options.error.code === 'ECONNREFUSED') {\r\n                // End reconnecting on a specific error and flush all commands with a individual error\r\n                return new Error('The server refused the connection');\r\n            }\r\n            if (options.total_retry_time > 1000 * 60 * 60) {\r\n                // End reconnecting after a specific timeout and flush all commands with a individual error\r\n                return new Error('Retry time exhausted');\r\n            }\r\n            if (options.times_connected > 10) {\r\n                // End reconnecting with built in error\r\n                return undefined;\r\n            }\r\n            // reconnect after\r\n            return Math.max(options.attempt * 100, 3000);*/\r\n        };\r\n\r\n        delete this.settings.connection.options.retry_max_delay;\r\n        this.settings.connection.options.enableReadyCheck = true;\r\n\r\n        let ready = false;\r\n        let initError = false;\r\n        let ignoreErrors = false;\r\n        let connected = false;\r\n        let reconnectCounter = 0;\r\n\r\n        if (this.settings.connection.port === 0) { // Port = 0 means unix socket\r\n            // initiate a unix socket connection\r\n            this.settings.connection.options.path = this.settings.connection.host;\r\n            this.log.debug(this.namespace + ' Redis Objects: Use File Socket for connection: ' + this.settings.connection.options.path);\r\n        } else if (Array.isArray(this.settings.connection.host)) { // Host is an array means we use a sentinel\r\n            const defaultPort = Array.isArray(this.settings.connection.port) ? null : this.settings.connection.port;\r\n\r\n            this.settings.connection.options.sentinels = this.settings.connection.host.map((redisNode, idx) => ({\r\n                host: redisNode,\r\n                port: defaultPort || this.settings.connection.port[idx]\r\n            }));\r\n\r\n            this.settings.connection.options.name = this.settings.connection.sentinelName ? this.settings.connection.sentinelName : 'mymaster';\r\n            this.log.debug(this.namespace + ' Redis Objects: Use Sentinel for connection: ' + this.settings.connection.options.name + ', ' + JSON.stringify(this.settings.connection.options.sentinels));\r\n        } else {\r\n            this.settings.connection.options.host = this.settings.connection.host;\r\n            this.settings.connection.options.port = this.settings.connection.port;\r\n            this.log.debug(this.namespace + ' Redis Objects: Use Redis connection: ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port);\r\n        }\r\n        this.settings.connection.options.db = this.settings.connection.options.db || 0;\r\n        this.settings.connection.options.family = this.settings.connection.options.family || 0;\r\n        this.settings.connection.options.password = this.settings.connection.pass || null;\r\n\r\n        this.settings.connection.options.autoResubscribe = false; // We do our own resubscribe because other sometimes not work\r\n\r\n        this.client = new Redis(this.settings.connection.options);\r\n\r\n        this.client.on('error', error => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Redis ERROR Objects: (' + ignoreErrors + '/' + this.stop + ') ' + error.message + ' / ' + error.stack);\r\n            if (this.stop) {\r\n                return;\r\n            }\r\n            if (!ready) {\r\n                initError = true;\r\n                // Seems we have a socket.io server\r\n                if (!ignoreErrors && error.message.startsWith('Protocol error, got \"H\" as reply type byte.')) {\r\n                    this.log.error('Socket.io Server detected. Please update to js-controller 2.0 or higher!');\r\n                }\r\n                return;\r\n            }\r\n            this.log.error(this.settings.namespace + ' ' + error.message);\r\n        });\r\n\r\n        this.client.on('end', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end (stop=' + this.stop + ')');\r\n            ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n        });\r\n\r\n        this.client.on('connect', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event connect (stop=' + this.stop + ')');\r\n            connected = true;\r\n        });\r\n\r\n        this.client.on('close', () => {\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event close (stop=' + this.stop + ')');\r\n            //if (ready && typeof this.settings.disconnected === 'function') this.settings.disconnected();\r\n        });\r\n\r\n        this.client.on('reconnecting', () => {\r\n            if (connected && !ready && !initError && !ignoreErrors) {\r\n                reconnectCounter++;\r\n            }\r\n\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')');\r\n\r\n            if (reconnectCounter > 2) { // fallback logic for nodejs <10\r\n                this.log.error('Could not connect database at ' + this.settings.connection.options.host + ':' + this.settings.connection.options.port + ' (invalid protocol). Please make sure the configured IP and port points to a host running JS-Controller >= 2.0.');\r\n                return;\r\n            }\r\n            connected = false;\r\n            initError = false;\r\n        });\r\n\r\n        this.client.on('ready', () => {\r\n            if (this.stop) {\r\n                return;\r\n            }\r\n            initError = false;\r\n            ignoreErrors = false;\r\n\r\n            this.log.debug(this.namespace + ' Objects client ready ... initialize now');\r\n            this.client.config('set', ['lua-time-limit', 10000], err => { // increase LUA timeout TODO needs better fix\r\n                if (err) {\r\n                    this.log.warn('Unable to increase LUA script timeout: ' + err);\r\n                }\r\n                let initCounter = 0;\r\n                if (!this.subSystem && typeof onChange === 'function') {\r\n                    initCounter++;\r\n                    this.log.debug(this.namespace + ' Objects create System PubSub Client');\r\n                    this.subSystem = new Redis(this.settings.connection.options);\r\n                    this.subSystem.ioBrokerSubscriptions = {};\r\n\r\n                    if (typeof onChange === 'function') {\r\n                        this.subSystem.on('pmessage', (pattern, channel, message) =>\r\n                            setImmediate(() => {\r\n                                this.log.silly(this.namespace + ' Objects system redis pmessage ' + pattern + '/' + channel + ':' + message);\r\n                                try {\r\n                                    if (ioRegExp.test(channel)) {\r\n                                        const id = channel.substring(this.objNamespaceL);\r\n                                        try {\r\n                                            const obj = message ? JSON.parse(message) : null;\r\n\r\n                                            if (this.settings.controller &&\r\n                                                id === 'system.config' &&\r\n                                                obj &&\r\n                                                obj.common &&\r\n                                                obj.common.defaultNewAcl &&\r\n                                                !isDeepStrictEqual(obj.common.defaultNewAcl, this.defaultNewAcl)) {\r\n                                                this.defaultNewAcl = JSON.parse(JSON.stringify(obj.common.defaultNewAcl));\r\n                                                this.setDefaultAcl(this.defaultNewAcl);\r\n                                            }\r\n\r\n                                            onChange(id, obj);\r\n                                        } catch (e) {\r\n                                            this.log.warn(`${this.namespace} Objects Cannot process system pmessage ${id} - ${message}: ${e.message}`);\r\n                                            this.log.warn(`${this.namespace} ${e.stack}`);\r\n                                        }\r\n                                    } else {\r\n                                        this.log.warn(`${this.namespace} Objects Received unexpected system pmessage: ${channel}`);\r\n                                    }\r\n                                } catch (e) {\r\n                                    this.log.warn(this.namespace + ' Objects system pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\r\n                                    this.log.warn(this.namespace + ' ' + e.stack);\r\n                                }\r\n                            }));\r\n                    }\r\n\r\n                    this.subSystem.on('end', () => {\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis System Event end sub (stop=' + this.stop + ')');\r\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n                    });\r\n\r\n                    this.subSystem.on('error', error => {\r\n                        if (this.stop) {\r\n                            return;\r\n                        }\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub System client Objects No redis connection: ' + JSON.stringify(error));\r\n                    });\r\n\r\n                    if (this.settings.connection.enhancedLogging) {\r\n                        this.subSystem.on('connect', () =>\r\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event connect (stop=' + this.stop + ')'));\r\n\r\n                        this.subSystem.on('close', () =>\r\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event close (stop=' + this.stop + ')'));\r\n\r\n                        this.subSystem.on('reconnecting', reconnectCounter =>\r\n                            this.log.silly(this.namespace + ' PubSub System client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\r\n                    }\r\n\r\n                    this.subSystem.on('ready', () => {\r\n                        if (--initCounter < 1) {\r\n                            if (this.settings.connection.port === 0) {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                            } else {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'system re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                            }\r\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                            ready = true;\r\n                        }\r\n                        // subscribe on system.config only if js-controller\r\n                        if (this.settings.controller) {\r\n                            this.subSystem.psubscribe(this.objNamespace + 'system.config');\r\n                        }\r\n                        Object.keys(this.subSystem.ioBrokerSubscriptions).forEach(sub => this.subSystem.psubscribe(sub));\r\n                    });\r\n                }\r\n\r\n                if (!this.sub && typeof onChangeUser === 'function') {\r\n                    initCounter++;\r\n                    this.log.debug(this.namespace + ' Objects create User PubSub Client');\r\n                    this.sub = new Redis(this.settings.connection.options);\r\n                    this.sub.ioBrokerSubscriptions = {};\r\n\r\n                    this.sub.on('pmessage', (pattern, channel, message) => {\r\n                        setImmediate(() => {\r\n                            this.log.silly(this.namespace + ' Objects user redis pmessage ' + pattern + '/' + channel + ':' + message);\r\n                            try {\r\n                                if (ioRegExp.test(channel)) {\r\n                                    const id = channel.substring(this.objNamespaceL);\r\n                                    try {\r\n                                        const obj = message ? JSON.parse(message) : null;\r\n\r\n                                        onChangeUser(id, obj);\r\n                                    } catch (e) {\r\n                                        this.log.warn(`${this.namespace} Objects user cannot process pmessage ${id} - ${message}: ${e.message}`);\r\n                                        this.log.warn(`${this.namespace} ${e.stack}`);\r\n                                    }\r\n                                } else {\r\n                                    this.log.warn(`${this.namespace} Objects user received unexpected pmessage: ${channel}`);\r\n                                }\r\n                            } catch (e) {\r\n                                this.log.warn(this.namespace + ' Objects user pmessage ' + channel + ' ' + JSON.stringify(message) + ' ' + e.message);\r\n                                this.log.warn(this.namespace + ' ' + e.stack);\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    this.sub.on('end', () => {\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' Objects-Redis Event end user sub (stop=' + this.stop + ')');\r\n                        ready && typeof this.settings.disconnected === 'function' && this.settings.disconnected();\r\n                    });\r\n\r\n                    this.sub.on('error', error => {\r\n                        if (this.stop) {\r\n                            return;\r\n                        }\r\n                        this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' PubSub user client Objects No redis connection: ' + JSON.stringify(error));\r\n                    });\r\n\r\n                    if (this.settings.connection.enhancedLogging) {\r\n                        this.sub.on('connect', () =>\r\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event connect (stop=' + this.stop + ')'));\r\n\r\n                        this.sub.on('close', () =>\r\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event close (stop=' + this.stop + ')'));\r\n\r\n                        this.sub.on('reconnecting', reconnectCounter =>\r\n                            this.log.silly(this.namespace + ' PubSub user client Objects-Redis Event reconnect (reconnectCounter=' + reconnectCounter + ', stop=' + this.stop + ')'));\r\n                    }\r\n\r\n                    this.sub.on('ready', () => {\r\n                        if (--initCounter < 1) {\r\n                            if (this.settings.connection.port === 0) {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                            } else {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'user re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                            }\r\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                            ready = true;\r\n                        }\r\n                        Object.keys(this.sub.ioBrokerSubscriptions).forEach(sub => this.sub.psubscribe(sub));\r\n                    });\r\n                }\r\n\r\n                this.log.debug(this.namespace + ' Objects client initialize lua scripts');\r\n                initCounter++;\r\n                this.loadLuaScripts(() => {\r\n                    if (!this.client) {\r\n                        return;\r\n                    }\r\n                    // init default new acl\r\n                    this.client.get(this.objNamespace + 'system.config', (err, obj) => {\r\n                        if (obj) {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON system.config: ${obj}`);\r\n                                obj = null;\r\n                            }\r\n                            if (obj && obj.common && obj.common.defaultNewAcl) {\r\n                                this.defaultNewAcl = obj.common.defaultNewAcl;\r\n                            }\r\n                        } else {\r\n                            this.log.error(`${this.namespace} Cannot read system.config: ${obj} (OK when migrating or restoring)`);\r\n                        }\r\n\r\n                        if (--initCounter < 1) {\r\n                            if (this.settings.connection.port === 0) {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host);\r\n                            } else {\r\n                                this.log.debug(this.namespace + ' Objects ' + (ready ? 'client re' : '') + 'connected to redis: ' + this.settings.connection.host + ':' + this.settings.connection.port);\r\n                            }\r\n                            !ready && typeof this.settings.connected === 'function' && this.settings.connected(this);\r\n                            ready = true;\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getStatus() {\r\n        return {type: 'redis', server: false};\r\n    }\r\n\r\n    /**\r\n     * Checks if given Id is a meta object, else throws error\r\n     *\r\n     * @param {string} id to check\r\n     * @throws Error if id is invalid\r\n     */\r\n    async validateMetaObject(id) {\r\n        if (this.existingMetaObjects[id] === undefined) {\r\n            // if not cached -> getObject\r\n            const obj = await this.getObjectAsync(id);\r\n            if (obj && obj.type === 'meta') {\r\n                this.existingMetaObjects[id] = true;\r\n            } else {\r\n                this.existingMetaObjects[id] = false;\r\n                return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\r\n            }\r\n        } else if (this.existingMetaObjects[id] === false) {\r\n            return Promise.reject(new Error(`${id} is not an object of type \"meta\"`));\r\n        }\r\n    }\r\n\r\n    normalizeFilename(name) {\r\n        return name ? name.replace(/[/\\\\]+/g, '/') : name;\r\n    }\r\n\r\n    // -------------- FILE FUNCTIONS -------------------------------------------\r\n    _setBinaryState(id, data, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!Buffer.isBuffer(data)) {\r\n            data = Buffer.from(data);\r\n        }\r\n        this.client.set(id, data, callback);\r\n    }\r\n\r\n    _getBinaryState(id, callback) {\r\n        if (typeof callback !== 'function') {\r\n            return this.log.error(this.namespace + ' no callback found in _getBinaryState');\r\n        }\r\n        if (!this.client) {\r\n            return setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        this.client.getBuffer(id, (err, data) => {\r\n            if (!err && data) {\r\n                callback(err, data);\r\n            } else {\r\n                callback(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    _delBinaryState(id, callback) {\r\n        if (!this.client) {\r\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        } else {\r\n            this.client.del(id, () => typeof callback === 'function' && callback());\r\n        }\r\n    }\r\n\r\n    getFileId(id, name, isMeta) {\r\n        name = this.normalizeFilename(name);\r\n        // e.g. ekey.admin and admin/ekey.png\r\n        if (id.match(/\\.admin$/)) {\r\n            if (name.match(/^admin\\//)) {\r\n                name = name.replace(/^admin\\//, '');\r\n            } else\r\n            // e.g. ekey.admin and iobroker.ekey/admin/ekey.png\r\n            if (name.match(/^iobroker.[-\\d\\w]\\/admin\\//i)) {\r\n                name = name.replace(/^iobroker.[-\\d\\w]\\/admin\\//i, '');\r\n            }\r\n        }\r\n        const normalized = utils.sanitizePath(id, name);\r\n        if (!normalized) {\r\n            this.log.debug(this.namespace + ' Invalid file path ' + id + '/' + name);\r\n            return '';\r\n        }\r\n        id = normalized.id;\r\n        name = normalized.name;\r\n\r\n        return this.fileNamespace + id + '$%$' + name + (isMeta !== undefined ? (isMeta ? '$%$meta' : '$%$data') : '');\r\n    }\r\n\r\n    checkFile(id, name, options, flag, callback) {\r\n        // read file settings from redis\r\n        const fileId = this.getFileId(id, name, true);\r\n        if (!fileId) {\r\n            const fileOptions = {'notExists': true};\r\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\r\n                return typeof callback === 'function' && setImmediate(() => callback(false, options, fileOptions)); // NO error\r\n            } else {\r\n                return typeof callback === 'function' && setImmediate(() => callback(true, options)); // error\r\n            }\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED, options));\r\n        }\r\n        this.client.get(fileId, (err, fileOptions) => {\r\n            fileOptions = fileOptions || '{\"notExists\": true}';\r\n            try {\r\n                fileOptions = JSON.parse(fileOptions);\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${fileOptions}`);\r\n                fileOptions = {notExists: true};\r\n            }\r\n            if (utils.checkFile(fileOptions, options, flag, this.defaultNewAcl)) {\r\n                return typeof callback === 'function' && callback(false, options, fileOptions); // NO error\r\n            } else {\r\n                return typeof callback === 'function' && callback(true, options); // error\r\n            }\r\n        });\r\n    }\r\n\r\n    checkFileRights(id, name, options, flag, callback) {\r\n        return utils.checkFileRights(this, id, name, options, flag, callback);\r\n    }\r\n\r\n    _setDefaultAcl(ids, defaultAcl) {\r\n        if (ids && ids.length) {\r\n            const id = ids.shift();\r\n            this.getObject(id, (err, obj) => {\r\n                if (obj && !obj.acl) {\r\n                    obj.acl = defaultAcl;\r\n                    this.setObject(id, obj, null, () =>\r\n                        setImmediate(() =>\r\n                            this._setDefaultAcl(ids, defaultAcl)));\r\n                } else {\r\n                    setImmediate(() =>\r\n                        this._setDefaultAcl(ids, defaultAcl));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setDefaultAcl(defaultNewAcl) {\r\n        this.defaultNewAcl = defaultNewAcl || {\r\n            owner: utils.CONSTS.SYSTEM_ADMIN_USER,\r\n            ownerGroup: utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n            object: 0x664,\r\n            state: 0x664,\r\n            file: 0x664\r\n        };\r\n        // Get ALL Objects\r\n        this.getKeys('*', (err, ids) => this._setDefaultAcl(ids, this.defaultNewAcl));\r\n    }\r\n\r\n    getUserGroup(user, callback) {\r\n        return utils.getUserGroup(this, user, (error, user, userGroups, userAcl) => {\r\n            if (error) {\r\n                this.log.error(this.namespace + ' ' + error);\r\n            }\r\n            callback.call(this, user, userGroups, userAcl);\r\n        });\r\n    }\r\n\r\n    insert(id, attName, ignore, options, obj, callback) {\r\n        return utils.insert(this, id, attName, ignore, options, obj, callback);\r\n    }\r\n\r\n    _writeFile(id, name, data, options, callback, meta) {\r\n        const ext         = name.match(/\\.[^.]+$/);\r\n        const mime        = utils.getMimeType(ext);\r\n        const _mimeType   = mime.mimeType;\r\n        const isBinary    = mime.isBinary;\r\n\r\n        const metaID = this.getFileId(id, name, true);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        // virtual files only get Meta objects\r\n        if (options.virtualFile) {\r\n            meta = {\r\n                notExists: true,\r\n                virtualFile: true\r\n            }; // Store file with flags as it would not exist\r\n            this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(_err));\r\n        } else {\r\n            if (!meta) {\r\n                meta = {createdAt: Date.now()};\r\n            }\r\n            if (!meta.acl) {\r\n                meta.acl = {\r\n                    owner: options.user || (this.defaultNewAcl && this.defaultNewAcl.owner) || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                    ownerGroup: options.group || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                    permissions: options.mode || (this.defaultNewAcl && this.defaultNewAcl.file) || 0x644\r\n                };\r\n            }\r\n            meta.stats = {\r\n                size: data.length\r\n            };\r\n            if (meta.hasOwnProperty('notExists')) {\r\n                delete meta.notExists;\r\n            }\r\n\r\n            meta.mimeType = options.mimeType || _mimeType;\r\n            meta.binary = isBinary;\r\n            meta.acl.ownerGroup = meta.acl.ownerGroup || (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n            meta.modifiedAt = Date.now();\r\n\r\n            this._setBinaryState(this.getFileId(id, name, false), data, err => this.client.set(metaID, JSON.stringify(meta), _err => typeof callback === 'function' && callback(err || _err)));\r\n        }\r\n    }\r\n\r\n    async writeFile(id, name, data, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (typeof options === 'string') {\r\n            options = {mimeType: options};\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.writeFile(id, name, data, options, err =>\r\n                    err ? reject(err) : resolve()));\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.warn(`${this.namespace} writeFile will not write this file (${name}) in future versions: ${e.message}`);\r\n            // todo: replace by below code in 3.1 + add test\r\n            // this.log.error(`Cannot write file ${name}: ${e.message}`);\r\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        // If file yet exists => check the permissions\r\n        return this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                return this._writeFile(id, name, data, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    writeFileAsync(id, name, data, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.writeFile(id, name, data, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _readFile(id, name, options, callback, meta) {\r\n        if (meta.notExists) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        this._getBinaryState(this.getFileId(id, name, false), (err, buffer) => {\r\n            const mimeType = meta && meta.mimeType;\r\n            if (meta && !meta.binary && buffer) {\r\n                buffer = buffer.toString();\r\n            }\r\n            typeof callback === 'function' && callback(err, buffer, mimeType);\r\n        });\r\n    }\r\n\r\n    async readFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options  = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.readFile(id, name, options, (err, res, mimeType) =>\r\n                    err ? reject(err) : resolve({data: res, mimeType: mimeType})));\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.debug(`${this.namespace} readFile will not read this file (${name}) in future versions: ${e.message}`);\r\n            // todo: rethink how to replace by below code in 3.1 + add test\r\n            // this.log.error(`Cannot read file ${name}: ${e.message}`);\r\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        options = options || {};\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                return this._readFile(id, name, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if given file exists\r\n     *\r\n     * @param {string} id id of the namespace\r\n     * @param {string} [name] name of the file\r\n     * @param {object} [options] optional user context\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    async fileExists(id, name, options) {\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        try {\r\n            await new Promise((resolve, reject) => {\r\n                this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, err => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n            });\r\n            id = this.getFileId(id, name, false);\r\n            const exists = await this.client.exists(id);\r\n            return !!exists;\r\n        } catch (e) {\r\n            this.log.error(`${this.namespace} Cannot check file existence of \"${id}\": ${e}`);\r\n            return Promise.reject(new Error(`Cannot check file existence of \"${id}\": ${e}`));\r\n        }\r\n    }\r\n\r\n    readFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.readFile(id, name, options, (err, res, mimeType) =>\r\n                err ? reject(err) : resolve({data: res, mimeType: mimeType})));\r\n    }\r\n\r\n    _unlink(id, name, options, callback, meta) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (meta && meta.notExists) {\r\n            this._rm(id, name, options, callback);\r\n            //typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        } else {\r\n            const metaID = this.getFileId(id, name, true);\r\n            const dataID = this.getFileId(id, name, false);\r\n            this._delBinaryState(dataID, _err => this.client.del(metaID, callback));\r\n        }\r\n    }\r\n\r\n    unlink(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options  = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file['delete']) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._unlink(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    unlinkAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unlink(id, name, options, (err) =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    delFile(id, name, options, callback) {\r\n        return this.unlink(id, name, options, callback);\r\n    }\r\n\r\n    delFileAsync(id, name, options) {\r\n        return this.unlinkAsync(id, name, options);\r\n    }\r\n\r\n    _readDir(id, name, options, callback) {\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (id === '') { // special case for \"root\"\r\n            const dirID = this.getFileId('*', '*');\r\n            this.client.keys(dirID, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n\r\n                const result = [];\r\n                if (!keys || !keys.length) {\r\n                    return typeof callback === 'function' && callback(null, result);\r\n                }\r\n                let lastDir;\r\n                keys.sort().forEach(dir => {\r\n                    dir = dir.substring(this.fileNamespaceL, dir.indexOf('$%$'));\r\n                    if (dir !== lastDir) {\r\n                        result.push({\r\n                            file: dir,\r\n                            stats: {},\r\n                            isDir: true\r\n                        });\r\n                    }\r\n                    lastDir = dir;\r\n                });\r\n                typeof callback === 'function' && callback(err, result);\r\n            });\r\n            return;\r\n        }\r\n        const dirID = this.getFileId(id, name + (name.length ? '/' : '') + '*');\r\n        this.client.keys(dirID, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            const start = dirID.indexOf('$%$') + 3;\r\n            const end = '$%$meta'.length;\r\n\r\n            const baseName = name + (name.length ? '/' : '');\r\n            const dirs = [];\r\n            const deepLevel = baseName.split('/').length;\r\n            if (!keys || !keys.length) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND, []);\r\n            }\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => {\r\n                    if (key.match(/\\$%\\$meta$/)) {\r\n                        const parts = key.substr(start, key.length - end).split('/');\r\n                        if (parts.length === deepLevel) {\r\n                            return !key.includes('/_data.json$%$') && key !== '_data.json'; // sort out \"virtual\" files that are used to mark directories\r\n                        } else {\r\n                            const dir = parts[deepLevel - 1];\r\n                            if (dirs.indexOf(dir) === -1) {\r\n                                dirs.push(dir);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            if (!keys.length) {\r\n                const result = [];\r\n                while (dirs.length) {\r\n                    result.push({\r\n                        file: dirs.shift(),\r\n                        stats: {},\r\n                        isDir: true\r\n                    });\r\n                }\r\n                return typeof callback === 'function' && callback(err, result);\r\n            }\r\n\r\n            // Check permissions\r\n            this.client.mget(keys, (err, objs) => {\r\n                if (err) {\r\n                    return typeof callback === 'function' && callback(err, objs);\r\n                }\r\n                const result = [];\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                objs = objs || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    const file = keys[i].substring(start + baseName.length, keys[i].length - end);\r\n                    while (dirs.length && dirs[0] < file) {\r\n                        result.push({\r\n                            file: dirs.shift(),\r\n                            stats: {},\r\n                            isDir: true\r\n                        });\r\n                    }\r\n\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                        if (!objs[i] || objs[i].virtualFile) {\r\n                            continue;\r\n                        } // virtual file, ignore\r\n                        objs[i].acl = objs[i].acl || {};\r\n                        if (options.user !== utils.CONSTS.SYSTEM_ADMIN_USER && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) === -1) {\r\n                            objs[i].acl.read  = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_READ);\r\n                            objs[i].acl.write = !!(objs[i].acl.permissions & utils.CONSTS.ACCESS_EVERY_WRITE);\r\n                        } else {\r\n                            objs[i].acl.read  = true;\r\n                            objs[i].acl.write = true;\r\n                        }\r\n                        result.push({\r\n                            file: file,\r\n                            stats: objs[i].stats,\r\n                            isDir: false,\r\n                            acl: objs[i].acl,\r\n                            modifiedAt: objs[i].modifiedAt,\r\n                            createdAt:  objs[i].createdAt\r\n                        });\r\n                    }\r\n                }\r\n                while (dirs.length) {\r\n                    result.push({\r\n                        file: dirs.shift(),\r\n                        stats: {},\r\n                        isDir: true\r\n                    });\r\n                }\r\n                typeof callback === 'function' && callback(null, result);\r\n            });\r\n        });\r\n    }\r\n\r\n    async readDir(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        // remove first and last\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n        if (name.endsWith('/')) {\r\n            name = name.substring(0, name.length - 1);\r\n        }\r\n\r\n        try {\r\n            await this.validateMetaObject(id);\r\n        } catch (e) {\r\n            this.log.warn(`${this.namespace} readDir will not read this directory (${name}) in future versions: ${e.message}`);\r\n            // todo: replace by below code in 3.1 + add test\r\n            // this.log.error(`Cannot read directory ${name}: ${e.message}`);\r\n            // typeof callback === 'function' && setImmediate(() => callback(e.message));\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.list) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    this._readDir(id, name, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    readDirAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.readDir(id, name, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    _renameHelper(keys, oldBase, newBase, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            this.client.rename(id.replace(/\\$%\\$meta$/, '$%$data'), id.replace(oldBase, newBase).replace(/\\$%\\$meta$/, '$%$data'), _err =>\r\n                this.client.rename(id, id.replace(oldBase, newBase), _err =>\r\n                    setImmediate(() => this._renameHelper(keys, oldBase, newBase, callback))));\r\n        }\r\n    }\r\n\r\n    _rename(id, oldName, newName, options, callback, meta) {\r\n        const oldMetaID = this.getFileId(id, oldName, true);\r\n        const oldDataID = this.getFileId(id, oldName, false);\r\n        const newMetaID = this.getFileId(id, newName, true);\r\n        const newDataID = this.getFileId(id, newName, false);\r\n        if (!meta || !this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        } else if (meta.notExists) {\r\n            oldName = this.normalizeFilename(oldName);\r\n            newName = this.normalizeFilename(newName);\r\n\r\n            // it could be dir\r\n            if (!oldName.endsWith('/*')) {\r\n                oldName += '/*';\r\n            } else if (oldName.endsWith('/')) {\r\n                oldName += '*';\r\n            }\r\n\r\n            if (!newName.endsWith('/*')) {\r\n                newName += '/*';\r\n            } else if (newName.endsWith('/')) {\r\n                newName += '*';\r\n            }\r\n\r\n            const oldBase = oldName.substring(0, oldName.length - 1);\r\n            const newBase = newName.substring(0, newName.length - 1);\r\n            const dirID = this.getFileId(id, oldName);\r\n            this.client.keys(dirID, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                if (err || !keys) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n\r\n                keys = keys\r\n                    .sort()\r\n                    .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n                if (!keys.length) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n                // Check permissions\r\n                this.client.mget(keys, (err, objs) => {\r\n                    let result;\r\n                    const dontCheck =\r\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                    objs = objs || [];\r\n                    if (!dontCheck) {\r\n                        result = [];\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                objs[i] = JSON.parse(objs[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                                continue;\r\n                            }\r\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                                result.push(keys[i]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = keys;\r\n                    }\r\n                    this._renameHelper(result, oldBase, newBase, callback);\r\n                });\r\n            });\r\n        } else {\r\n            this.client.rename(oldDataID, newDataID, _err =>\r\n                this.client.rename(oldMetaID, newMetaID, callback));\r\n        }\r\n    }\r\n\r\n    rename(id, oldName, newName, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof oldName !== 'string' || !oldName.length || oldName === '/' || oldName === '//' ||\r\n            typeof newName !== 'string' || !newName.length || newName === '/' || newName === '//') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n        if (oldName.startsWith('/')) {\r\n            oldName = oldName.substring(1);\r\n        }\r\n        if (newName.startsWith('/')) {\r\n            newName = newName.substring(1);\r\n        }\r\n        if (oldName.endsWith('/')) {\r\n            oldName = oldName.substring(0, oldName.length - 1);\r\n        }\r\n        if (newName.endsWith('/')) {\r\n            newName = newName.substring(0, newName.length - 1);\r\n        }\r\n\r\n        this.checkFileRights(id, oldName, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    this._rename(id, oldName, newName, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    renameAsync(id, oldName, newName, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.rename(id, oldName, newName, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _touch(id, name, options, callback, meta) {\r\n        const metaID = this.getFileId(id, name, true);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta || meta.notExists) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        meta.modifiedAt = Date.now();\r\n        this.client.set(metaID, JSON.stringify(meta), callback);\r\n    }\r\n\r\n    touch(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                return this._touch(id, name, options, callback, meta);\r\n            }\r\n        });\r\n    }\r\n\r\n    touchAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.touch(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _rmHelper(keys, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            this._delBinaryState(id.replace(/\\$%\\$meta$/, '$%$data'), _err =>\r\n                this.client.del(id, _err =>\r\n                    setImmediate(() => this._rmHelper(keys, callback))));\r\n        }\r\n    }\r\n\r\n    _rm(id, name, options, callback, meta) {\r\n        if (meta && !meta.isDir) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            const dataID = this.getFileId(id, name, false);\r\n            this.delObject(dataID, _err => this.delObject(metaID, callback));\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            name = this.normalizeFilename(name);\r\n            // it could be dir\r\n            if (!name.endsWith('/*')) {\r\n                name += '/*';\r\n            } else if (name.endsWith('/')) {\r\n                name += '*';\r\n            }\r\n            const dirID = this.getFileId(id, name);\r\n            this.client.keys(dirID, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                if (err || !keys) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n\r\n                keys = keys\r\n                    .sort()\r\n                    .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n                if (!keys.length) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n                }\r\n                // Check permissions\r\n                this.client.mget(keys, (err, objs) => {\r\n                    let result;\r\n                    const dontCheck =\r\n                        options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                        options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                        (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                    objs = objs || [];\r\n                    if (!dontCheck) {\r\n                        result = [];\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                objs[i] = JSON.parse(objs[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                                continue;\r\n                            }\r\n                            if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                                result.push(keys[i]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = keys;\r\n                    }\r\n                    const files = result.map(key => {\r\n                        const name = key.substring(this.fileNamespaceL + id.length + 3, key.length - 7);\r\n                        const pos = name.lastIndexOf('/');\r\n                        if (pos !== -1) {\r\n                            return {file: name.substring(pos + 1), path: name.substring(0, pos)};\r\n                        } else {\r\n                            return {file: id, path: ''};\r\n                        }\r\n                    });\r\n                    this._rmHelper(result, () => callback(null, files));\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    rm(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof name !== 'string') {\r\n            name = '';\r\n        }\r\n\r\n        this.checkFileRights(id, null, options, utils.CONSTS.ACCESS_DELETE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file['delete']) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._rm(id, name, options, callback, meta && meta.notExists ? null : meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    rmAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.rm(id, name, options, (err, files) =>\r\n                err ? reject(err) : resolve(files)));\r\n    }\r\n\r\n    // simulate. redis has no dirs\r\n    mkdir(id, dirName, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (typeof dirName !== 'string') {\r\n            dirName = '';\r\n        }\r\n\r\n        dirName = this.normalizeFilename(dirName);\r\n        if (dirName.startsWith('/')) {\r\n            dirName = dirName.substring(1);\r\n        }\r\n        this.checkFileRights(id, dirName, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    // we create a dummy file (for file this file exists to store meta data)\r\n                    options = options || {};\r\n                    options.virtualFile = true; // this is a virtual File\r\n                    const realName = dirName + (dirName.endsWith('/') ? '' : '/');\r\n                    this.writeFile(id, realName + '_data.json', '', options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    mkdirAsync(id, dirName, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.mkdir(id, dirName, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _chownFileHelper(keys, metas, options, callback) {\r\n        if (!keys || !keys.length) {\r\n            return typeof callback === 'function' && callback();\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        const id   = keys.shift();\r\n        const meta = metas.shift();\r\n        meta.acl.owner      = options.owner;\r\n        meta.acl.ownerGroup = options.ownerGroup;\r\n        this.client.set(id, JSON.stringify(meta), _err =>\r\n            setImmediate(() => this._chownFileHelper(keys, metas, options, callback)));\r\n    }\r\n\r\n    _chownFile(id, name, options, callback, meta) {\r\n        if (!meta) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta.isDir && !meta.notExists) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            meta.acl.owner = options.owner;\r\n            meta.acl.ownerGroup = options.ownerGroup;\r\n            this.client.set(metaID, JSON.stringify(meta), err => {\r\n                const nameArr = name.split('/');\r\n                const file = nameArr.pop();\r\n                const res = [{\r\n                    path:       nameArr.join('/'),\r\n                    file:       file,\r\n                    stats:      meta.stats,\r\n                    isDir:      false,\r\n                    acl:        meta.acl || {},\r\n                    modifiedAt: meta.modifiedAt,\r\n                    createdAt:  meta.createdAt\r\n                }];\r\n                return typeof callback === 'function' && callback(err, res);\r\n            });\r\n            return;\r\n        }\r\n        // it could be dir\r\n        if (!name.endsWith('/*')) {\r\n            name += '/*';\r\n        } else if (name.endsWith('/')) {\r\n            name += '*';\r\n        }\r\n        const dirID = this.getFileId(id, name);\r\n        this.client.keys(dirID, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            if (err || !keys) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n            // Check permissions\r\n            this.client.mget(keys, (err, metas) => {\r\n                const dontCheck = options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n                const keysFiltered = [];\r\n                const objsFiltered = [];\r\n                const processed = [];\r\n                const start = dirID.indexOf('$%$') + 3;\r\n                const end = '$%$meta'.length;\r\n\r\n                metas = metas || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        metas[i] = JSON.parse(metas[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (dontCheck || utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        if (!metas[i] || metas[i].virtualFile) {\r\n                            continue;\r\n                        } // virtual file, ignore\r\n                        keysFiltered.push(keys[i]);\r\n                        objsFiltered.push(metas[i]);\r\n\r\n                        const name = keys[i].substring(start, keys[i].length - end);\r\n                        const nameArr = name.split('/');\r\n                        const file = nameArr.pop();\r\n                        processed.push({\r\n                            path:       nameArr.join('/'),\r\n                            file:       file,\r\n                            stats:      metas[i].stats || {},\r\n                            isDir:      false,\r\n                            acl:        metas[i].acl || {},\r\n                            modifiedAt: metas[i].modifiedAt,\r\n                            createdAt:  metas[i].createdAt\r\n                        });\r\n                    }\r\n                }\r\n                this._chownFileHelper(keysFiltered, objsFiltered, options, err => {\r\n                    return typeof callback === 'function' && callback(err, processed);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    chownFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        if (typeof options !== 'object') {\r\n            options = {owner: options};\r\n        }\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name.startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (!options.ownerGroup && options.group) {\r\n            options.ownerGroup = options.group;\r\n        }\r\n        if (!options.owner && options.user) {\r\n            options.owner = options.user;\r\n        }\r\n\r\n        if (!options.owner) {\r\n            this.log.error(this.namespace + ' user is not defined');\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n            return;\r\n        }\r\n\r\n        if (!options.ownerGroup) {\r\n            // get user group\r\n            this.getUserGroup(options.owner, (user, groups /* , permissions */) => {\r\n                if (!groups || !groups[0]) {\r\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\r\n                    return;\r\n                } else {\r\n                    options.ownerGroup = groups[0];\r\n                }\r\n                this.chownFile(id, name, options, callback);\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chownFile(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chownFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chownFile(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _chmodFileHelper(keys, metas, options, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id   = keys.shift();\r\n            const meta = metas.shift();\r\n            meta.acl.permissions = options.mode;\r\n            this.client.set(id, JSON.stringify(meta), _err =>\r\n                setImmediate(() => this._chmodFileHelper(keys, metas, options, callback)));\r\n        }\r\n    }\r\n\r\n    _chmodFile(id, name, options, callback, meta) {\r\n        if (!meta) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n        }\r\n        name = this.normalizeFilename(name);\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        if (!meta.isDir && !meta.notExists) {\r\n            // it is file\r\n            const metaID = this.getFileId(id, name, true);\r\n            meta.acl.permissions = options.mode;\r\n            this.client.set(metaID, JSON.stringify(meta), err => {\r\n                const nameArr = name.split('/');\r\n                const file = nameArr.pop();\r\n                const res = [{\r\n                    path:       nameArr.join('/'),\r\n                    file:       file,\r\n                    stats:      meta.stats,\r\n                    isDir:      false,\r\n                    acl:        meta.acl || {},\r\n                    modifiedAt: meta.modifiedAt,\r\n                    createdAt:  meta.createdAt\r\n                }];\r\n                return typeof callback === 'function' && callback(err, res);\r\n            });\r\n            return;\r\n        }\r\n        // it could be dir\r\n        if (!name.endsWith('/*')) {\r\n            name += '/*';\r\n        } else if (name.endsWith('/')) {\r\n            name += '*';\r\n        }\r\n        const dirID = this.getFileId(id, name);\r\n        this.client.keys(dirID, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            if (err || !keys) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            keys = keys\r\n                .sort()\r\n                .filter(key => key.match(/\\$%\\$meta$/));\r\n\r\n            // Check permissions\r\n            this.client.mget(keys, (err, objs) => {\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                const keysFiltered = [];\r\n                const objsFiltered = [];\r\n                const processed = [];\r\n                const start = dirID.indexOf('$%$') + 3;\r\n                const end = '$%$meta'.length;\r\n\r\n                objs = objs || [];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    try {\r\n                        objs[i] = JSON.parse(objs[i]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                        continue;\r\n                    }\r\n                    if (dontCheck || utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        if (!objs[i] || objs[i].virtualFile) {\r\n                            continue;\r\n                        } // virtual file, ignore\r\n                        keysFiltered.push(keys[i]);\r\n                        objsFiltered.push(objs[i]);\r\n\r\n                        const name = keys[i].substring(start, keys[i].length - end);\r\n                        const nameArr = name.split('/');\r\n                        const file = nameArr.pop();\r\n                        processed.push({\r\n                            path:       nameArr.join('/'),\r\n                            file:       file,\r\n                            stats:      objs[i].stats,\r\n                            isDir:      false,\r\n                            acl:        objs[i].acl || {},\r\n                            modifiedAt: objs[i].modifiedAt,\r\n                            createdAt:  objs[i].createdAt\r\n                        });\r\n                    }\r\n                }\r\n                this._chmodFileHelper(keysFiltered, objsFiltered, options, err =>\r\n                    typeof callback === 'function' && callback(err, processed));\r\n            });\r\n        });\r\n    }\r\n\r\n    chmodFile(id, name, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n\r\n        if (typeof name !== 'string' || !name.length || name === '/') {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_NOT_FOUND));\r\n        }\r\n\r\n        if (name[0].startsWith('/')) {\r\n            name = name.substring(1);\r\n        }\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {mode: options};\r\n        }\r\n\r\n        if (options.mode === undefined) {\r\n            this.log.error(this.namespace + ' mode is not defined');\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n            return;\r\n        } else if (typeof options.mode === 'string') {\r\n            options.mode = parseInt(options.mode, 16);\r\n        }\r\n\r\n        this.checkFileRights(id, name, options, utils.CONSTS.ACCESS_WRITE, (err, options, meta) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                } else {\r\n                    return this._chmodFile(id, name, options, callback, meta);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chmodFileAsync(id, name, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chmodFile(id, name, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    enableFileCache(enabled, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, _options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else if (typeof callback === 'function') {\r\n                // cache cannot be enabled\r\n                setImmediate(() => typeof callback === 'function' && callback(null, false));\r\n            }\r\n        });\r\n    }\r\n\r\n    enableFileCacheAsync(enabled, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.enableFileCache(enabled, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    // -------------- OBJECT FUNCTIONS -------------------------------------------\r\n    _subscribe(pattern, options, subClient, callback) {\r\n        if (!subClient) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (Array.isArray(pattern)) {\r\n            let count = pattern.length;\r\n            pattern.forEach(pattern => {\r\n                this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\r\n                subClient.psubscribe(this.objNamespace + pattern, err => {\r\n                    if (!err) {\r\n                        subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\r\n                    }\r\n                    !--count && typeof callback === 'function' && callback(err);\r\n                });\r\n\r\n            });\r\n        } else {\r\n            this.log.silly(this.namespace + ' redis psubscribe ' + this.objNamespace + pattern);\r\n            subClient.psubscribe(this.objNamespace + pattern, err => {\r\n                if (!err) {\r\n                    subClient.ioBrokerSubscriptions[this.objNamespace + pattern] = true;\r\n                }\r\n                typeof callback === 'function' && callback(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    subscribeConfig(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._subscribe(pattern, options, this.subSystem, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribe(pattern, options, callback) {\r\n        return this.subscribeConfig(pattern, options, callback);\r\n    }\r\n\r\n    subscribeAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.subscribe(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    subscribeUser(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._subscribe(pattern, options, this.sub, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeUserAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.subscribeUser(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _unsubscribe(pattern, options, subClient, callback) {\r\n        if (!subClient) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (Array.isArray(pattern)) {\r\n            let count = pattern.length;\r\n            pattern.forEach(pattern => {\r\n                this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\r\n                subClient.punsubscribe(this.objNamespace + pattern, err => {\r\n                    if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\r\n                        delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\r\n                    }\r\n                    !--count && typeof callback === 'function' && callback(err);\r\n                });\r\n            });\r\n        } else {\r\n            this.log.silly(this.namespace + ' redis punsubscribe ' + this.objNamespace + pattern);\r\n            subClient.punsubscribe(this.objNamespace + pattern, err => {\r\n                if (!err && subClient.ioBrokerSubscriptions[this.objNamespace + pattern] !== undefined) {\r\n                    delete subClient.ioBrokerSubscriptions[this.objNamespace + pattern];\r\n                }\r\n                typeof callback === 'function' && callback(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    unsubscribeConfig(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._unsubscribe(pattern, options, this.subSystem, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    unsubscribe(pattern, options, callback) {\r\n        return this.unsubscribeConfig(pattern, options, callback);\r\n    }\r\n\r\n    unsubscribeAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unsubscribe(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    unsubscribeUser(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._unsubscribe(pattern, options, this.sub, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    unsubscribeUserAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.unsubscribeUser(pattern, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    _objectHelper(keys, objs, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id  = keys.shift();\r\n            const obj = objs.shift();\r\n            const message = JSON.stringify(obj);\r\n            this.client.set(id, message, err => {\r\n                !err && this.client.publish(id, message).catch(_err => {});\r\n                setImmediate(() => this._objectHelper(keys, objs, callback));\r\n            });\r\n        }\r\n    }\r\n\r\n    _chownObject(pattern, options, callback) {\r\n        this.getConfigKeys(pattern, options, (err, keys) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n                return;\r\n            }\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            this.client.mget(keys, (err, objects) => {\r\n                const filteredKeys = [];\r\n                const filteredObjs = [];\r\n                objects = objects || [];\r\n                for (let k = 0; k < keys.length; k++) {\r\n                    try {\r\n                        objects[k] = JSON.parse(objects[k]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\r\n                        continue;\r\n                    }\r\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        continue;\r\n                    }\r\n                    if (!objects[k].acl) {\r\n                        objects[k].acl = {\r\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\r\n                        };\r\n                        if (objects[k].type === 'state') {\r\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\r\n                        }\r\n                    }\r\n                    objects[k].acl.owner      = options.owner;\r\n                    objects[k].acl.ownerGroup = options.ownerGroup;\r\n                    filteredKeys.push(keys[k]);\r\n                    filteredObjs.push(objects[k]);\r\n                }\r\n                this._objectHelper(filteredKeys, filteredObjs, () =>\r\n                    typeof callback === 'function' && setImmediate(() => callback(null, filteredObjs)));\r\n            });\r\n        }, true);\r\n    }\r\n\r\n    chownObject(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        options.acl = null;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {owner: options};\r\n        }\r\n\r\n        if (!options.ownerGroup && options.group) {\r\n            options.ownerGroup = options.group;\r\n        }\r\n        if (!options.owner && options.user) {\r\n            options.owner = options.user;\r\n        }\r\n\r\n        if (!options.owner) {\r\n            this.log.error(this.namespace + ' user is not defined');\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n            return;\r\n        }\r\n\r\n        if (!options.ownerGroup) {\r\n            // get user group\r\n            this.getUserGroup(options.owner, (user, groups /* , permissions*/) => {\r\n                if (!groups || !groups[0]) {\r\n                    typeof callback === 'function' && setImmediate(() => callback('user \"' + options.owner + '\" belongs to no group'));\r\n                    return;\r\n                } else {\r\n                    options.ownerGroup = groups[0];\r\n                }\r\n                this.chownObject(pattern, options, callback);\r\n            });\r\n            return;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n            } else {\r\n                if (!options.acl.object || !options.acl.object.write) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._chownObject(pattern, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chownObjectAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chownObject(pattern, options, (err, list) =>\r\n                err ? reject(err) : resolve(list)));\r\n    }\r\n\r\n    _chmodObject(pattern, options, callback) {\r\n        this.getConfigKeys(pattern, options, (err, keys) => {\r\n            if (err) {\r\n                typeof callback === 'function' && callback(err);\r\n                return;\r\n            }\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            this.client.mget(keys, (err, objects) => {\r\n                const filteredKeys = [];\r\n                const filteredObjs = [];\r\n                objects = objects || [];\r\n                for (let k = 0; k < keys.length; k++) {\r\n                    try {\r\n                        objects[k] = JSON.parse(objects[k]);\r\n                    } catch (e) {\r\n                        this.log.error(`${this.namespace} Cannot parse JSON ${keys[k]}: ${objects[k]}`);\r\n                        continue;\r\n                    }\r\n                    if (!utils.checkObject(objects[k], options, utils.CONSTS.ACCESS_WRITE)) {\r\n                        continue;\r\n                    }\r\n                    if (!objects[k].acl) {\r\n                        objects[k].acl = {\r\n                            owner:      (this.defaultNewAcl && this.defaultNewAcl.owner)      || utils.CONSTS.SYSTEM_ADMIN_USER,\r\n                            ownerGroup: (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP,\r\n                            object:     (this.defaultNewAcl && this.defaultNewAcl.object)     || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ) // '0644'\r\n                        };\r\n                        if (objects[k].type === 'state') {\r\n                            objects[k].acl.state = (this.defaultNewAcl && this.defaultNewAcl.state) || (utils.CONSTS.ACCESS_USER_RW | utils.CONSTS.ACCESS_GROUP_READ | utils.CONSTS.ACCESS_EVERY_READ); // '0644'\r\n                        }\r\n                    }\r\n                    if (options.object !== undefined) {\r\n                        objects[k].acl.object = options.object;\r\n                    }\r\n                    if (options.state !== undefined) {\r\n                        objects[k].acl.state = options.state;\r\n                    }\r\n                    filteredKeys.push(keys[k]);\r\n                    filteredObjs.push(objects[k]);\r\n                }\r\n                this._objectHelper(filteredKeys, filteredObjs, () =>\r\n                    typeof callback === 'function' && callback(null, filteredObjs));\r\n            });\r\n        }, true);\r\n    }\r\n\r\n    chmodObject(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n        options.acl = null;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {object: options};\r\n        }\r\n\r\n        if (options.mode && !options.object) {\r\n            options.object = options.mode;\r\n        }\r\n\r\n        if (options.object === undefined) {\r\n            this.log.error(this.namespace + ' mode is not defined');\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid parameter'));\r\n        } else if (typeof options.mode === 'string') {\r\n            options.mode = parseInt(options.mode, 16);\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                if (!options.acl.file.write) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._chmodObject(pattern, options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    chmodObjectAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.chmodObject(pattern, options, (err, list) =>\r\n                err ? reject(err) : resolve(list)));\r\n    }\r\n\r\n    _getObject(id, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!id || typeof id !== 'string') {\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid id ' + JSON.stringify(id)));\r\n        }\r\n\r\n        this.client.get(this.objNamespace + id, (err, obj) => {\r\n            if (err) {\r\n                this.log.debug(this.namespace + ' redis get ' + id + ', error - ' + err);\r\n            } else {\r\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + obj);\r\n            }\r\n            try {\r\n                obj = obj ? JSON.parse(obj) : null;\r\n            } catch (e) {\r\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${obj}: ${e.message}`);\r\n            }\r\n            if (obj) {\r\n                // Check permissions\r\n                if (utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ)) {\r\n                    typeof callback === 'function' && callback(null, obj);\r\n                } else {\r\n                    typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n                }\r\n\r\n            } else {\r\n                typeof callback === 'function' && callback(err, obj);\r\n            }\r\n        });\r\n    }\r\n\r\n    getObject(id, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObject(id, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            if (options && options.acl) {\r\n                options.acl = null;\r\n            }\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObject(id, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObject(id, options, (err, obj) =>\r\n                err ? reject(err) : resolve(obj)));\r\n    }\r\n\r\n    _getKeys(pattern, options, callback, dontModify) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        if (!pattern || typeof pattern !== 'string') {\r\n            return typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\r\n        }\r\n\r\n        const r = new RegExp(tools.pattern2RegEx(pattern));\r\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            const result = [];\r\n            if (keys) {\r\n                keys.sort();\r\n                const result = [];\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                if (dontCheck) {\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        const id = keys[i].substring(this.objNamespaceL);\r\n                        if (r.test(id)) {\r\n                            if (!dontModify) {\r\n                                result.push(id);\r\n                            } else {\r\n                                result.push(keys[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                    typeof callback === 'function' && callback(err, result);\r\n                } else {\r\n                    // Check permissions\r\n                    this.client.mget(keys, (err, metas) => {\r\n                        metas = metas || [];\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                metas[i] = JSON.parse(metas[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${metas[i]}`);\r\n                                continue;\r\n                            }\r\n\r\n                            if (r.test(keys[i]) && utils.checkObject(metas[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                                if (!dontModify) {\r\n                                    result.push(keys[i].substring(this.objNamespaceL));\r\n                                } else {\r\n                                    result.push(keys[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                        typeof callback === 'function' && callback(err, result);\r\n                    });\r\n\r\n                }\r\n            } else {\r\n                typeof callback === 'function' && callback(err, result);\r\n            }\r\n        });\r\n    }\r\n\r\n    getKeys(pattern, options, callback, dontModify) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getKeys(pattern, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj), dontModify));\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getKeys(pattern, options, callback, dontModify);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getKeysAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getKeys(id, options, (err, keys) =>\r\n                err ? reject(err) : resolve(keys)));\r\n    }\r\n\r\n    getConfigKeys(pattern, options, callback, dontModify) {\r\n        return this.getKeys(pattern, options, callback, dontModify);\r\n    }\r\n\r\n    _getObjects(keys, options, callback, dontModify) {\r\n        if (!keys) {\r\n            typeof callback === 'function' && setImmediate(() => callback('no keys', null));\r\n            return;\r\n        }\r\n        if (!keys.length) {\r\n            typeof callback === 'function' && setImmediate(() => callback(null, []));\r\n            return;\r\n        }\r\n\r\n        let _keys;\r\n        if (!dontModify) {\r\n            _keys = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                _keys[i] = this.objNamespace + keys[i];\r\n            }\r\n        } else {\r\n            _keys = keys;\r\n        }\r\n\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        this.client.mget(_keys, (err, objs) => {\r\n            let result = [];\r\n            if (err) {\r\n                this.log.warn(this.namespace + ' redis mget ' + (!objs ? 0 : objs.length) + ' ' + _keys.length + ', err: ' + err);\r\n            } else {\r\n                this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis mget ' + (!objs ? 0 : objs.length) + ' ' + _keys.length);\r\n            }\r\n            if (objs) {\r\n                const dontCheck =\r\n                    options.user === utils.CONSTS.SYSTEM_ADMIN_USER ||\r\n                    options.group !== utils.CONSTS.SYSTEM_ADMIN_GROUP ||\r\n                    (options.groups && options.groups.indexOf(utils.CONSTS.SYSTEM_ADMIN_GROUP) !== -1);\r\n\r\n                if (!dontCheck) {\r\n                    for (let i = 0; i < objs.length; i++) {\r\n                        try {\r\n                            objs[i] = JSON.parse(objs[i]);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${objs[i]}`);\r\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\r\n                            continue;\r\n                        }\r\n                        if (utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                            result.push(objs[i]);\r\n                        } else {\r\n                            result.push({error: utils.ERRORS.ERROR_PERMISSION});\r\n                        }\r\n                    }\r\n                } else {\r\n                    result = objs.map((obj, i) => {\r\n                        try {\r\n                            return JSON.parse(obj);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[i]}: ${obj}`);\r\n                            return null;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            typeof callback === 'function' && callback(null, result);\r\n        });\r\n    }\r\n\r\n    getObjects(keys, options, callback, dontModify) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjects(keys, options, (err, objs) =>\r\n                    err ? reject(err) : resolve(objs), dontModify));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjects(keys, options, callback, dontModify);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectsAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjects(id, options, (err, objs) =>\r\n                err ? reject(err) : resolve(objs)));\r\n    }\r\n\r\n    _getObjectsByPattern(pattern, options, callback) {\r\n        if (!pattern || typeof pattern !== 'string') {\r\n            typeof callback === 'function' && setImmediate(() => callback('invalid pattern ' + JSON.stringify(pattern)));\r\n            return;\r\n        }\r\n\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        this.client.keys(this.objNamespace + pattern, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n\r\n            this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis keys ' + keys.length + ' ' + pattern);\r\n            this._getObjects(keys, options, callback, true);\r\n        });\r\n    }\r\n\r\n    getObjectsByPattern(pattern, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectsByPattern(pattern, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_READ, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectsByPattern(pattern, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectsByPatternAsync(pattern, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectsByPattern(pattern, options, (err, objs) =>\r\n                err ? reject(err) : resolve(objs)));\r\n    }\r\n\r\n    _setObject(id, obj, options, callback) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n\r\n        if (!obj) {\r\n            this.log.warn(this.namespace + ' setObject: Argument object is null');\r\n            return typeof callback === 'function' && setImmediate(() => callback('obj is null'));\r\n        }\r\n        if (typeof obj !== 'object') {\r\n            this.log.warn(this.namespace + ' setObject: Argument object is no object: ' + obj);\r\n            return typeof callback === 'function' && setImmediate(() => callback('obj is no object'));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        // make a copy of object, because we will modify it\r\n        obj = deepClone(obj);\r\n\r\n        obj._id = id;\r\n\r\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\r\n            try {\r\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n                typeof callback === 'function' && callback(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n                return;\r\n            }\r\n\r\n            if (!tools.checkNonEditable(oldObj, obj)) {\r\n                typeof callback === 'function' && callback('Invalid password for update of vendor information');\r\n                return;\r\n            }\r\n\r\n            // do not delete common settings, like \"history\" or \"mobile\". It can be erased only with \"null\"\r\n            if (oldObj && oldObj.common) {\r\n                this.preserveSettings.forEach(commonSetting => {\r\n                    // special case if \"custom\"\r\n                    if (commonSetting === 'custom') {\r\n                        if (!oldObj.common.custom) {\r\n                            // do nothing\r\n                        } else if ((!obj.common || !obj.common.custom) && oldObj.common.custom) {\r\n                            obj.common = obj.common || {};\r\n                            obj.common.custom = oldObj.common.custom;\r\n                        } else if (obj.common && obj.common.custom && oldObj.common.custom) {\r\n                            // merge together\r\n                            Object.keys(oldObj.common.custom).forEach(attr => {\r\n                                if (obj.common.custom[attr] === null) {\r\n                                    delete obj.common.custom[attr];\r\n                                } else if (obj.common.custom[attr] === undefined) {\r\n                                    obj.common.custom[attr] = oldObj.common.custom[attr];\r\n                                }\r\n                            });\r\n                        }\r\n                        // remove custom if no one attribute inside\r\n                        if (obj.common && obj.common.custom) {\r\n                            Object.keys(obj.common.custom).forEach(attr => {\r\n                                if (obj.common.custom[attr] === null) {\r\n                                    delete obj.common.custom[attr];\r\n                                }\r\n                            });\r\n                            if (!Object.keys(obj.common.custom).length) {\r\n                                delete obj.common.custom;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // remove settings if desired\r\n                        if (obj.common && obj.common[commonSetting] === null) {\r\n                            delete obj.common[commonSetting];\r\n                        } else\r\n                        // if old setting present and new setting is absent\r\n                        if (oldObj.common[commonSetting] !== undefined && (!obj.common || obj.common[commonSetting] === undefined)) {\r\n                            obj.common = obj.common || {};\r\n                            obj.common[commonSetting] = oldObj.common[commonSetting];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\r\n                if (typeof obj.common.alias.id === 'object') {\r\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                } else {\r\n                    if (typeof obj.common.alias.id !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (oldObj && oldObj.acl && !obj.acl) {\r\n                obj.acl = oldObj.acl;\r\n            }\r\n\r\n            // add user default rights\r\n            if (this.defaultNewAcl && !obj.acl) {\r\n                obj.acl = deepClone(this.defaultNewAcl);\r\n                delete obj.acl.file;\r\n                if (obj.type !== 'state') {\r\n                    delete obj.acl.state;\r\n                }\r\n                // take the owner as current user\r\n                if (options.user) {\r\n                    obj.acl.owner = options.user;\r\n                }\r\n                // take the group as current user's group\r\n                if (options.group) {\r\n                    obj.acl.ownerGroup = options.group;\r\n                } else {\r\n                    obj.acl.ownerGroup = null;\r\n                    return this.getUserGroup(obj.acl.owner, (user, groups /* , permissions */) => {\r\n                        if (!groups || !groups[0]) {\r\n                            options.group = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n                        } else {\r\n                            options.group = groups[0];\r\n                        }\r\n                        obj.acl.ownerGroup = options.group;\r\n                        const message = JSON.stringify(obj);\r\n                        this.client.set(this.objNamespace + id, message, err => {\r\n                            if (!err) {\r\n                                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                                this.client.publish(this.objNamespace + id, message).catch(_err => {});\r\n                                // object updated -> if type changed to meta -> cache\r\n                                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\r\n                                    this.existingMetaObjects[id] = true;\r\n                                }\r\n                            }\r\n                            typeof callback === 'function' && callback(err, {id});\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.defaultNewAcl && obj.acl && !obj.acl.ownerGroup && options.group) {\r\n                obj.acl.ownerGroup = options.group;\r\n            }\r\n\r\n            const message = JSON.stringify(obj);\r\n            this.client.set(this.objNamespace + id, message, err => {\r\n                if (!err) {\r\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                    this.client.publish(this.objNamespace + id, message).catch(_err => {});\r\n                }\r\n                // object updated -> if type changed to meta -> cache\r\n                if (oldObj && oldObj.type === 'meta' && this.existingMetaObjects[id] === false) {\r\n                    this.existingMetaObjects[id] = true;\r\n                }\r\n                typeof callback === 'function' && callback(err, {id});\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * set anew or update object\r\n     *\r\n     * This function writes the object into DB\r\n     *\r\n     * @alias setObject\r\n     * @memberof objectsInMemServer\r\n     * @param {string} id ID of the object\r\n     * @param {object} obj\r\n     * @param {object} options options for access control are optional\r\n     * @param {function} callback return function\r\n     */\r\n    setObject(id, obj, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.setObject(id, obj, options, (err, res) =>\r\n                    err ? reject(err) : resolve(res)));\r\n        }\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._setObject(id, obj, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    setObjectAsync(id, obj, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.setObject(id, obj, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    _delObject(id, options, callback) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n\r\n        // read object\r\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\r\n            if (err) {\r\n                this.log.warn(this.namespace + ' redis get ' + id + ', error - ' + err);\r\n            } else {\r\n                //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis get ' + id + ' ok: ' + oldObj);\r\n            }\r\n            if (!oldObj) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_NOT_FOUND);\r\n            }\r\n\r\n            try {\r\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n            } catch (e) {\r\n                this.log.warn(`${this.namespace} Cannot parse ${id} - ${oldObj}: ${e.message}`);\r\n            }\r\n\r\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\r\n                typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n            } else {\r\n                this.client.del(this.objNamespace + id, err => {\r\n                    if (!err) {\r\n                        //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' null');\r\n                        this.client.publish(this.objNamespace + id, 'null').catch(_err => {});\r\n                        // object has been deleted -> remove from cached meta if there\r\n                        if (this.existingMetaObjects[id]) {\r\n                            this.existingMetaObjects[id] = false;\r\n                        }\r\n                    }\r\n                    typeof callback === 'function' && callback(err);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    delObject(id, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.delObject(id, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_DELETE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._delObject(id, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    delObjectAsync(id, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.delObject(id, options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    // this function is very ineffective. Because reads all objects and then process them\r\n    async _applyViewFunc(func, params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n        }\r\n        const result = {\r\n            rows: []\r\n        };\r\n\r\n        // filters objs which are already present in array by property 'id'\r\n        const filterDuplicates = arr => {\r\n            const included = {};\r\n            const filteredArr = arr.filter(obj => {\r\n                if (included[obj.id]) {\r\n                    return false;\r\n                } else {\r\n                    included[obj.id] = true;\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            return filteredArr;\r\n        };\r\n\r\n        params = params || {};\r\n        params.startkey = params.startkey || '';\r\n        params.endkey   = params.endkey   || '\\u9999';\r\n        const wildcardPos = params.endkey.indexOf('\\u9999');\r\n        let wildCardLastPos = true;\r\n        if (wildcardPos !== -1 && wildcardPos !== params.endkey.length - 1) {\r\n            wildCardLastPos = false; // TODO do in LUA\r\n        }\r\n        let m;\r\n\r\n        // if start and and end keys are equal modify end key\r\n        if (params.startkey === params.endkey) {\r\n            params.endkey = params.endkey + '\\u0000';\r\n        }\r\n\r\n        // filter by type\r\n        if (wildCardLastPos && func && func.map && this.scripts.filter && (m = func.map.match(/if\\s\\(doc\\.type\\s?===?\\s?'(\\w+)'\\)\\semit\\(([^,]+),\\s?doc\\s?\\)/))) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.filter, 5, this.objNamespace, params.startkey, params.endkey, m[1], cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        objs = objs || [];\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            if (m[2] && m[2].trim() === 'doc._id') {\r\n                                return {id: obj._id, value: obj};\r\n                            } else if (m[2] && m[2].trim() === 'doc.common.name' && obj.common) {\r\n                                return {id: obj.common.name, value: obj};\r\n                            } else {\r\n                                this.log.error(`${this.namespace} Cannot filter \"${m[2]}\": ${JSON.stringify(obj)}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // Now we have all objects -> calculate max if desired\r\n            if (func.reduce === '_stats') {\r\n                let max = null;\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    if (max === null || result.rows[i].value > max) {\r\n                        max = result.rows[i].value;\r\n                    }\r\n                }\r\n                if (max !== null) {\r\n                    result.rows = [{id: '_stats', value: {max: max}}];\r\n                } else {\r\n                    result.rows = [];\r\n                }\r\n            }\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by script\r\n        if (wildCardLastPos && func && func.map && this.scripts.script && func.map.indexOf('doc.common.engineType') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.script, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            return {id: obj._id, value: obj};\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by hm-rega programs\r\n        if (wildCardLastPos && func && func.map && this.scripts.programs && func.map.indexOf('doc.native.TypeName === \\'PROGRAM\\'') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.programs, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            return {id: obj._id, value: obj};\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n        // filter by hm-rega variables\r\n        if (wildCardLastPos && func && func.map && this.scripts.variables && func.map.indexOf('doc.native.TypeName === \\'ALARMDP\\'') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.variables, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        const currRows = objs.map(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                                return {id: 'parseError', value: null};\r\n                            }\r\n                            return {id: obj._id, value: obj};\r\n                        });\r\n                        if (currRows.length) {\r\n                            result.rows = [...result.rows, ...currRows];\r\n                        } // endIf\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else\r\n            // filter by custom, redis also returns if common.custom is not present\r\n        if (wildCardLastPos && func && func.map && this.scripts.custom && func.map.indexOf('doc.common.custom') !== -1) {\r\n            let cursor = '0';\r\n            let filterRequired = true;\r\n            do {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                await new Promise(resolve => {\r\n                    this.client.evalsha([this.scripts.custom, 4, this.objNamespace, params.startkey, params.endkey, cursor], (err, objs) => {\r\n                        err && this.log.warn(`${this.namespace} Cannot get view: ${err}`);\r\n                        // if real redis we will have e.g. [[objs..], '0'], else [{}, .., {}]\r\n                        if (Array.isArray(objs[0])) {\r\n                            cursor = objs[1] || '0';\r\n                            objs = objs[0];\r\n                        } else {\r\n                            cursor = '0';\r\n                            filterRequired = false;\r\n                        }\r\n\r\n                        objs.forEach(obj => {\r\n                            try {\r\n                                obj = JSON.parse(obj);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                            }\r\n                            if (obj.common && obj.common.custom) {\r\n                                result.rows.push({id: obj._id, value: obj.common.custom});\r\n                            }\r\n                        });\r\n                        resolve();\r\n                    });\r\n                });\r\n            } while (cursor !== '0');\r\n\r\n            // apply filter if needed\r\n            result.rows = filterRequired ? filterDuplicates(result.rows) : result.rows;\r\n            typeof callback === 'function' && callback(null, result);\r\n        } else {\r\n            this.log.debug(`${this.namespace} No suitable Lua script, fallback to keys!: ${func.map}`);\r\n\r\n            let searchKeys = this.objNamespace + '*';\r\n            if (wildcardPos !== -1) { // Wildcard included\r\n                searchKeys = this.objNamespace + params.endkey.replace(/\\u9999/g, '*');\r\n            }\r\n            // todo: also use scan on fallback\r\n            this.client.keys(searchKeys, (err, keys) => {\r\n                if (!this.client) {\r\n                    return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n                }\r\n                const endAfterWildcard = params.endkey.substr(wildcardPos + 1);\r\n                params.startkey = this.objNamespace + params.startkey;\r\n                params.endkey   = this.objNamespace + params.endkey;\r\n\r\n                keys = keys.sort().filter(key => {\r\n                    if (key && !utils.regCheckId.test(key)) {\r\n                        if (params && wildcardPos > 0) {\r\n                            if (params.startkey && key < params.startkey) {\r\n                                return false;\r\n                            }\r\n                            if (params.endkey && key > params.endkey) {\r\n                                return false;\r\n                            }\r\n                        } else if (params && wildcardPos === 0) {\r\n                            if (!key.endsWith(endAfterWildcard)) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n                this.client.mget(keys, (err, objs) => {\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    function _emit_(id, obj) {\r\n                        result.rows.push({id: id, value: obj});\r\n                    }\r\n\r\n                    const f = eval('(' + func.map.replace(/^function\\(([a-z0-9A-Z_]+)\\)/g, 'function($1, emit)') + ')');\r\n\r\n                    objs = objs || [];\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        try {\r\n                            objs[i] = JSON.parse(objs[i]);\r\n                        } catch (e) {\r\n                            this.log.error(this.namespace + ' Cannot parse JSON ' + keys[i] + ':  ' + objs[i]);\r\n                            continue;\r\n                        }\r\n                        if (!utils.checkObject(objs[i], options, utils.CONSTS.ACCESS_READ)) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (objs[i]) {\r\n                            try {\r\n                                f(objs[i], _emit_);\r\n                            } catch (e) {\r\n                                this.log.error(this.namespace + ' Cannot execute map: ' + e.message);\r\n                            }\r\n                        }\r\n                    }\r\n                    // Calculate max\r\n                    if (func.reduce === '_stats') {\r\n                        let max = null;\r\n                        for (let i = 0; i < result.rows.length; i++) {\r\n                            if (max === null || result.rows[i].value > max) {\r\n                                max = result.rows[i].value;\r\n                            }\r\n                        }\r\n                        if (max !== null) {\r\n                            result.rows = [{id: '_stats', value: {max: max}}];\r\n                        } else {\r\n                            result.rows = [];\r\n                        }\r\n                    }\r\n                    typeof callback === 'function' && callback(null, result);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    _applyView(func, params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this._applyView(func, params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && callback(err);\r\n                } else {\r\n                    return this._applyViewFunc(func, params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _getObjectView(design, search, params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        this.client.get(this.objNamespace + '_design/' + design, (err, obj) => {\r\n            if (obj) {\r\n                try {\r\n                    obj = JSON.parse(obj);\r\n                } catch (e) {\r\n                    this.log.error(`${this.namespace} Cannot parse JSON: ${obj}`);\r\n                    return typeof callback === 'function' && callback(new Error('Cannot parse JSON: \"' + '_design/' + design + '\" / \"' + obj + '\"'));\r\n                }\r\n\r\n                if (obj.views && obj.views[search]) {\r\n                    this._applyViewFunc(obj.views[search], params, options, callback);\r\n                } else {\r\n                    this.log.error(`${this.namespace} Cannot find search \"${search}\" in \"${design}\"`);\r\n                    typeof callback === 'function' && callback(new Error('Cannot find search \"' + search + '\" in \"' + design + '\"'));\r\n                }\r\n            } else {\r\n                this.log.error(`${this.namespace} Cannot find view \"${design}\" for search \"${search}\" : ${err}`);\r\n                typeof callback === 'function' && callback(new Error('Cannot find view \"' + design + '\"'));\r\n            }\r\n        });\r\n    }\r\n\r\n    getObjectView(design, search, params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectView(design, search, params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectView(design, search, params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectViewAsync(design, search, params, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectView(design, search, params, options, (err, arr) =>\r\n                err ? reject(err) : resolve(arr)));\r\n    }\r\n\r\n    _getObjectList(params, options, callback) {\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        //params = {startkey, endkey, include_docs}\r\n        params = params || {};\r\n        params.startkey = params.startkey || '';\r\n        params.endkey = params.endkey || '\\u9999';\r\n        const pattern = (params.endkey.substring(0, params.startkey.length) === params.startkey) ? this.objNamespace + params.startkey + '*' : this.objNamespace + '*';\r\n\r\n        // todo: use lua script for this\r\n        this.client.keys(pattern, (err, keys) => {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const _keys = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const id = keys[i].substring(this.objNamespaceL);\r\n                if (params.startkey && id < params.startkey) {\r\n                    continue;\r\n                }\r\n                if (params.endkey && id > params.endkey) {\r\n                    continue;\r\n                }\r\n                if (!id || utils.regCheckId.test(id) || id.match(/\\|file\\$%\\$/)) {\r\n                    continue;\r\n                }\r\n                if (!params.include_docs && id[0] === '_') {\r\n                    continue;\r\n                }\r\n                _keys.push(keys[i]);\r\n            }\r\n            _keys.sort();\r\n            this.client.mget(_keys, (err, objs) => {\r\n                // return rows with id and doc\r\n                const result = {\r\n                    rows: []\r\n                };\r\n                if (objs) {\r\n                    for (let r = 0; r < objs.length; r++) {\r\n                        try {\r\n                            objs[r] = JSON.parse(objs[r]);\r\n                        } catch (e) {\r\n                            this.log.error(`${this.namespace} Cannot parse JSON ${_keys[r]}: ${objs[r]}`);\r\n                            continue;\r\n                        }\r\n\r\n                        if (!objs[r] || !utils.checkObject(objs[r], options, utils.CONSTS.ACCESS_READ)) {\r\n                            continue;\r\n                        }\r\n                        result.rows.push({id: objs[r]._id, value: objs[r], doc: objs[r]});\r\n                    }\r\n                }\r\n                typeof callback === 'function' && callback(null, result);\r\n            });\r\n        });\r\n    }\r\n\r\n    getObjectList(params, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.getObjectList(params, options, (err, obj) =>\r\n                    err ? reject(err) : resolve(obj)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, 'list', (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._getObjectList(params, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getObjectListAsync(params, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.getObjectList(params, options, (err, arr) =>\r\n                err ? reject(err) : resolve(arr)));\r\n    }\r\n\r\n    // could be optimised, to read object only once. Now it will read 3 times\r\n    _extendObject(id, obj, options, callback, _iteration) {\r\n        if (!id || typeof id !== 'string' || utils.regCheckId.test(id)) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(`Invalid ID: ${id}`));\r\n        }\r\n        if (!this.client) {\r\n            return typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        }\r\n        this.client.get(this.objNamespace + id, (err, oldObj) => {\r\n            try {\r\n                oldObj = oldObj ? JSON.parse(oldObj) : null;\r\n            } catch (e) {\r\n                this.log.error(`${this.namespace} Cannot parse JSON ${id}: ${oldObj}`);\r\n                oldObj = null;\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n            }\r\n            if (!utils.checkObject(oldObj, options, utils.CONSTS.ACCESS_WRITE)) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_PERMISSION);\r\n            }\r\n\r\n            let _oldObj;\r\n            if (oldObj && oldObj.nonEdit) {\r\n                // copy object\r\n                _oldObj = deepClone(oldObj);\r\n            }\r\n\r\n            oldObj = oldObj || {};\r\n            oldObj = extend(true, oldObj, deepClone(obj)); // copy here to prevent \"sandboxed\" objects from JavaScript adapter\r\n            oldObj._id = id;\r\n\r\n            // add user default rights\r\n            if (this.defaultNewAcl && !oldObj.acl) {\r\n                oldObj.acl = deepClone(this.defaultNewAcl);\r\n                delete oldObj.acl.file;\r\n                if (oldObj.type !== 'state') {\r\n                    delete oldObj.acl.state;\r\n                }\r\n\r\n                if (options.owner) {\r\n                    oldObj.acl.owner = options.owner;\r\n\r\n                    if (!options.ownerGroup) {\r\n                        oldObj.acl.ownerGroup = null;\r\n                        return this.getUserGroup(options.owner, (user, groups /*, permissions */) => {\r\n                            if (!groups || !groups[0]) {\r\n                                options.ownerGroup = (this.defaultNewAcl && this.defaultNewAcl.ownerGroup) || utils.CONSTS.SYSTEM_ADMIN_GROUP;\r\n                            } else {\r\n                                options.ownerGroup = groups[0];\r\n                            }\r\n                            this._extendObject(id, obj, options, callback);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.defaultNewAcl && options.ownerGroup && oldObj.acl && !oldObj.acl.ownerGroup) {\r\n                oldObj.acl.ownerGroup = options.ownerGroup;\r\n            }\r\n\r\n            if (obj.common && obj.common.alias && obj.common.alias.id) {\r\n                if (typeof obj.common.alias.id === 'object') {\r\n                    if (typeof obj.common.alias.id.write !== 'string' || typeof obj.common.alias.id.read !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.write.startsWith('alias.') || obj.common.alias.id.read.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                } else {\r\n                    if (typeof obj.common.alias.id !== 'string') {\r\n                        return typeof callback === 'function' && callback('Invalid alias ID');\r\n                    }\r\n\r\n                    if (obj.common.alias.id.startsWith('alias.')) {\r\n                        return typeof callback === 'function' && callback('Cannot make alias on alias');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (_oldObj && !tools.checkNonEditable(_oldObj, oldObj)) {\r\n                return typeof callback === 'function' && callback('Invalid password for update of vendor information');\r\n            }\r\n            const message = JSON.stringify(oldObj);\r\n            this.client.set(this.objNamespace + id, message, err => {\r\n                if (!err) {\r\n                    //this.settings.connection.enhancedLogging && this.log.silly(this.namespace + ' redis publish ' + this.objNamespace + id + ' ' + message);\r\n                    this.client.publish(this.objNamespace + id, message)\r\n                        .catch(_err => {});\r\n                    // extended -> if its now type meta and currently marked as not -> cache\r\n                    if (this.existingMetaObjects[id] === false && oldObj && oldObj.type === 'meta') {\r\n                        this.existingMetaObjects[id] = true;\r\n                    }\r\n                }\r\n                typeof callback === 'function' && callback(err, {id: id, value: oldObj}, id);\r\n            });\r\n        });\r\n    }\r\n\r\n    extendObject(id, obj, options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.extendObject(id, obj, options, (err, res) =>\r\n                    err ? reject(err) : resolve(res)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                return this._extendObject(id, obj, options, callback);\r\n            }\r\n        });\r\n    }\r\n\r\n    extendObjectAsync(id, obj, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.extendObject(id, obj, options, (err, res) =>\r\n                err ? reject(err) : resolve(res)));\r\n    }\r\n\r\n    setConfig(id, obj, options, callback) {\r\n        return this.setObject(id, obj, options, callback);\r\n    }\r\n\r\n    delConfig(id, options, callback) {\r\n        return this.delObject(id, options, callback);\r\n    }\r\n\r\n    getConfig(id, options, callback) {\r\n        return this.getObject(id, options, callback);\r\n    }\r\n\r\n    getConfigs(keys, options, callback, dontModify) {\r\n        return this.getObjects(keys, options, callback, dontModify);\r\n    }\r\n\r\n    _findObject(idOrName, type, options, callback) {\r\n        this._getObject(idOrName, options, (err, obj) => {\r\n            // Assume it is ID\r\n            if (obj && utils.checkObject(obj, options, utils.CONSTS.ACCESS_READ) && (!type || (obj.common && obj.common.type === type))) {\r\n                typeof callback === 'function' && callback(null, idOrName, obj.common.name);\r\n            } else {\r\n                this._getKeys('*', options, (err, keys) =>\r\n                    this.client.mget(keys, (err, objs) => {\r\n                        objs = objs || [];\r\n                        // Assume it is name\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            try {\r\n                                objs[i] = JSON.parse(objs[i]);\r\n                            } catch (e) {\r\n                                this.log.error(`${this.namespace} Cannot parse JSON ${keys[i]}: ${objs[i]}`);\r\n                                continue;\r\n                            }\r\n                            if (objs[i].common &&\r\n                                objs[i].common.name === idOrName &&\r\n                                (!type || (objs[i].common && objs[i].common.type === type))) {\r\n                                return typeof callback === 'function' && callback(null, objs[i]._id, idOrName);\r\n                            }\r\n                        }\r\n                        typeof callback === 'function' && callback(null, null, idOrName);\r\n                    }), true);\r\n            }\r\n        });\r\n    }\r\n\r\n    findObject(idOrName, type, options, callback) {\r\n        if (typeof type === 'function') {\r\n            callback = type;\r\n            options = null;\r\n            type = null;\r\n        }\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        if (!callback) {\r\n            return new Promise((resolve, reject) =>\r\n                this.findObject(idOrName, type, options, (err, id, _idOrName) =>\r\n                    err ? reject(err) : resolve(id)));\r\n        }\r\n\r\n        if (options && options.acl) {\r\n            options.acl = null;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_LIST, (err, options) => {\r\n                if (err) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(err));\r\n                } else {\r\n                    return this._findObject(idOrName, type, options, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    findObjectAsync(idOrName, type, options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.findObject(idOrName, type, options, (err, id, _idOrName) =>\r\n                err ? reject(err) : resolve(id)));\r\n    }\r\n\r\n    // can be called only from js-controller\r\n    addPreserveSettings(settings) {\r\n        if (!Array.isArray(settings)) {\r\n            settings = [settings];\r\n        }\r\n\r\n        for (let s = 0; s < settings.length; s++) {\r\n            if (this.preserveSettings.indexOf(settings[s]) === -1) {\r\n                this.preserveSettings.push(settings[s]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _destroyDBHelper(keys, callback) {\r\n        if (!keys || !keys.length) {\r\n            typeof callback === 'function' && callback();\r\n        } else {\r\n            if (!this.client) {\r\n                return typeof callback === 'function' && callback(utils.ERRORS.ERROR_DB_CLOSED);\r\n            }\r\n            const id = keys.shift();\r\n            this.client.del(id, _err =>\r\n                setImmediate(() => this._destroyDBHelper(keys, callback)));\r\n        }\r\n    }\r\n\r\n    _destroyDB(options, callback) {\r\n        if (!this.client) {\r\n            typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_DB_CLOSED));\r\n        } else {\r\n            this.client.keys(this.redisNamespace + '*', (err, keys) =>\r\n                this._destroyDBHelper(keys, callback));\r\n        }\r\n    }\r\n\r\n    destroyDB(options, callback) {\r\n        if (typeof options === 'function') {\r\n            callback = options;\r\n            options = null;\r\n        }\r\n        options = options || {};\r\n\r\n        utils.checkObjectRights(this, null, null, options, utils.CONSTS.ACCESS_WRITE, (err, options) => {\r\n            if (err) {\r\n                typeof callback === 'function' && setImmediate(() => callback(err));\r\n            } else {\r\n                if (!options.acl.file.write || options.user !== utils.CONSTS.SYSTEM_ADMIN_USER) {\r\n                    typeof callback === 'function' && setImmediate(() => callback(utils.ERRORS.ERROR_PERMISSION));\r\n                } else {\r\n                    return this._destroyDB(options, callback);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    destroyDBAsync(options) {\r\n        return new Promise((resolve, reject) =>\r\n            this.destroyDB(options, err =>\r\n                err ? reject(err) : resolve()));\r\n    }\r\n\r\n    // Destructor of the class. Called by shutting down.\r\n    destroy() {\r\n        this.stop = true;\r\n        if (this.client) {\r\n            try {\r\n                this.client.quit(() =>\r\n                    this.client = null);\r\n            } catch (e) {\r\n                // ignore error\r\n            }\r\n\r\n        }\r\n        if (this.sub) {\r\n            try {\r\n                this.sub.quit(() =>\r\n                    this.sub = null);\r\n            } catch (e) {\r\n                // ignore error\r\n            }\r\n        }\r\n        if (this.subSystem) {\r\n            try {\r\n                this.subSystem.quit(() =>\r\n                    this.subSystem = null);\r\n            } catch (e) {\r\n                // ignore error\r\n            }\r\n        }\r\n    }\r\n\r\n    loadLuaScripts(callback, _scripts) {\r\n        if (!_scripts) {\r\n            if (scriptFiles && scriptFiles.filter) {\r\n                _scripts = [];\r\n                for (const name in scriptFiles) {\r\n                    if (!scriptFiles.hasOwnProperty(name)) {\r\n                        continue;\r\n                    }\r\n                    const shasum = crypto.createHash('sha1');\r\n                    const buf = Buffer.from(scriptFiles[name]);\r\n                    shasum.update(buf);\r\n                    _scripts.push({\r\n                        name,\r\n                        text: buf,\r\n                        hash: shasum.digest('hex')\r\n                    });\r\n                }\r\n            } else {\r\n                _scripts = fs.readdirSync(__dirname + '/lua/').map(name => {\r\n                    const shasum = crypto.createHash('sha1');\r\n                    const script = fs.readFileSync(__dirname + '/lua/' + name);\r\n                    shasum.update(script);\r\n                    const hash = shasum.digest('hex');\r\n                    return {name: name.replace(/\\.lua$/, ''), text: script, hash};\r\n                });\r\n            }\r\n            const hashes = _scripts.map(e => e.hash);\r\n            hashes.unshift('EXISTS');\r\n\r\n            if (!this.client) {\r\n                return;\r\n            }\r\n\r\n            return this.client.script(hashes, (err, arr) => {\r\n                arr && _scripts.forEach((e, i) => _scripts[i].loaded = !!arr[i]);\r\n                this.loadLuaScripts(callback, _scripts);\r\n            });\r\n        }\r\n\r\n        if (!this.client) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < _scripts.length; i++) {\r\n            if (!_scripts[i].loaded) {\r\n                const script = _scripts[i];\r\n                return this.client.script(['LOAD', script.text], (err, hash) => {\r\n                    script.hash = hash;\r\n                    script.loaded = !err;\r\n                    err && this.log.error(this.namespace + ' Cannot load \"' + script.name + '\": ' + err);\r\n                    setImmediate(() => this.loadLuaScripts(callback, _scripts));\r\n                });\r\n            }\r\n        }\r\n        this.scripts = {};\r\n        _scripts.forEach(e => this.scripts[e.name] = e.hash);\r\n        typeof callback === 'function' && callback();\r\n    }\r\n}\r\n\r\nmodule.exports = ObjectsInRedis;"],"file":"../../dist/index.js"}